'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="AuslAsmnRe_DwhClinicoV3")>  _
Partial Public Class DwhClinicoV3DataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertSole_AbilitazioniPrestazioni(instance As Sole_AbilitazioniPrestazioni)
    End Sub
  Partial Private Sub UpdateSole_AbilitazioniPrestazioni(instance As Sole_AbilitazioniPrestazioni)
    End Sub
  Partial Private Sub DeleteSole_AbilitazioniPrestazioni(instance As Sole_AbilitazioniPrestazioni)
    End Sub
  Partial Private Sub InsertSole_AbilitazioniSistemi(instance As Sole_AbilitazioniSistemi)
    End Sub
  Partial Private Sub UpdateSole_AbilitazioniSistemi(instance As Sole_AbilitazioniSistemi)
    End Sub
  Partial Private Sub DeleteSole_AbilitazioniSistemi(instance As Sole_AbilitazioniSistemi)
    End Sub
  Partial Private Sub InsertAbilitazioniTipologieSole(instance As AbilitazioniTipologieSole)
    End Sub
  Partial Private Sub UpdateAbilitazioniTipologieSole(instance As AbilitazioniTipologieSole)
    End Sub
  Partial Private Sub DeleteAbilitazioniTipologieSole(instance As AbilitazioniTipologieSole)
    End Sub
  Partial Private Sub InsertAbilitazioniSistemiEroganti(instance As AbilitazioniSistemiEroganti)
    End Sub
  Partial Private Sub UpdateAbilitazioniSistemiEroganti(instance As AbilitazioniSistemiEroganti)
    End Sub
  Partial Private Sub DeleteAbilitazioniSistemiEroganti(instance As AbilitazioniSistemiEroganti)
    End Sub
  Partial Private Sub InsertAbilitazioniTipiEroganti(instance As AbilitazioniTipiEroganti)
    End Sub
  Partial Private Sub UpdateAbilitazioniTipiEroganti(instance As AbilitazioniTipiEroganti)
    End Sub
  Partial Private Sub DeleteAbilitazioniTipiEroganti(instance As AbilitazioniTipiEroganti)
    End Sub
  Partial Private Sub InsertAbilitazioniAziendeEroganti(instance As AbilitazioniAziendeEroganti)
    End Sub
  Partial Private Sub UpdateAbilitazioniAziendeEroganti(instance As AbilitazioniAziendeEroganti)
    End Sub
  Partial Private Sub DeleteAbilitazioniAziendeEroganti(instance As AbilitazioniAziendeEroganti)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.System.Configuration.ConfigurationManager.ConnectionStrings("AuslAsmnRe_DwhClinicoV3ConnectionString").ConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property Sole_AbilitazioniPrestazionis() As System.Data.Linq.Table(Of Sole_AbilitazioniPrestazioni)
		Get
			Return Me.GetTable(Of Sole_AbilitazioniPrestazioni)
		End Get
	End Property
	
	Public ReadOnly Property Sole_AbilitazioniSistemis() As System.Data.Linq.Table(Of Sole_AbilitazioniSistemi)
		Get
			Return Me.GetTable(Of Sole_AbilitazioniSistemi)
		End Get
	End Property
	
	Public ReadOnly Property AbilitazioniTipologieSoles() As System.Data.Linq.Table(Of AbilitazioniTipologieSole)
		Get
			Return Me.GetTable(Of AbilitazioniTipologieSole)
		End Get
	End Property
	
	Public ReadOnly Property AbilitazioniSistemiErogantis() As System.Data.Linq.Table(Of AbilitazioniSistemiEroganti)
		Get
			Return Me.GetTable(Of AbilitazioniSistemiEroganti)
		End Get
	End Property
	
	Public ReadOnly Property AbilitazioniTipiErogantis() As System.Data.Linq.Table(Of AbilitazioniTipiEroganti)
		Get
			Return Me.GetTable(Of AbilitazioniTipiEroganti)
		End Get
	End Property
	
	Public ReadOnly Property AbilitazioniAziendeErogantis() As System.Data.Linq.Table(Of AbilitazioniAziendeEroganti)
		Get
			Return Me.GetTable(Of AbilitazioniAziendeEroganti)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="sole.AbilitazioniPrestazioni")>  _
Partial Public Class Sole_AbilitazioniPrestazioni
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _SistemaErogante As String
	
	Private _AziendaErogante As String
	
	Private _PrestazioneCodice As String
	
	Private _DataModifica As Date
	
	Private _UtenteModifica As String
	
	Private _Abilitato As Boolean
	
	Private _DisabilitaControlliBloccoInvio As Boolean
	
	Private _OreRitardoInvio As Integer
	
	Private _AbilitazioniAziendeEroganti As EntityRef(Of AbilitazioniAziendeEroganti)
	
	Private _AbilitazioniSistemiEroganti As EntityRef(Of AbilitazioniSistemiEroganti)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnSistemaEroganteChanging(value As String)
    End Sub
    Partial Private Sub OnSistemaEroganteChanged()
    End Sub
    Partial Private Sub OnAziendaEroganteChanging(value As String)
    End Sub
    Partial Private Sub OnAziendaEroganteChanged()
    End Sub
    Partial Private Sub OnPrestazioneCodiceChanging(value As String)
    End Sub
    Partial Private Sub OnPrestazioneCodiceChanged()
    End Sub
    Partial Private Sub OnDataModificaChanging(value As Date)
    End Sub
    Partial Private Sub OnDataModificaChanged()
    End Sub
    Partial Private Sub OnUtenteModificaChanging(value As String)
    End Sub
    Partial Private Sub OnUtenteModificaChanged()
    End Sub
    Partial Private Sub OnAbilitatoChanging(value As Boolean)
    End Sub
    Partial Private Sub OnAbilitatoChanged()
    End Sub
    Partial Private Sub OnDisabilitaControlliBloccoInvioChanging(value As Boolean)
    End Sub
    Partial Private Sub OnDisabilitaControlliBloccoInvioChanged()
    End Sub
    Partial Private Sub OnOreRitardoInvioChanging(value As Integer)
    End Sub
    Partial Private Sub OnOreRitardoInvioChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._AbilitazioniAziendeEroganti = CType(Nothing, EntityRef(Of AbilitazioniAziendeEroganti))
		Me._AbilitazioniSistemiEroganti = CType(Nothing, EntityRef(Of AbilitazioniSistemiEroganti))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SistemaErogante", DbType:="VarChar(16) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property SistemaErogante() As String
		Get
			Return Me._SistemaErogante
		End Get
		Set
			If (String.Equals(Me._SistemaErogante, value) = false) Then
				If Me._AbilitazioniSistemiEroganti.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnSistemaEroganteChanging(value)
				Me.SendPropertyChanging
				Me._SistemaErogante = value
				Me.SendPropertyChanged("SistemaErogante")
				Me.OnSistemaEroganteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AziendaErogante", DbType:="VarChar(16) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property AziendaErogante() As String
		Get
			Return Me._AziendaErogante
		End Get
		Set
			If (String.Equals(Me._AziendaErogante, value) = false) Then
				If Me._AbilitazioniAziendeEroganti.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnAziendaEroganteChanging(value)
				Me.SendPropertyChanging
				Me._AziendaErogante = value
				Me.SendPropertyChanged("AziendaErogante")
				Me.OnAziendaEroganteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PrestazioneCodice", DbType:="VarChar(12) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property PrestazioneCodice() As String
		Get
			Return Me._PrestazioneCodice
		End Get
		Set
			If (String.Equals(Me._PrestazioneCodice, value) = false) Then
				Me.OnPrestazioneCodiceChanging(value)
				Me.SendPropertyChanging
				Me._PrestazioneCodice = value
				Me.SendPropertyChanged("PrestazioneCodice")
				Me.OnPrestazioneCodiceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DataModifica", DbType:="DateTime NOT NULL")>  _
	Public Property DataModifica() As Date
		Get
			Return Me._DataModifica
		End Get
		Set
			If ((Me._DataModifica = value)  _
						= false) Then
				Me.OnDataModificaChanging(value)
				Me.SendPropertyChanging
				Me._DataModifica = value
				Me.SendPropertyChanged("DataModifica")
				Me.OnDataModificaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UtenteModifica", DbType:="VarChar(64) NOT NULL", CanBeNull:=false)>  _
	Public Property UtenteModifica() As String
		Get
			Return Me._UtenteModifica
		End Get
		Set
			If (String.Equals(Me._UtenteModifica, value) = false) Then
				Me.OnUtenteModificaChanging(value)
				Me.SendPropertyChanging
				Me._UtenteModifica = value
				Me.SendPropertyChanged("UtenteModifica")
				Me.OnUtenteModificaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Abilitato", DbType:="Bit NOT NULL")>  _
	Public Property Abilitato() As Boolean
		Get
			Return Me._Abilitato
		End Get
		Set
			If ((Me._Abilitato = value)  _
						= false) Then
				Me.OnAbilitatoChanging(value)
				Me.SendPropertyChanging
				Me._Abilitato = value
				Me.SendPropertyChanged("Abilitato")
				Me.OnAbilitatoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DisabilitaControlliBloccoInvio", DbType:="Bit NOT NULL")>  _
	Public Property DisabilitaControlliBloccoInvio() As Boolean
		Get
			Return Me._DisabilitaControlliBloccoInvio
		End Get
		Set
			If ((Me._DisabilitaControlliBloccoInvio = value)  _
						= false) Then
				Me.OnDisabilitaControlliBloccoInvioChanging(value)
				Me.SendPropertyChanging
				Me._DisabilitaControlliBloccoInvio = value
				Me.SendPropertyChanged("DisabilitaControlliBloccoInvio")
				Me.OnDisabilitaControlliBloccoInvioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OreRitardoInvio", DbType:="Int NOT NULL")>  _
	Public Property OreRitardoInvio() As Integer
		Get
			Return Me._OreRitardoInvio
		End Get
		Set
			If ((Me._OreRitardoInvio = value)  _
						= false) Then
				Me.OnOreRitardoInvioChanging(value)
				Me.SendPropertyChanging
				Me._OreRitardoInvio = value
				Me.SendPropertyChanged("OreRitardoInvio")
				Me.OnOreRitardoInvioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="AbilitazioniAziendeEroganti_Sole_AbilitazioniPrestazioni", Storage:="_AbilitazioniAziendeEroganti", ThisKey:="AziendaErogante", OtherKey:="AziendaErogante", IsForeignKey:=true)>  _
	Public Property AbilitazioniAziendeEroganti() As AbilitazioniAziendeEroganti
		Get
			Return Me._AbilitazioniAziendeEroganti.Entity
		End Get
		Set
			Dim previousValue As AbilitazioniAziendeEroganti = Me._AbilitazioniAziendeEroganti.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._AbilitazioniAziendeEroganti.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._AbilitazioniAziendeEroganti.Entity = Nothing
					previousValue.Sole_AbilitazioniPrestazionis.Remove(Me)
				End If
				Me._AbilitazioniAziendeEroganti.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.Sole_AbilitazioniPrestazionis.Add(Me)
					Me._AziendaErogante = value.AziendaErogante
				Else
					Me._AziendaErogante = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("AbilitazioniAziendeEroganti")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="AbilitazioniSistemiEroganti_Sole_AbilitazioniPrestazioni", Storage:="_AbilitazioniSistemiEroganti", ThisKey:="SistemaErogante", OtherKey:="SistemaErogante", IsForeignKey:=true)>  _
	Public Property AbilitazioniSistemiEroganti() As AbilitazioniSistemiEroganti
		Get
			Return Me._AbilitazioniSistemiEroganti.Entity
		End Get
		Set
			Dim previousValue As AbilitazioniSistemiEroganti = Me._AbilitazioniSistemiEroganti.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._AbilitazioniSistemiEroganti.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._AbilitazioniSistemiEroganti.Entity = Nothing
					previousValue.Sole_AbilitazioniPrestazionis.Remove(Me)
				End If
				Me._AbilitazioniSistemiEroganti.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.Sole_AbilitazioniPrestazionis.Add(Me)
					Me._SistemaErogante = value.SistemaErogante
				Else
					Me._SistemaErogante = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("AbilitazioniSistemiEroganti")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="sole.AbilitazioniSistemi")>  _
Partial Public Class Sole_AbilitazioniSistemi
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Id As System.Guid
	
	Private _SistemaErogante As String
	
	Private _AziendaErogante As String
	
	Private _TipoErogante As String
	
	Private _Abilitato As Boolean
	
	Private _DataInizio As System.Nullable(Of Date)
	
	Private _DataFine As System.Nullable(Of Date)
	
	Private _DataModifica As Date
	
	Private _UtenteModifica As String
	
	Private _TipologiaSole As String
	
	Private _Mittente As String
	
	Private _OreRitardoInvio As Integer
	
	Private _DisabilitaControlloRegime As Boolean
	
	Private _DisabilitaControlloInviabile As Boolean
	
	Private _DisabilitaControlloConsensi As Boolean
	
	Private _Priorita As Integer
	
	Private _CorrelazioneInvio As String
	
	Private _InviaOscurati As Boolean
	
	Private _InviaConfidenziali As Boolean
	
	Private _InviaLiberaProfessione As Boolean
	
	Private _AbilitazioniSistemiEroganti As EntityRef(Of AbilitazioniSistemiEroganti)
	
	Private _AbilitazioniAziendeEroganti As EntityRef(Of AbilitazioniAziendeEroganti)
	
	Private _AbilitazioniTipologieSole As EntityRef(Of AbilitazioniTipologieSole)
	
	Private _AbilitazioniTipiEroganti As EntityRef(Of AbilitazioniTipiEroganti)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdChanging(value As System.Guid)
    End Sub
    Partial Private Sub OnIdChanged()
    End Sub
    Partial Private Sub OnSistemaEroganteChanging(value As String)
    End Sub
    Partial Private Sub OnSistemaEroganteChanged()
    End Sub
    Partial Private Sub OnAziendaEroganteChanging(value As String)
    End Sub
    Partial Private Sub OnAziendaEroganteChanged()
    End Sub
    Partial Private Sub OnTipoEroganteChanging(value As String)
    End Sub
    Partial Private Sub OnTipoEroganteChanged()
    End Sub
    Partial Private Sub OnAbilitatoChanging(value As Boolean)
    End Sub
    Partial Private Sub OnAbilitatoChanged()
    End Sub
    Partial Private Sub OnDataInizioChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDataInizioChanged()
    End Sub
    Partial Private Sub OnDataFineChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDataFineChanged()
    End Sub
    Partial Private Sub OnDataModificaChanging(value As Date)
    End Sub
    Partial Private Sub OnDataModificaChanged()
    End Sub
    Partial Private Sub OnUtenteModificaChanging(value As String)
    End Sub
    Partial Private Sub OnUtenteModificaChanged()
    End Sub
    Partial Private Sub OnTipologiaSoleChanging(value As String)
    End Sub
    Partial Private Sub OnTipologiaSoleChanged()
    End Sub
    Partial Private Sub OnMittenteChanging(value As String)
    End Sub
    Partial Private Sub OnMittenteChanged()
    End Sub
    Partial Private Sub OnOreRitardoInvioChanging(value As Integer)
    End Sub
    Partial Private Sub OnOreRitardoInvioChanged()
    End Sub
    Partial Private Sub OnDisabilitaControlloRegimeChanging(value As Boolean)
    End Sub
    Partial Private Sub OnDisabilitaControlloRegimeChanged()
    End Sub
    Partial Private Sub OnDisabilitaControlloInviabileChanging(value As Boolean)
    End Sub
    Partial Private Sub OnDisabilitaControlloInviabileChanged()
    End Sub
    Partial Private Sub OnDisabilitaControlloConsensiChanging(value As Boolean)
    End Sub
    Partial Private Sub OnDisabilitaControlloConsensiChanged()
    End Sub
    Partial Private Sub OnPrioritaChanging(value As Integer)
    End Sub
    Partial Private Sub OnPrioritaChanged()
    End Sub
    Partial Private Sub OnCorrelazioneInvioChanging(value As String)
    End Sub
    Partial Private Sub OnCorrelazioneInvioChanged()
    End Sub
    Partial Private Sub OnInviaOscuratiChanging(value As Boolean)
    End Sub
    Partial Private Sub OnInviaOscuratiChanged()
    End Sub
    Partial Private Sub OnInviaConfidenzialiChanging(value As Boolean)
    End Sub
    Partial Private Sub OnInviaConfidenzialiChanged()
    End Sub
    Partial Private Sub OnInviaLiberaProfessioneChanging(value As Boolean)
    End Sub
    Partial Private Sub OnInviaLiberaProfessioneChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._AbilitazioniSistemiEroganti = CType(Nothing, EntityRef(Of AbilitazioniSistemiEroganti))
		Me._AbilitazioniAziendeEroganti = CType(Nothing, EntityRef(Of AbilitazioniAziendeEroganti))
		Me._AbilitazioniTipologieSole = CType(Nothing, EntityRef(Of AbilitazioniTipologieSole))
		Me._AbilitazioniTipiEroganti = CType(Nothing, EntityRef(Of AbilitazioniTipiEroganti))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id", DbType:="UniqueIdentifier NOT NULL", IsDbGenerated:=true)>  _
	Public Property Id() As System.Guid
		Get
			Return Me._Id
		End Get
		Set
			If ((Me._Id = value)  _
						= false) Then
				Me.OnIdChanging(value)
				Me.SendPropertyChanging
				Me._Id = value
				Me.SendPropertyChanged("Id")
				Me.OnIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SistemaErogante", DbType:="VarChar(16) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property SistemaErogante() As String
		Get
			Return Me._SistemaErogante
		End Get
		Set
			If (String.Equals(Me._SistemaErogante, value) = false) Then
				If Me._AbilitazioniSistemiEroganti.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnSistemaEroganteChanging(value)
				Me.SendPropertyChanging
				Me._SistemaErogante = value
				Me.SendPropertyChanged("SistemaErogante")
				Me.OnSistemaEroganteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AziendaErogante", DbType:="VarChar(16) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property AziendaErogante() As String
		Get
			Return Me._AziendaErogante
		End Get
		Set
			If (String.Equals(Me._AziendaErogante, value) = false) Then
				If Me._AbilitazioniAziendeEroganti.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnAziendaEroganteChanging(value)
				Me.SendPropertyChanging
				Me._AziendaErogante = value
				Me.SendPropertyChanged("AziendaErogante")
				Me.OnAziendaEroganteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TipoErogante", DbType:="VarChar(16) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property TipoErogante() As String
		Get
			Return Me._TipoErogante
		End Get
		Set
			If (String.Equals(Me._TipoErogante, value) = false) Then
				If Me._AbilitazioniTipiEroganti.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnTipoEroganteChanging(value)
				Me.SendPropertyChanging
				Me._TipoErogante = value
				Me.SendPropertyChanged("TipoErogante")
				Me.OnTipoEroganteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Abilitato", DbType:="Bit NOT NULL")>  _
	Public Property Abilitato() As Boolean
		Get
			Return Me._Abilitato
		End Get
		Set
			If ((Me._Abilitato = value)  _
						= false) Then
				Me.OnAbilitatoChanging(value)
				Me.SendPropertyChanging
				Me._Abilitato = value
				Me.SendPropertyChanged("Abilitato")
				Me.OnAbilitatoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DataInizio", DbType:="DateTime")>  _
	Public Property DataInizio() As System.Nullable(Of Date)
		Get
			Return Me._DataInizio
		End Get
		Set
			If (Me._DataInizio.Equals(value) = false) Then
				Me.OnDataInizioChanging(value)
				Me.SendPropertyChanging
				Me._DataInizio = value
				Me.SendPropertyChanged("DataInizio")
				Me.OnDataInizioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DataFine", DbType:="DateTime")>  _
	Public Property DataFine() As System.Nullable(Of Date)
		Get
			Return Me._DataFine
		End Get
		Set
			If (Me._DataFine.Equals(value) = false) Then
				Me.OnDataFineChanging(value)
				Me.SendPropertyChanging
				Me._DataFine = value
				Me.SendPropertyChanged("DataFine")
				Me.OnDataFineChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DataModifica", DbType:="DateTime NOT NULL")>  _
	Public Property DataModifica() As Date
		Get
			Return Me._DataModifica
		End Get
		Set
			If ((Me._DataModifica = value)  _
						= false) Then
				Me.OnDataModificaChanging(value)
				Me.SendPropertyChanging
				Me._DataModifica = value
				Me.SendPropertyChanged("DataModifica")
				Me.OnDataModificaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UtenteModifica", DbType:="VarChar(64) NOT NULL", CanBeNull:=false)>  _
	Public Property UtenteModifica() As String
		Get
			Return Me._UtenteModifica
		End Get
		Set
			If (String.Equals(Me._UtenteModifica, value) = false) Then
				Me.OnUtenteModificaChanging(value)
				Me.SendPropertyChanging
				Me._UtenteModifica = value
				Me.SendPropertyChanged("UtenteModifica")
				Me.OnUtenteModificaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TipologiaSole", DbType:="VarChar(16) NOT NULL", CanBeNull:=false)>  _
	Public Property TipologiaSole() As String
		Get
			Return Me._TipologiaSole
		End Get
		Set
			If (String.Equals(Me._TipologiaSole, value) = false) Then
				If Me._AbilitazioniTipologieSole.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnTipologiaSoleChanging(value)
				Me.SendPropertyChanging
				Me._TipologiaSole = value
				Me.SendPropertyChanged("TipologiaSole")
				Me.OnTipologiaSoleChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Mittente", DbType:="VarChar(64) NOT NULL", CanBeNull:=false)>  _
	Public Property Mittente() As String
		Get
			Return Me._Mittente
		End Get
		Set
			If (String.Equals(Me._Mittente, value) = false) Then
				Me.OnMittenteChanging(value)
				Me.SendPropertyChanging
				Me._Mittente = value
				Me.SendPropertyChanged("Mittente")
				Me.OnMittenteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OreRitardoInvio", DbType:="Int NOT NULL")>  _
	Public Property OreRitardoInvio() As Integer
		Get
			Return Me._OreRitardoInvio
		End Get
		Set
			If ((Me._OreRitardoInvio = value)  _
						= false) Then
				Me.OnOreRitardoInvioChanging(value)
				Me.SendPropertyChanging
				Me._OreRitardoInvio = value
				Me.SendPropertyChanged("OreRitardoInvio")
				Me.OnOreRitardoInvioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DisabilitaControlloRegime", DbType:="Bit NOT NULL")>  _
	Public Property DisabilitaControlloRegime() As Boolean
		Get
			Return Me._DisabilitaControlloRegime
		End Get
		Set
			If ((Me._DisabilitaControlloRegime = value)  _
						= false) Then
				Me.OnDisabilitaControlloRegimeChanging(value)
				Me.SendPropertyChanging
				Me._DisabilitaControlloRegime = value
				Me.SendPropertyChanged("DisabilitaControlloRegime")
				Me.OnDisabilitaControlloRegimeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DisabilitaControlloInviabile", DbType:="Bit NOT NULL")>  _
	Public Property DisabilitaControlloInviabile() As Boolean
		Get
			Return Me._DisabilitaControlloInviabile
		End Get
		Set
			If ((Me._DisabilitaControlloInviabile = value)  _
						= false) Then
				Me.OnDisabilitaControlloInviabileChanging(value)
				Me.SendPropertyChanging
				Me._DisabilitaControlloInviabile = value
				Me.SendPropertyChanged("DisabilitaControlloInviabile")
				Me.OnDisabilitaControlloInviabileChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DisabilitaControlloConsensi", DbType:="Bit NOT NULL")>  _
	Public Property DisabilitaControlloConsensi() As Boolean
		Get
			Return Me._DisabilitaControlloConsensi
		End Get
		Set
			If ((Me._DisabilitaControlloConsensi = value)  _
						= false) Then
				Me.OnDisabilitaControlloConsensiChanging(value)
				Me.SendPropertyChanging
				Me._DisabilitaControlloConsensi = value
				Me.SendPropertyChanged("DisabilitaControlloConsensi")
				Me.OnDisabilitaControlloConsensiChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Priorita", DbType:="Int NOT NULL")>  _
	Public Property Priorita() As Integer
		Get
			Return Me._Priorita
		End Get
		Set
			If ((Me._Priorita = value)  _
						= false) Then
				Me.OnPrioritaChanging(value)
				Me.SendPropertyChanging
				Me._Priorita = value
				Me.SendPropertyChanged("Priorita")
				Me.OnPrioritaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CorrelazioneInvio", DbType:="VarChar(16)")>  _
	Public Property CorrelazioneInvio() As String
		Get
			Return Me._CorrelazioneInvio
		End Get
		Set
			If (String.Equals(Me._CorrelazioneInvio, value) = false) Then
				Me.OnCorrelazioneInvioChanging(value)
				Me.SendPropertyChanging
				Me._CorrelazioneInvio = value
				Me.SendPropertyChanged("CorrelazioneInvio")
				Me.OnCorrelazioneInvioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InviaOscurati", DbType:="Bit NOT NULL")>  _
	Public Property InviaOscurati() As Boolean
		Get
			Return Me._InviaOscurati
		End Get
		Set
			If ((Me._InviaOscurati = value)  _
						= false) Then
				Me.OnInviaOscuratiChanging(value)
				Me.SendPropertyChanging
				Me._InviaOscurati = value
				Me.SendPropertyChanged("InviaOscurati")
				Me.OnInviaOscuratiChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InviaConfidenziali", DbType:="Bit NOT NULL")>  _
	Public Property InviaConfidenziali() As Boolean
		Get
			Return Me._InviaConfidenziali
		End Get
		Set
			If ((Me._InviaConfidenziali = value)  _
						= false) Then
				Me.OnInviaConfidenzialiChanging(value)
				Me.SendPropertyChanging
				Me._InviaConfidenziali = value
				Me.SendPropertyChanged("InviaConfidenziali")
				Me.OnInviaConfidenzialiChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_InviaLiberaProfessione", DbType:="Bit NOT NULL")>  _
	Public Property InviaLiberaProfessione() As Boolean
		Get
			Return Me._InviaLiberaProfessione
		End Get
		Set
			If ((Me._InviaLiberaProfessione = value)  _
						= false) Then
				Me.OnInviaLiberaProfessioneChanging(value)
				Me.SendPropertyChanging
				Me._InviaLiberaProfessione = value
				Me.SendPropertyChanged("InviaLiberaProfessione")
				Me.OnInviaLiberaProfessioneChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="AbilitazioniSistemiEroganti_Sole_AbilitazioniSistemi", Storage:="_AbilitazioniSistemiEroganti", ThisKey:="SistemaErogante", OtherKey:="SistemaErogante", IsForeignKey:=true)>  _
	Public Property AbilitazioniSistemiEroganti() As AbilitazioniSistemiEroganti
		Get
			Return Me._AbilitazioniSistemiEroganti.Entity
		End Get
		Set
			Dim previousValue As AbilitazioniSistemiEroganti = Me._AbilitazioniSistemiEroganti.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._AbilitazioniSistemiEroganti.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._AbilitazioniSistemiEroganti.Entity = Nothing
					previousValue.Sole_AbilitazioniSistemis.Remove(Me)
				End If
				Me._AbilitazioniSistemiEroganti.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.Sole_AbilitazioniSistemis.Add(Me)
					Me._SistemaErogante = value.SistemaErogante
				Else
					Me._SistemaErogante = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("AbilitazioniSistemiEroganti")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="AbilitazioniAziendeEroganti_Sole_AbilitazioniSistemi", Storage:="_AbilitazioniAziendeEroganti", ThisKey:="AziendaErogante", OtherKey:="AziendaErogante", IsForeignKey:=true)>  _
	Public Property AbilitazioniAziendeEroganti() As AbilitazioniAziendeEroganti
		Get
			Return Me._AbilitazioniAziendeEroganti.Entity
		End Get
		Set
			Dim previousValue As AbilitazioniAziendeEroganti = Me._AbilitazioniAziendeEroganti.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._AbilitazioniAziendeEroganti.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._AbilitazioniAziendeEroganti.Entity = Nothing
					previousValue.Sole_AbilitazioniSistemis.Remove(Me)
				End If
				Me._AbilitazioniAziendeEroganti.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.Sole_AbilitazioniSistemis.Add(Me)
					Me._AziendaErogante = value.AziendaErogante
				Else
					Me._AziendaErogante = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("AbilitazioniAziendeEroganti")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="AbilitazioniTipologieSole_Sole_AbilitazioniSistemi", Storage:="_AbilitazioniTipologieSole", ThisKey:="TipologiaSole", OtherKey:="TipologiaSole", IsForeignKey:=true)>  _
	Public Property AbilitazioniTipologieSole() As AbilitazioniTipologieSole
		Get
			Return Me._AbilitazioniTipologieSole.Entity
		End Get
		Set
			Dim previousValue As AbilitazioniTipologieSole = Me._AbilitazioniTipologieSole.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._AbilitazioniTipologieSole.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._AbilitazioniTipologieSole.Entity = Nothing
					previousValue.Sole_AbilitazioniSistemis.Remove(Me)
				End If
				Me._AbilitazioniTipologieSole.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.Sole_AbilitazioniSistemis.Add(Me)
					Me._TipologiaSole = value.TipologiaSole
				Else
					Me._TipologiaSole = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("AbilitazioniTipologieSole")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="AbilitazioniTipiEroganti_Sole_AbilitazioniSistemi", Storage:="_AbilitazioniTipiEroganti", ThisKey:="TipoErogante", OtherKey:="TipoErogante", IsForeignKey:=true)>  _
	Public Property AbilitazioniTipiEroganti() As AbilitazioniTipiEroganti
		Get
			Return Me._AbilitazioniTipiEroganti.Entity
		End Get
		Set
			Dim previousValue As AbilitazioniTipiEroganti = Me._AbilitazioniTipiEroganti.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._AbilitazioniTipiEroganti.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._AbilitazioniTipiEroganti.Entity = Nothing
					previousValue.Sole_AbilitazioniSistemis.Remove(Me)
				End If
				Me._AbilitazioniTipiEroganti.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.Sole_AbilitazioniSistemis.Add(Me)
					Me._TipoErogante = value.TipoErogante
				Else
					Me._TipoErogante = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("AbilitazioniTipiEroganti")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="sole_admin.AbilitazioniTipologieSole")>  _
Partial Public Class AbilitazioniTipologieSole
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _TipologiaSole As String
	
	Private _Sole_AbilitazioniSistemis As EntitySet(Of Sole_AbilitazioniSistemi)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnTipologiaSoleChanging(value As String)
    End Sub
    Partial Private Sub OnTipologiaSoleChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._Sole_AbilitazioniSistemis = New EntitySet(Of Sole_AbilitazioniSistemi)(AddressOf Me.attach_Sole_AbilitazioniSistemis, AddressOf Me.detach_Sole_AbilitazioniSistemis)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TipologiaSole", DbType:="VarChar(16) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property TipologiaSole() As String
		Get
			Return Me._TipologiaSole
		End Get
		Set
			If (String.Equals(Me._TipologiaSole, value) = false) Then
				Me.OnTipologiaSoleChanging(value)
				Me.SendPropertyChanging
				Me._TipologiaSole = value
				Me.SendPropertyChanged("TipologiaSole")
				Me.OnTipologiaSoleChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="AbilitazioniTipologieSole_Sole_AbilitazioniSistemi", Storage:="_Sole_AbilitazioniSistemis", ThisKey:="TipologiaSole", OtherKey:="TipologiaSole")>  _
	Public Property Sole_AbilitazioniSistemis() As EntitySet(Of Sole_AbilitazioniSistemi)
		Get
			Return Me._Sole_AbilitazioniSistemis
		End Get
		Set
			Me._Sole_AbilitazioniSistemis.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_Sole_AbilitazioniSistemis(ByVal entity As Sole_AbilitazioniSistemi)
		Me.SendPropertyChanging
		entity.AbilitazioniTipologieSole = Me
	End Sub
	
	Private Sub detach_Sole_AbilitazioniSistemis(ByVal entity As Sole_AbilitazioniSistemi)
		Me.SendPropertyChanging
		entity.AbilitazioniTipologieSole = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="sole_admin.AbilitazioniSistemiEroganti")>  _
Partial Public Class AbilitazioniSistemiEroganti
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _SistemaErogante As String
	
	Private _Sole_AbilitazioniPrestazionis As EntitySet(Of Sole_AbilitazioniPrestazioni)
	
	Private _Sole_AbilitazioniSistemis As EntitySet(Of Sole_AbilitazioniSistemi)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnSistemaEroganteChanging(value As String)
    End Sub
    Partial Private Sub OnSistemaEroganteChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._Sole_AbilitazioniPrestazionis = New EntitySet(Of Sole_AbilitazioniPrestazioni)(AddressOf Me.attach_Sole_AbilitazioniPrestazionis, AddressOf Me.detach_Sole_AbilitazioniPrestazionis)
		Me._Sole_AbilitazioniSistemis = New EntitySet(Of Sole_AbilitazioniSistemi)(AddressOf Me.attach_Sole_AbilitazioniSistemis, AddressOf Me.detach_Sole_AbilitazioniSistemis)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SistemaErogante", DbType:="VarChar(16) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property SistemaErogante() As String
		Get
			Return Me._SistemaErogante
		End Get
		Set
			If (String.Equals(Me._SistemaErogante, value) = false) Then
				Me.OnSistemaEroganteChanging(value)
				Me.SendPropertyChanging
				Me._SistemaErogante = value
				Me.SendPropertyChanged("SistemaErogante")
				Me.OnSistemaEroganteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="AbilitazioniSistemiEroganti_Sole_AbilitazioniPrestazioni", Storage:="_Sole_AbilitazioniPrestazionis", ThisKey:="SistemaErogante", OtherKey:="SistemaErogante")>  _
	Public Property Sole_AbilitazioniPrestazionis() As EntitySet(Of Sole_AbilitazioniPrestazioni)
		Get
			Return Me._Sole_AbilitazioniPrestazionis
		End Get
		Set
			Me._Sole_AbilitazioniPrestazionis.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="AbilitazioniSistemiEroganti_Sole_AbilitazioniSistemi", Storage:="_Sole_AbilitazioniSistemis", ThisKey:="SistemaErogante", OtherKey:="SistemaErogante")>  _
	Public Property Sole_AbilitazioniSistemis() As EntitySet(Of Sole_AbilitazioniSistemi)
		Get
			Return Me._Sole_AbilitazioniSistemis
		End Get
		Set
			Me._Sole_AbilitazioniSistemis.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_Sole_AbilitazioniPrestazionis(ByVal entity As Sole_AbilitazioniPrestazioni)
		Me.SendPropertyChanging
		entity.AbilitazioniSistemiEroganti = Me
	End Sub
	
	Private Sub detach_Sole_AbilitazioniPrestazionis(ByVal entity As Sole_AbilitazioniPrestazioni)
		Me.SendPropertyChanging
		entity.AbilitazioniSistemiEroganti = Nothing
	End Sub
	
	Private Sub attach_Sole_AbilitazioniSistemis(ByVal entity As Sole_AbilitazioniSistemi)
		Me.SendPropertyChanging
		entity.AbilitazioniSistemiEroganti = Me
	End Sub
	
	Private Sub detach_Sole_AbilitazioniSistemis(ByVal entity As Sole_AbilitazioniSistemi)
		Me.SendPropertyChanging
		entity.AbilitazioniSistemiEroganti = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="sole_admin.AbilitazioniTipiEroganti")>  _
Partial Public Class AbilitazioniTipiEroganti
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _TipoErogante As String
	
	Private _Sole_AbilitazioniSistemis As EntitySet(Of Sole_AbilitazioniSistemi)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnTipoEroganteChanging(value As String)
    End Sub
    Partial Private Sub OnTipoEroganteChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._Sole_AbilitazioniSistemis = New EntitySet(Of Sole_AbilitazioniSistemi)(AddressOf Me.attach_Sole_AbilitazioniSistemis, AddressOf Me.detach_Sole_AbilitazioniSistemis)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TipoErogante", DbType:="VarChar(16) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property TipoErogante() As String
		Get
			Return Me._TipoErogante
		End Get
		Set
			If (String.Equals(Me._TipoErogante, value) = false) Then
				Me.OnTipoEroganteChanging(value)
				Me.SendPropertyChanging
				Me._TipoErogante = value
				Me.SendPropertyChanged("TipoErogante")
				Me.OnTipoEroganteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="AbilitazioniTipiEroganti_Sole_AbilitazioniSistemi", Storage:="_Sole_AbilitazioniSistemis", ThisKey:="TipoErogante", OtherKey:="TipoErogante")>  _
	Public Property Sole_AbilitazioniSistemis() As EntitySet(Of Sole_AbilitazioniSistemi)
		Get
			Return Me._Sole_AbilitazioniSistemis
		End Get
		Set
			Me._Sole_AbilitazioniSistemis.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_Sole_AbilitazioniSistemis(ByVal entity As Sole_AbilitazioniSistemi)
		Me.SendPropertyChanging
		entity.AbilitazioniTipiEroganti = Me
	End Sub
	
	Private Sub detach_Sole_AbilitazioniSistemis(ByVal entity As Sole_AbilitazioniSistemi)
		Me.SendPropertyChanging
		entity.AbilitazioniTipiEroganti = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="sole_admin.AbilitazioniAziendeEroganti")>  _
Partial Public Class AbilitazioniAziendeEroganti
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _AziendaErogante As String
	
	Private _Sole_AbilitazioniPrestazionis As EntitySet(Of Sole_AbilitazioniPrestazioni)
	
	Private _Sole_AbilitazioniSistemis As EntitySet(Of Sole_AbilitazioniSistemi)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnAziendaEroganteChanging(value As String)
    End Sub
    Partial Private Sub OnAziendaEroganteChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._Sole_AbilitazioniPrestazionis = New EntitySet(Of Sole_AbilitazioniPrestazioni)(AddressOf Me.attach_Sole_AbilitazioniPrestazionis, AddressOf Me.detach_Sole_AbilitazioniPrestazionis)
		Me._Sole_AbilitazioniSistemis = New EntitySet(Of Sole_AbilitazioniSistemi)(AddressOf Me.attach_Sole_AbilitazioniSistemis, AddressOf Me.detach_Sole_AbilitazioniSistemis)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AziendaErogante", DbType:="VarChar(16) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property AziendaErogante() As String
		Get
			Return Me._AziendaErogante
		End Get
		Set
			If (String.Equals(Me._AziendaErogante, value) = false) Then
				Me.OnAziendaEroganteChanging(value)
				Me.SendPropertyChanging
				Me._AziendaErogante = value
				Me.SendPropertyChanged("AziendaErogante")
				Me.OnAziendaEroganteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="AbilitazioniAziendeEroganti_Sole_AbilitazioniPrestazioni", Storage:="_Sole_AbilitazioniPrestazionis", ThisKey:="AziendaErogante", OtherKey:="AziendaErogante")>  _
	Public Property Sole_AbilitazioniPrestazionis() As EntitySet(Of Sole_AbilitazioniPrestazioni)
		Get
			Return Me._Sole_AbilitazioniPrestazionis
		End Get
		Set
			Me._Sole_AbilitazioniPrestazionis.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="AbilitazioniAziendeEroganti_Sole_AbilitazioniSistemi", Storage:="_Sole_AbilitazioniSistemis", ThisKey:="AziendaErogante", OtherKey:="AziendaErogante")>  _
	Public Property Sole_AbilitazioniSistemis() As EntitySet(Of Sole_AbilitazioniSistemi)
		Get
			Return Me._Sole_AbilitazioniSistemis
		End Get
		Set
			Me._Sole_AbilitazioniSistemis.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_Sole_AbilitazioniPrestazionis(ByVal entity As Sole_AbilitazioniPrestazioni)
		Me.SendPropertyChanging
		entity.AbilitazioniAziendeEroganti = Me
	End Sub
	
	Private Sub detach_Sole_AbilitazioniPrestazionis(ByVal entity As Sole_AbilitazioniPrestazioni)
		Me.SendPropertyChanging
		entity.AbilitazioniAziendeEroganti = Nothing
	End Sub
	
	Private Sub attach_Sole_AbilitazioniSistemis(ByVal entity As Sole_AbilitazioniSistemi)
		Me.SendPropertyChanging
		entity.AbilitazioniAziendeEroganti = Me
	End Sub
	
	Private Sub detach_Sole_AbilitazioniSistemis(ByVal entity As Sole_AbilitazioniSistemi)
		Me.SendPropertyChanging
		entity.AbilitazioniAziendeEroganti = Nothing
	End Sub
End Class
