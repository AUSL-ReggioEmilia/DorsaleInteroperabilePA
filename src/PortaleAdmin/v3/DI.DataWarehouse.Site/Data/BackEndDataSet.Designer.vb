'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace DI.DataWarehouse.Admin.Data
    
    '''<summary>
    '''Represents a strongly typed in-memory cache of data.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
     Global.System.Xml.Serialization.XmlRootAttribute("BackEndDataSet"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
    Partial Public Class BackEndDataSet
        Inherits Global.System.Data.DataSet
        
        Private tableRefertiStiliLista As RefertiStiliListaDataTable
        
        Private tableRefertiNoteLista As RefertiNoteListaDataTable
        
        Private tableRefertiNoteDettaglio As RefertiNoteDettaglioDataTable
        
        Private tableSistemiErogantiCombo As SistemiErogantiComboDataTable
        
        Private tableSistemiErogantiDocumentiLista As SistemiErogantiDocumentiListaDataTable
        
        Private tableSistemiErogantiDocumentiDettaglio As SistemiErogantiDocumentiDettaglioDataTable
        
        Private tableBevsSistemiErogantiDocumentiLista As BevsSistemiErogantiDocumentiListaDataTable
        
        Private tableBeRefertiLista As BeRefertiListaDataTable
        
        Private tableStampeSottoscrizioniStatiLista As StampeSottoscrizioniStatiListaDataTable
        
        Private tableStampeSottoscrizioniTipoRefertiLista As StampeSottoscrizioniTipoRefertiListaDataTable
        
        Private tableStampeSottoscrizioniTipoSottoscrizioniLista As StampeSottoscrizioniTipoSottoscrizioniListaDataTable
        
        Private tableStampeSottoscrizioniSistemiErogantiLista As StampeSottoscrizioniSistemiErogantiListaDataTable
        
        Private tableStampeSottoscrizioniRepartiRichiedentiLista As StampeSottoscrizioniRepartiRichiedentiListaDataTable
        
        Private tableStampeSottoscrizioniLista As StampeSottoscrizioniListaDataTable
        
        Private tableStampeSottoscrizioniDettaglio As StampeSottoscrizioniDettaglioDataTable
        
        Private tableStampeSottoscrizioniRepartiRichiedentiSelezionabili As StampeSottoscrizioniRepartiRichiedentiSelezionabiliDataTable
        
        Private tableSistemiErogantiLista As SistemiErogantiListaDataTable
        
        Private tableAziendeErogantiLista As AziendeErogantiListaDataTable
        
        Private tableGetDocumentoSistemiEroganti As GetDocumentoSistemiErogantiDataTable
        
        Private tableUtenti As UtentiDataTable
        
        Private tableRuoli As RuoliDataTable
        
        Private tableSACUtenti As SACUtentiDataTable
        
        Private tableTipiReferto As TipiRefertoDataTable
        
        Private tableBevsSistemiEroganti As BevsSistemiErogantiDataTable
        
        Private tableMMGSistemiAbilitatiCerca As MMGSistemiAbilitatiCercaDataTable
        
        Private tableBevsSistemiErogantiCodiciCombo As BevsSistemiErogantiCodiciComboDataTable
        
        Private tableBeRicoveriLista As BeRicoveriListaDataTable
        
        Private tableBevsAttributiRicoveroOttieni As BevsAttributiRicoveroOttieniDataTable
        
        Private tableBevsEventiRicoveroOttieni As BevsEventiRicoveroOttieniDataTable
        
        Private tableBevsAttributiEventoOttieni As BevsAttributiEventoOttieniDataTable
        
        Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.BeginInit
            Me.InitClass
            Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
            AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context, false)
            If (Me.IsBinarySerialized(info, context) = true) Then
                Me.InitVars(false)
                Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
                AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
                AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
                Return
            End If
            Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
            If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
                Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
                ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
                If (Not (ds.Tables("RefertiStiliLista")) Is Nothing) Then
                    MyBase.Tables.Add(New RefertiStiliListaDataTable(ds.Tables("RefertiStiliLista")))
                End If
                If (Not (ds.Tables("RefertiNoteLista")) Is Nothing) Then
                    MyBase.Tables.Add(New RefertiNoteListaDataTable(ds.Tables("RefertiNoteLista")))
                End If
                If (Not (ds.Tables("RefertiNoteDettaglio")) Is Nothing) Then
                    MyBase.Tables.Add(New RefertiNoteDettaglioDataTable(ds.Tables("RefertiNoteDettaglio")))
                End If
                If (Not (ds.Tables("SistemiErogantiCombo")) Is Nothing) Then
                    MyBase.Tables.Add(New SistemiErogantiComboDataTable(ds.Tables("SistemiErogantiCombo")))
                End If
                If (Not (ds.Tables("SistemiErogantiDocumentiLista")) Is Nothing) Then
                    MyBase.Tables.Add(New SistemiErogantiDocumentiListaDataTable(ds.Tables("SistemiErogantiDocumentiLista")))
                End If
                If (Not (ds.Tables("SistemiErogantiDocumentiDettaglio")) Is Nothing) Then
                    MyBase.Tables.Add(New SistemiErogantiDocumentiDettaglioDataTable(ds.Tables("SistemiErogantiDocumentiDettaglio")))
                End If
                If (Not (ds.Tables("BevsSistemiErogantiDocumentiLista")) Is Nothing) Then
                    MyBase.Tables.Add(New BevsSistemiErogantiDocumentiListaDataTable(ds.Tables("BevsSistemiErogantiDocumentiLista")))
                End If
                If (Not (ds.Tables("BeRefertiLista")) Is Nothing) Then
                    MyBase.Tables.Add(New BeRefertiListaDataTable(ds.Tables("BeRefertiLista")))
                End If
                If (Not (ds.Tables("StampeSottoscrizioniStatiLista")) Is Nothing) Then
                    MyBase.Tables.Add(New StampeSottoscrizioniStatiListaDataTable(ds.Tables("StampeSottoscrizioniStatiLista")))
                End If
                If (Not (ds.Tables("StampeSottoscrizioniTipoRefertiLista")) Is Nothing) Then
                    MyBase.Tables.Add(New StampeSottoscrizioniTipoRefertiListaDataTable(ds.Tables("StampeSottoscrizioniTipoRefertiLista")))
                End If
                If (Not (ds.Tables("StampeSottoscrizioniTipoSottoscrizioniLista")) Is Nothing) Then
                    MyBase.Tables.Add(New StampeSottoscrizioniTipoSottoscrizioniListaDataTable(ds.Tables("StampeSottoscrizioniTipoSottoscrizioniLista")))
                End If
                If (Not (ds.Tables("StampeSottoscrizioniSistemiErogantiLista")) Is Nothing) Then
                    MyBase.Tables.Add(New StampeSottoscrizioniSistemiErogantiListaDataTable(ds.Tables("StampeSottoscrizioniSistemiErogantiLista")))
                End If
                If (Not (ds.Tables("StampeSottoscrizioniRepartiRichiedentiLista")) Is Nothing) Then
                    MyBase.Tables.Add(New StampeSottoscrizioniRepartiRichiedentiListaDataTable(ds.Tables("StampeSottoscrizioniRepartiRichiedentiLista")))
                End If
                If (Not (ds.Tables("StampeSottoscrizioniLista")) Is Nothing) Then
                    MyBase.Tables.Add(New StampeSottoscrizioniListaDataTable(ds.Tables("StampeSottoscrizioniLista")))
                End If
                If (Not (ds.Tables("StampeSottoscrizioniDettaglio")) Is Nothing) Then
                    MyBase.Tables.Add(New StampeSottoscrizioniDettaglioDataTable(ds.Tables("StampeSottoscrizioniDettaglio")))
                End If
                If (Not (ds.Tables("StampeSottoscrizioniRepartiRichiedentiSelezionabili")) Is Nothing) Then
                    MyBase.Tables.Add(New StampeSottoscrizioniRepartiRichiedentiSelezionabiliDataTable(ds.Tables("StampeSottoscrizioniRepartiRichiedentiSelezionabili")))
                End If
                If (Not (ds.Tables("SistemiErogantiLista")) Is Nothing) Then
                    MyBase.Tables.Add(New SistemiErogantiListaDataTable(ds.Tables("SistemiErogantiLista")))
                End If
                If (Not (ds.Tables("AziendeErogantiLista")) Is Nothing) Then
                    MyBase.Tables.Add(New AziendeErogantiListaDataTable(ds.Tables("AziendeErogantiLista")))
                End If
                If (Not (ds.Tables("GetDocumentoSistemiEroganti")) Is Nothing) Then
                    MyBase.Tables.Add(New GetDocumentoSistemiErogantiDataTable(ds.Tables("GetDocumentoSistemiEroganti")))
                End If
                If (Not (ds.Tables("Utenti")) Is Nothing) Then
                    MyBase.Tables.Add(New UtentiDataTable(ds.Tables("Utenti")))
                End If
                If (Not (ds.Tables("Ruoli")) Is Nothing) Then
                    MyBase.Tables.Add(New RuoliDataTable(ds.Tables("Ruoli")))
                End If
                If (Not (ds.Tables("SACUtenti")) Is Nothing) Then
                    MyBase.Tables.Add(New SACUtentiDataTable(ds.Tables("SACUtenti")))
                End If
                If (Not (ds.Tables("TipiReferto")) Is Nothing) Then
                    MyBase.Tables.Add(New TipiRefertoDataTable(ds.Tables("TipiReferto")))
                End If
                If (Not (ds.Tables("BevsSistemiEroganti")) Is Nothing) Then
                    MyBase.Tables.Add(New BevsSistemiErogantiDataTable(ds.Tables("BevsSistemiEroganti")))
                End If
                If (Not (ds.Tables("MMGSistemiAbilitatiCerca")) Is Nothing) Then
                    MyBase.Tables.Add(New MMGSistemiAbilitatiCercaDataTable(ds.Tables("MMGSistemiAbilitatiCerca")))
                End If
                If (Not (ds.Tables("BevsSistemiErogantiCodiciCombo")) Is Nothing) Then
                    MyBase.Tables.Add(New BevsSistemiErogantiCodiciComboDataTable(ds.Tables("BevsSistemiErogantiCodiciCombo")))
                End If
                If (Not (ds.Tables("BeRicoveriLista")) Is Nothing) Then
                    MyBase.Tables.Add(New BeRicoveriListaDataTable(ds.Tables("BeRicoveriLista")))
                End If
                If (Not (ds.Tables("BevsAttributiRicoveroOttieni")) Is Nothing) Then
                    MyBase.Tables.Add(New BevsAttributiRicoveroOttieniDataTable(ds.Tables("BevsAttributiRicoveroOttieni")))
                End If
                If (Not (ds.Tables("BevsEventiRicoveroOttieni")) Is Nothing) Then
                    MyBase.Tables.Add(New BevsEventiRicoveroOttieniDataTable(ds.Tables("BevsEventiRicoveroOttieni")))
                End If
                If (Not (ds.Tables("BevsAttributiEventoOttieni")) Is Nothing) Then
                    MyBase.Tables.Add(New BevsAttributiEventoOttieniDataTable(ds.Tables("BevsAttributiEventoOttieni")))
                End If
                Me.DataSetName = ds.DataSetName
                Me.Prefix = ds.Prefix
                Me.Namespace = ds.Namespace
                Me.Locale = ds.Locale
                Me.CaseSensitive = ds.CaseSensitive
                Me.EnforceConstraints = ds.EnforceConstraints
                Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
                Me.InitVars
            Else
                Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            End If
            Me.GetSerializationData(info, context)
            Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false),  _
         Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
        Public ReadOnly Property RefertiStiliLista() As RefertiStiliListaDataTable
            Get
                Return Me.tableRefertiStiliLista
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false),  _
         Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
        Public ReadOnly Property RefertiNoteLista() As RefertiNoteListaDataTable
            Get
                Return Me.tableRefertiNoteLista
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false),  _
         Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
        Public ReadOnly Property RefertiNoteDettaglio() As RefertiNoteDettaglioDataTable
            Get
                Return Me.tableRefertiNoteDettaglio
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false),  _
         Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
        Public ReadOnly Property SistemiErogantiCombo() As SistemiErogantiComboDataTable
            Get
                Return Me.tableSistemiErogantiCombo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false),  _
         Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
        Public ReadOnly Property SistemiErogantiDocumentiLista() As SistemiErogantiDocumentiListaDataTable
            Get
                Return Me.tableSistemiErogantiDocumentiLista
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false),  _
         Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
        Public ReadOnly Property SistemiErogantiDocumentiDettaglio() As SistemiErogantiDocumentiDettaglioDataTable
            Get
                Return Me.tableSistemiErogantiDocumentiDettaglio
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false),  _
         Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
        Public ReadOnly Property BevsSistemiErogantiDocumentiLista() As BevsSistemiErogantiDocumentiListaDataTable
            Get
                Return Me.tableBevsSistemiErogantiDocumentiLista
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false),  _
         Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
        Public ReadOnly Property BeRefertiLista() As BeRefertiListaDataTable
            Get
                Return Me.tableBeRefertiLista
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false),  _
         Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
        Public ReadOnly Property StampeSottoscrizioniStatiLista() As StampeSottoscrizioniStatiListaDataTable
            Get
                Return Me.tableStampeSottoscrizioniStatiLista
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false),  _
         Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
        Public ReadOnly Property StampeSottoscrizioniTipoRefertiLista() As StampeSottoscrizioniTipoRefertiListaDataTable
            Get
                Return Me.tableStampeSottoscrizioniTipoRefertiLista
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false),  _
         Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
        Public ReadOnly Property StampeSottoscrizioniTipoSottoscrizioniLista() As StampeSottoscrizioniTipoSottoscrizioniListaDataTable
            Get
                Return Me.tableStampeSottoscrizioniTipoSottoscrizioniLista
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false),  _
         Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
        Public ReadOnly Property StampeSottoscrizioniSistemiErogantiLista() As StampeSottoscrizioniSistemiErogantiListaDataTable
            Get
                Return Me.tableStampeSottoscrizioniSistemiErogantiLista
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false),  _
         Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
        Public ReadOnly Property StampeSottoscrizioniRepartiRichiedentiLista() As StampeSottoscrizioniRepartiRichiedentiListaDataTable
            Get
                Return Me.tableStampeSottoscrizioniRepartiRichiedentiLista
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false),  _
         Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
        Public ReadOnly Property StampeSottoscrizioniLista() As StampeSottoscrizioniListaDataTable
            Get
                Return Me.tableStampeSottoscrizioniLista
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false),  _
         Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
        Public ReadOnly Property StampeSottoscrizioniDettaglio() As StampeSottoscrizioniDettaglioDataTable
            Get
                Return Me.tableStampeSottoscrizioniDettaglio
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false),  _
         Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
        Public ReadOnly Property StampeSottoscrizioniRepartiRichiedentiSelezionabili() As StampeSottoscrizioniRepartiRichiedentiSelezionabiliDataTable
            Get
                Return Me.tableStampeSottoscrizioniRepartiRichiedentiSelezionabili
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false),  _
         Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
        Public ReadOnly Property SistemiErogantiLista() As SistemiErogantiListaDataTable
            Get
                Return Me.tableSistemiErogantiLista
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false),  _
         Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
        Public ReadOnly Property AziendeErogantiLista() As AziendeErogantiListaDataTable
            Get
                Return Me.tableAziendeErogantiLista
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false),  _
         Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
        Public ReadOnly Property GetDocumentoSistemiEroganti() As GetDocumentoSistemiErogantiDataTable
            Get
                Return Me.tableGetDocumentoSistemiEroganti
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false),  _
         Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
        Public ReadOnly Property Utenti() As UtentiDataTable
            Get
                Return Me.tableUtenti
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false),  _
         Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
        Public ReadOnly Property Ruoli() As RuoliDataTable
            Get
                Return Me.tableRuoli
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false),  _
         Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
        Public ReadOnly Property SACUtenti() As SACUtentiDataTable
            Get
                Return Me.tableSACUtenti
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false),  _
         Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
        Public ReadOnly Property TipiReferto() As TipiRefertoDataTable
            Get
                Return Me.tableTipiReferto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false),  _
         Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
        Public ReadOnly Property BevsSistemiEroganti() As BevsSistemiErogantiDataTable
            Get
                Return Me.tableBevsSistemiEroganti
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false),  _
         Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
        Public ReadOnly Property MMGSistemiAbilitatiCerca() As MMGSistemiAbilitatiCercaDataTable
            Get
                Return Me.tableMMGSistemiAbilitatiCerca
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false),  _
         Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
        Public ReadOnly Property BevsSistemiErogantiCodiciCombo() As BevsSistemiErogantiCodiciComboDataTable
            Get
                Return Me.tableBevsSistemiErogantiCodiciCombo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false),  _
         Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
        Public ReadOnly Property BeRicoveriLista() As BeRicoveriListaDataTable
            Get
                Return Me.tableBeRicoveriLista
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false),  _
         Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
        Public ReadOnly Property BevsAttributiRicoveroOttieni() As BevsAttributiRicoveroOttieniDataTable
            Get
                Return Me.tableBevsAttributiRicoveroOttieni
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false),  _
         Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
        Public ReadOnly Property BevsEventiRicoveroOttieni() As BevsEventiRicoveroOttieniDataTable
            Get
                Return Me.tableBevsEventiRicoveroOttieni
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false),  _
         Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
        Public ReadOnly Property BevsAttributiEventoOttieni() As BevsAttributiEventoOttieniDataTable
            Get
                Return Me.tableBevsAttributiEventoOttieni
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.BrowsableAttribute(true),  _
         Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
        Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
            Get
                Return Me._schemaSerializationMode
            End Get
            Set
                Me._schemaSerializationMode = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
        Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
            Get
                Return MyBase.Tables
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
        Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
            Get
                Return MyBase.Relations
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub InitializeDerivedDataSet()
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataSet
            Dim cln As BackEndDataSet = CType(MyBase.Clone,BackEndDataSet)
            cln.InitVars
            cln.SchemaSerializationMode = Me.SchemaSerializationMode
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function ShouldSerializeTables() As Boolean
            Return false
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function ShouldSerializeRelations() As Boolean
            Return false
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
            If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
                Me.Reset
                Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
                ds.ReadXml(reader)
                If (Not (ds.Tables("RefertiStiliLista")) Is Nothing) Then
                    MyBase.Tables.Add(New RefertiStiliListaDataTable(ds.Tables("RefertiStiliLista")))
                End If
                If (Not (ds.Tables("RefertiNoteLista")) Is Nothing) Then
                    MyBase.Tables.Add(New RefertiNoteListaDataTable(ds.Tables("RefertiNoteLista")))
                End If
                If (Not (ds.Tables("RefertiNoteDettaglio")) Is Nothing) Then
                    MyBase.Tables.Add(New RefertiNoteDettaglioDataTable(ds.Tables("RefertiNoteDettaglio")))
                End If
                If (Not (ds.Tables("SistemiErogantiCombo")) Is Nothing) Then
                    MyBase.Tables.Add(New SistemiErogantiComboDataTable(ds.Tables("SistemiErogantiCombo")))
                End If
                If (Not (ds.Tables("SistemiErogantiDocumentiLista")) Is Nothing) Then
                    MyBase.Tables.Add(New SistemiErogantiDocumentiListaDataTable(ds.Tables("SistemiErogantiDocumentiLista")))
                End If
                If (Not (ds.Tables("SistemiErogantiDocumentiDettaglio")) Is Nothing) Then
                    MyBase.Tables.Add(New SistemiErogantiDocumentiDettaglioDataTable(ds.Tables("SistemiErogantiDocumentiDettaglio")))
                End If
                If (Not (ds.Tables("BevsSistemiErogantiDocumentiLista")) Is Nothing) Then
                    MyBase.Tables.Add(New BevsSistemiErogantiDocumentiListaDataTable(ds.Tables("BevsSistemiErogantiDocumentiLista")))
                End If
                If (Not (ds.Tables("BeRefertiLista")) Is Nothing) Then
                    MyBase.Tables.Add(New BeRefertiListaDataTable(ds.Tables("BeRefertiLista")))
                End If
                If (Not (ds.Tables("StampeSottoscrizioniStatiLista")) Is Nothing) Then
                    MyBase.Tables.Add(New StampeSottoscrizioniStatiListaDataTable(ds.Tables("StampeSottoscrizioniStatiLista")))
                End If
                If (Not (ds.Tables("StampeSottoscrizioniTipoRefertiLista")) Is Nothing) Then
                    MyBase.Tables.Add(New StampeSottoscrizioniTipoRefertiListaDataTable(ds.Tables("StampeSottoscrizioniTipoRefertiLista")))
                End If
                If (Not (ds.Tables("StampeSottoscrizioniTipoSottoscrizioniLista")) Is Nothing) Then
                    MyBase.Tables.Add(New StampeSottoscrizioniTipoSottoscrizioniListaDataTable(ds.Tables("StampeSottoscrizioniTipoSottoscrizioniLista")))
                End If
                If (Not (ds.Tables("StampeSottoscrizioniSistemiErogantiLista")) Is Nothing) Then
                    MyBase.Tables.Add(New StampeSottoscrizioniSistemiErogantiListaDataTable(ds.Tables("StampeSottoscrizioniSistemiErogantiLista")))
                End If
                If (Not (ds.Tables("StampeSottoscrizioniRepartiRichiedentiLista")) Is Nothing) Then
                    MyBase.Tables.Add(New StampeSottoscrizioniRepartiRichiedentiListaDataTable(ds.Tables("StampeSottoscrizioniRepartiRichiedentiLista")))
                End If
                If (Not (ds.Tables("StampeSottoscrizioniLista")) Is Nothing) Then
                    MyBase.Tables.Add(New StampeSottoscrizioniListaDataTable(ds.Tables("StampeSottoscrizioniLista")))
                End If
                If (Not (ds.Tables("StampeSottoscrizioniDettaglio")) Is Nothing) Then
                    MyBase.Tables.Add(New StampeSottoscrizioniDettaglioDataTable(ds.Tables("StampeSottoscrizioniDettaglio")))
                End If
                If (Not (ds.Tables("StampeSottoscrizioniRepartiRichiedentiSelezionabili")) Is Nothing) Then
                    MyBase.Tables.Add(New StampeSottoscrizioniRepartiRichiedentiSelezionabiliDataTable(ds.Tables("StampeSottoscrizioniRepartiRichiedentiSelezionabili")))
                End If
                If (Not (ds.Tables("SistemiErogantiLista")) Is Nothing) Then
                    MyBase.Tables.Add(New SistemiErogantiListaDataTable(ds.Tables("SistemiErogantiLista")))
                End If
                If (Not (ds.Tables("AziendeErogantiLista")) Is Nothing) Then
                    MyBase.Tables.Add(New AziendeErogantiListaDataTable(ds.Tables("AziendeErogantiLista")))
                End If
                If (Not (ds.Tables("GetDocumentoSistemiEroganti")) Is Nothing) Then
                    MyBase.Tables.Add(New GetDocumentoSistemiErogantiDataTable(ds.Tables("GetDocumentoSistemiEroganti")))
                End If
                If (Not (ds.Tables("Utenti")) Is Nothing) Then
                    MyBase.Tables.Add(New UtentiDataTable(ds.Tables("Utenti")))
                End If
                If (Not (ds.Tables("Ruoli")) Is Nothing) Then
                    MyBase.Tables.Add(New RuoliDataTable(ds.Tables("Ruoli")))
                End If
                If (Not (ds.Tables("SACUtenti")) Is Nothing) Then
                    MyBase.Tables.Add(New SACUtentiDataTable(ds.Tables("SACUtenti")))
                End If
                If (Not (ds.Tables("TipiReferto")) Is Nothing) Then
                    MyBase.Tables.Add(New TipiRefertoDataTable(ds.Tables("TipiReferto")))
                End If
                If (Not (ds.Tables("BevsSistemiEroganti")) Is Nothing) Then
                    MyBase.Tables.Add(New BevsSistemiErogantiDataTable(ds.Tables("BevsSistemiEroganti")))
                End If
                If (Not (ds.Tables("MMGSistemiAbilitatiCerca")) Is Nothing) Then
                    MyBase.Tables.Add(New MMGSistemiAbilitatiCercaDataTable(ds.Tables("MMGSistemiAbilitatiCerca")))
                End If
                If (Not (ds.Tables("BevsSistemiErogantiCodiciCombo")) Is Nothing) Then
                    MyBase.Tables.Add(New BevsSistemiErogantiCodiciComboDataTable(ds.Tables("BevsSistemiErogantiCodiciCombo")))
                End If
                If (Not (ds.Tables("BeRicoveriLista")) Is Nothing) Then
                    MyBase.Tables.Add(New BeRicoveriListaDataTable(ds.Tables("BeRicoveriLista")))
                End If
                If (Not (ds.Tables("BevsAttributiRicoveroOttieni")) Is Nothing) Then
                    MyBase.Tables.Add(New BevsAttributiRicoveroOttieniDataTable(ds.Tables("BevsAttributiRicoveroOttieni")))
                End If
                If (Not (ds.Tables("BevsEventiRicoveroOttieni")) Is Nothing) Then
                    MyBase.Tables.Add(New BevsEventiRicoveroOttieniDataTable(ds.Tables("BevsEventiRicoveroOttieni")))
                End If
                If (Not (ds.Tables("BevsAttributiEventoOttieni")) Is Nothing) Then
                    MyBase.Tables.Add(New BevsAttributiEventoOttieniDataTable(ds.Tables("BevsAttributiEventoOttieni")))
                End If
                Me.DataSetName = ds.DataSetName
                Me.Prefix = ds.Prefix
                Me.Namespace = ds.Namespace
                Me.Locale = ds.Locale
                Me.CaseSensitive = ds.CaseSensitive
                Me.EnforceConstraints = ds.EnforceConstraints
                Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
                Me.InitVars
            Else
                Me.ReadXml(reader)
                Me.InitVars
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
            Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
            stream.Position = 0
            Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Overloads Sub InitVars()
            Me.InitVars(true)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Overloads Sub InitVars(ByVal initTable As Boolean)
            Me.tableRefertiStiliLista = CType(MyBase.Tables("RefertiStiliLista"),RefertiStiliListaDataTable)
            If (initTable = true) Then
                If (Not (Me.tableRefertiStiliLista) Is Nothing) Then
                    Me.tableRefertiStiliLista.InitVars
                End If
            End If
            Me.tableRefertiNoteLista = CType(MyBase.Tables("RefertiNoteLista"),RefertiNoteListaDataTable)
            If (initTable = true) Then
                If (Not (Me.tableRefertiNoteLista) Is Nothing) Then
                    Me.tableRefertiNoteLista.InitVars
                End If
            End If
            Me.tableRefertiNoteDettaglio = CType(MyBase.Tables("RefertiNoteDettaglio"),RefertiNoteDettaglioDataTable)
            If (initTable = true) Then
                If (Not (Me.tableRefertiNoteDettaglio) Is Nothing) Then
                    Me.tableRefertiNoteDettaglio.InitVars
                End If
            End If
            Me.tableSistemiErogantiCombo = CType(MyBase.Tables("SistemiErogantiCombo"),SistemiErogantiComboDataTable)
            If (initTable = true) Then
                If (Not (Me.tableSistemiErogantiCombo) Is Nothing) Then
                    Me.tableSistemiErogantiCombo.InitVars
                End If
            End If
            Me.tableSistemiErogantiDocumentiLista = CType(MyBase.Tables("SistemiErogantiDocumentiLista"),SistemiErogantiDocumentiListaDataTable)
            If (initTable = true) Then
                If (Not (Me.tableSistemiErogantiDocumentiLista) Is Nothing) Then
                    Me.tableSistemiErogantiDocumentiLista.InitVars
                End If
            End If
            Me.tableSistemiErogantiDocumentiDettaglio = CType(MyBase.Tables("SistemiErogantiDocumentiDettaglio"),SistemiErogantiDocumentiDettaglioDataTable)
            If (initTable = true) Then
                If (Not (Me.tableSistemiErogantiDocumentiDettaglio) Is Nothing) Then
                    Me.tableSistemiErogantiDocumentiDettaglio.InitVars
                End If
            End If
            Me.tableBevsSistemiErogantiDocumentiLista = CType(MyBase.Tables("BevsSistemiErogantiDocumentiLista"),BevsSistemiErogantiDocumentiListaDataTable)
            If (initTable = true) Then
                If (Not (Me.tableBevsSistemiErogantiDocumentiLista) Is Nothing) Then
                    Me.tableBevsSistemiErogantiDocumentiLista.InitVars
                End If
            End If
            Me.tableBeRefertiLista = CType(MyBase.Tables("BeRefertiLista"),BeRefertiListaDataTable)
            If (initTable = true) Then
                If (Not (Me.tableBeRefertiLista) Is Nothing) Then
                    Me.tableBeRefertiLista.InitVars
                End If
            End If
            Me.tableStampeSottoscrizioniStatiLista = CType(MyBase.Tables("StampeSottoscrizioniStatiLista"),StampeSottoscrizioniStatiListaDataTable)
            If (initTable = true) Then
                If (Not (Me.tableStampeSottoscrizioniStatiLista) Is Nothing) Then
                    Me.tableStampeSottoscrizioniStatiLista.InitVars
                End If
            End If
            Me.tableStampeSottoscrizioniTipoRefertiLista = CType(MyBase.Tables("StampeSottoscrizioniTipoRefertiLista"),StampeSottoscrizioniTipoRefertiListaDataTable)
            If (initTable = true) Then
                If (Not (Me.tableStampeSottoscrizioniTipoRefertiLista) Is Nothing) Then
                    Me.tableStampeSottoscrizioniTipoRefertiLista.InitVars
                End If
            End If
            Me.tableStampeSottoscrizioniTipoSottoscrizioniLista = CType(MyBase.Tables("StampeSottoscrizioniTipoSottoscrizioniLista"),StampeSottoscrizioniTipoSottoscrizioniListaDataTable)
            If (initTable = true) Then
                If (Not (Me.tableStampeSottoscrizioniTipoSottoscrizioniLista) Is Nothing) Then
                    Me.tableStampeSottoscrizioniTipoSottoscrizioniLista.InitVars
                End If
            End If
            Me.tableStampeSottoscrizioniSistemiErogantiLista = CType(MyBase.Tables("StampeSottoscrizioniSistemiErogantiLista"),StampeSottoscrizioniSistemiErogantiListaDataTable)
            If (initTable = true) Then
                If (Not (Me.tableStampeSottoscrizioniSistemiErogantiLista) Is Nothing) Then
                    Me.tableStampeSottoscrizioniSistemiErogantiLista.InitVars
                End If
            End If
            Me.tableStampeSottoscrizioniRepartiRichiedentiLista = CType(MyBase.Tables("StampeSottoscrizioniRepartiRichiedentiLista"),StampeSottoscrizioniRepartiRichiedentiListaDataTable)
            If (initTable = true) Then
                If (Not (Me.tableStampeSottoscrizioniRepartiRichiedentiLista) Is Nothing) Then
                    Me.tableStampeSottoscrizioniRepartiRichiedentiLista.InitVars
                End If
            End If
            Me.tableStampeSottoscrizioniLista = CType(MyBase.Tables("StampeSottoscrizioniLista"),StampeSottoscrizioniListaDataTable)
            If (initTable = true) Then
                If (Not (Me.tableStampeSottoscrizioniLista) Is Nothing) Then
                    Me.tableStampeSottoscrizioniLista.InitVars
                End If
            End If
            Me.tableStampeSottoscrizioniDettaglio = CType(MyBase.Tables("StampeSottoscrizioniDettaglio"),StampeSottoscrizioniDettaglioDataTable)
            If (initTable = true) Then
                If (Not (Me.tableStampeSottoscrizioniDettaglio) Is Nothing) Then
                    Me.tableStampeSottoscrizioniDettaglio.InitVars
                End If
            End If
            Me.tableStampeSottoscrizioniRepartiRichiedentiSelezionabili = CType(MyBase.Tables("StampeSottoscrizioniRepartiRichiedentiSelezionabili"),StampeSottoscrizioniRepartiRichiedentiSelezionabiliDataTable)
            If (initTable = true) Then
                If (Not (Me.tableStampeSottoscrizioniRepartiRichiedentiSelezionabili) Is Nothing) Then
                    Me.tableStampeSottoscrizioniRepartiRichiedentiSelezionabili.InitVars
                End If
            End If
            Me.tableSistemiErogantiLista = CType(MyBase.Tables("SistemiErogantiLista"),SistemiErogantiListaDataTable)
            If (initTable = true) Then
                If (Not (Me.tableSistemiErogantiLista) Is Nothing) Then
                    Me.tableSistemiErogantiLista.InitVars
                End If
            End If
            Me.tableAziendeErogantiLista = CType(MyBase.Tables("AziendeErogantiLista"),AziendeErogantiListaDataTable)
            If (initTable = true) Then
                If (Not (Me.tableAziendeErogantiLista) Is Nothing) Then
                    Me.tableAziendeErogantiLista.InitVars
                End If
            End If
            Me.tableGetDocumentoSistemiEroganti = CType(MyBase.Tables("GetDocumentoSistemiEroganti"),GetDocumentoSistemiErogantiDataTable)
            If (initTable = true) Then
                If (Not (Me.tableGetDocumentoSistemiEroganti) Is Nothing) Then
                    Me.tableGetDocumentoSistemiEroganti.InitVars
                End If
            End If
            Me.tableUtenti = CType(MyBase.Tables("Utenti"),UtentiDataTable)
            If (initTable = true) Then
                If (Not (Me.tableUtenti) Is Nothing) Then
                    Me.tableUtenti.InitVars
                End If
            End If
            Me.tableRuoli = CType(MyBase.Tables("Ruoli"),RuoliDataTable)
            If (initTable = true) Then
                If (Not (Me.tableRuoli) Is Nothing) Then
                    Me.tableRuoli.InitVars
                End If
            End If
            Me.tableSACUtenti = CType(MyBase.Tables("SACUtenti"),SACUtentiDataTable)
            If (initTable = true) Then
                If (Not (Me.tableSACUtenti) Is Nothing) Then
                    Me.tableSACUtenti.InitVars
                End If
            End If
            Me.tableTipiReferto = CType(MyBase.Tables("TipiReferto"),TipiRefertoDataTable)
            If (initTable = true) Then
                If (Not (Me.tableTipiReferto) Is Nothing) Then
                    Me.tableTipiReferto.InitVars
                End If
            End If
            Me.tableBevsSistemiEroganti = CType(MyBase.Tables("BevsSistemiEroganti"),BevsSistemiErogantiDataTable)
            If (initTable = true) Then
                If (Not (Me.tableBevsSistemiEroganti) Is Nothing) Then
                    Me.tableBevsSistemiEroganti.InitVars
                End If
            End If
            Me.tableMMGSistemiAbilitatiCerca = CType(MyBase.Tables("MMGSistemiAbilitatiCerca"),MMGSistemiAbilitatiCercaDataTable)
            If (initTable = true) Then
                If (Not (Me.tableMMGSistemiAbilitatiCerca) Is Nothing) Then
                    Me.tableMMGSistemiAbilitatiCerca.InitVars
                End If
            End If
            Me.tableBevsSistemiErogantiCodiciCombo = CType(MyBase.Tables("BevsSistemiErogantiCodiciCombo"),BevsSistemiErogantiCodiciComboDataTable)
            If (initTable = true) Then
                If (Not (Me.tableBevsSistemiErogantiCodiciCombo) Is Nothing) Then
                    Me.tableBevsSistemiErogantiCodiciCombo.InitVars
                End If
            End If
            Me.tableBeRicoveriLista = CType(MyBase.Tables("BeRicoveriLista"),BeRicoveriListaDataTable)
            If (initTable = true) Then
                If (Not (Me.tableBeRicoveriLista) Is Nothing) Then
                    Me.tableBeRicoveriLista.InitVars
                End If
            End If
            Me.tableBevsAttributiRicoveroOttieni = CType(MyBase.Tables("BevsAttributiRicoveroOttieni"),BevsAttributiRicoveroOttieniDataTable)
            If (initTable = true) Then
                If (Not (Me.tableBevsAttributiRicoveroOttieni) Is Nothing) Then
                    Me.tableBevsAttributiRicoveroOttieni.InitVars
                End If
            End If
            Me.tableBevsEventiRicoveroOttieni = CType(MyBase.Tables("BevsEventiRicoveroOttieni"),BevsEventiRicoveroOttieniDataTable)
            If (initTable = true) Then
                If (Not (Me.tableBevsEventiRicoveroOttieni) Is Nothing) Then
                    Me.tableBevsEventiRicoveroOttieni.InitVars
                End If
            End If
            Me.tableBevsAttributiEventoOttieni = CType(MyBase.Tables("BevsAttributiEventoOttieni"),BevsAttributiEventoOttieniDataTable)
            If (initTable = true) Then
                If (Not (Me.tableBevsAttributiEventoOttieni) Is Nothing) Then
                    Me.tableBevsAttributiEventoOttieni.InitVars
                End If
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.DataSetName = "BackEndDataSet"
            Me.Prefix = ""
            Me.Namespace = "http://tempuri.org/BackEndDataSet.xsd"
            Me.EnforceConstraints = true
            Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
            Me.tableRefertiStiliLista = New RefertiStiliListaDataTable()
            MyBase.Tables.Add(Me.tableRefertiStiliLista)
            Me.tableRefertiNoteLista = New RefertiNoteListaDataTable()
            MyBase.Tables.Add(Me.tableRefertiNoteLista)
            Me.tableRefertiNoteDettaglio = New RefertiNoteDettaglioDataTable()
            MyBase.Tables.Add(Me.tableRefertiNoteDettaglio)
            Me.tableSistemiErogantiCombo = New SistemiErogantiComboDataTable()
            MyBase.Tables.Add(Me.tableSistemiErogantiCombo)
            Me.tableSistemiErogantiDocumentiLista = New SistemiErogantiDocumentiListaDataTable()
            MyBase.Tables.Add(Me.tableSistemiErogantiDocumentiLista)
            Me.tableSistemiErogantiDocumentiDettaglio = New SistemiErogantiDocumentiDettaglioDataTable()
            MyBase.Tables.Add(Me.tableSistemiErogantiDocumentiDettaglio)
            Me.tableBevsSistemiErogantiDocumentiLista = New BevsSistemiErogantiDocumentiListaDataTable()
            MyBase.Tables.Add(Me.tableBevsSistemiErogantiDocumentiLista)
            Me.tableBeRefertiLista = New BeRefertiListaDataTable()
            MyBase.Tables.Add(Me.tableBeRefertiLista)
            Me.tableStampeSottoscrizioniStatiLista = New StampeSottoscrizioniStatiListaDataTable()
            MyBase.Tables.Add(Me.tableStampeSottoscrizioniStatiLista)
            Me.tableStampeSottoscrizioniTipoRefertiLista = New StampeSottoscrizioniTipoRefertiListaDataTable()
            MyBase.Tables.Add(Me.tableStampeSottoscrizioniTipoRefertiLista)
            Me.tableStampeSottoscrizioniTipoSottoscrizioniLista = New StampeSottoscrizioniTipoSottoscrizioniListaDataTable()
            MyBase.Tables.Add(Me.tableStampeSottoscrizioniTipoSottoscrizioniLista)
            Me.tableStampeSottoscrizioniSistemiErogantiLista = New StampeSottoscrizioniSistemiErogantiListaDataTable()
            MyBase.Tables.Add(Me.tableStampeSottoscrizioniSistemiErogantiLista)
            Me.tableStampeSottoscrizioniRepartiRichiedentiLista = New StampeSottoscrizioniRepartiRichiedentiListaDataTable()
            MyBase.Tables.Add(Me.tableStampeSottoscrizioniRepartiRichiedentiLista)
            Me.tableStampeSottoscrizioniLista = New StampeSottoscrizioniListaDataTable()
            MyBase.Tables.Add(Me.tableStampeSottoscrizioniLista)
            Me.tableStampeSottoscrizioniDettaglio = New StampeSottoscrizioniDettaglioDataTable()
            MyBase.Tables.Add(Me.tableStampeSottoscrizioniDettaglio)
            Me.tableStampeSottoscrizioniRepartiRichiedentiSelezionabili = New StampeSottoscrizioniRepartiRichiedentiSelezionabiliDataTable()
            MyBase.Tables.Add(Me.tableStampeSottoscrizioniRepartiRichiedentiSelezionabili)
            Me.tableSistemiErogantiLista = New SistemiErogantiListaDataTable()
            MyBase.Tables.Add(Me.tableSistemiErogantiLista)
            Me.tableAziendeErogantiLista = New AziendeErogantiListaDataTable()
            MyBase.Tables.Add(Me.tableAziendeErogantiLista)
            Me.tableGetDocumentoSistemiEroganti = New GetDocumentoSistemiErogantiDataTable()
            MyBase.Tables.Add(Me.tableGetDocumentoSistemiEroganti)
            Me.tableUtenti = New UtentiDataTable()
            MyBase.Tables.Add(Me.tableUtenti)
            Me.tableRuoli = New RuoliDataTable()
            MyBase.Tables.Add(Me.tableRuoli)
            Me.tableSACUtenti = New SACUtentiDataTable()
            MyBase.Tables.Add(Me.tableSACUtenti)
            Me.tableTipiReferto = New TipiRefertoDataTable()
            MyBase.Tables.Add(Me.tableTipiReferto)
            Me.tableBevsSistemiEroganti = New BevsSistemiErogantiDataTable()
            MyBase.Tables.Add(Me.tableBevsSistemiEroganti)
            Me.tableMMGSistemiAbilitatiCerca = New MMGSistemiAbilitatiCercaDataTable()
            MyBase.Tables.Add(Me.tableMMGSistemiAbilitatiCerca)
            Me.tableBevsSistemiErogantiCodiciCombo = New BevsSistemiErogantiCodiciComboDataTable()
            MyBase.Tables.Add(Me.tableBevsSistemiErogantiCodiciCombo)
            Me.tableBeRicoveriLista = New BeRicoveriListaDataTable()
            MyBase.Tables.Add(Me.tableBeRicoveriLista)
            Me.tableBevsAttributiRicoveroOttieni = New BevsAttributiRicoveroOttieniDataTable()
            MyBase.Tables.Add(Me.tableBevsAttributiRicoveroOttieni)
            Me.tableBevsEventiRicoveroOttieni = New BevsEventiRicoveroOttieniDataTable()
            MyBase.Tables.Add(Me.tableBevsEventiRicoveroOttieni)
            Me.tableBevsAttributiEventoOttieni = New BevsAttributiEventoOttieniDataTable()
            MyBase.Tables.Add(Me.tableBevsAttributiEventoOttieni)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Function ShouldSerializeRefertiStiliLista() As Boolean
            Return false
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Function ShouldSerializeRefertiNoteLista() As Boolean
            Return false
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Function ShouldSerializeRefertiNoteDettaglio() As Boolean
            Return false
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Function ShouldSerializeSistemiErogantiCombo() As Boolean
            Return false
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Function ShouldSerializeSistemiErogantiDocumentiLista() As Boolean
            Return false
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Function ShouldSerializeSistemiErogantiDocumentiDettaglio() As Boolean
            Return false
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Function ShouldSerializeBevsSistemiErogantiDocumentiLista() As Boolean
            Return false
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Function ShouldSerializeBeRefertiLista() As Boolean
            Return false
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Function ShouldSerializeStampeSottoscrizioniStatiLista() As Boolean
            Return false
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Function ShouldSerializeStampeSottoscrizioniTipoRefertiLista() As Boolean
            Return false
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Function ShouldSerializeStampeSottoscrizioniTipoSottoscrizioniLista() As Boolean
            Return false
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Function ShouldSerializeStampeSottoscrizioniSistemiErogantiLista() As Boolean
            Return false
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Function ShouldSerializeStampeSottoscrizioniRepartiRichiedentiLista() As Boolean
            Return false
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Function ShouldSerializeStampeSottoscrizioniLista() As Boolean
            Return false
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Function ShouldSerializeStampeSottoscrizioniDettaglio() As Boolean
            Return false
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Function ShouldSerializeStampeSottoscrizioniRepartiRichiedentiSelezionabili() As Boolean
            Return false
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Function ShouldSerializeSistemiErogantiLista() As Boolean
            Return false
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Function ShouldSerializeAziendeErogantiLista() As Boolean
            Return false
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Function ShouldSerializeGetDocumentoSistemiEroganti() As Boolean
            Return false
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Function ShouldSerializeUtenti() As Boolean
            Return false
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Function ShouldSerializeRuoli() As Boolean
            Return false
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Function ShouldSerializeSACUtenti() As Boolean
            Return false
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Function ShouldSerializeTipiReferto() As Boolean
            Return false
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Function ShouldSerializeBevsSistemiEroganti() As Boolean
            Return false
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Function ShouldSerializeMMGSistemiAbilitatiCerca() As Boolean
            Return false
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Function ShouldSerializeBevsSistemiErogantiCodiciCombo() As Boolean
            Return false
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Function ShouldSerializeBeRicoveriLista() As Boolean
            Return false
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Function ShouldSerializeBevsAttributiRicoveroOttieni() As Boolean
            Return false
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Function ShouldSerializeBevsEventiRicoveroOttieni() As Boolean
            Return false
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Function ShouldSerializeBevsAttributiEventoOttieni() As Boolean
            Return false
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
            If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
                Me.InitVars
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim ds As BackEndDataSet = New BackEndDataSet()
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any.Namespace = ds.Namespace
            sequence.Items.Add(any)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Delegate Sub RefertiStiliListaRowChangeEventHandler(ByVal sender As Object, ByVal e As RefertiStiliListaRowChangeEvent)
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Delegate Sub RefertiNoteListaRowChangeEventHandler(ByVal sender As Object, ByVal e As RefertiNoteListaRowChangeEvent)
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Delegate Sub RefertiNoteDettaglioRowChangeEventHandler(ByVal sender As Object, ByVal e As RefertiNoteDettaglioRowChangeEvent)
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Delegate Sub SistemiErogantiComboRowChangeEventHandler(ByVal sender As Object, ByVal e As SistemiErogantiComboRowChangeEvent)
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Delegate Sub SistemiErogantiDocumentiListaRowChangeEventHandler(ByVal sender As Object, ByVal e As SistemiErogantiDocumentiListaRowChangeEvent)
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Delegate Sub SistemiErogantiDocumentiDettaglioRowChangeEventHandler(ByVal sender As Object, ByVal e As SistemiErogantiDocumentiDettaglioRowChangeEvent)
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Delegate Sub BevsSistemiErogantiDocumentiListaRowChangeEventHandler(ByVal sender As Object, ByVal e As BevsSistemiErogantiDocumentiListaRowChangeEvent)
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Delegate Sub BeRefertiListaRowChangeEventHandler(ByVal sender As Object, ByVal e As BeRefertiListaRowChangeEvent)
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Delegate Sub StampeSottoscrizioniStatiListaRowChangeEventHandler(ByVal sender As Object, ByVal e As StampeSottoscrizioniStatiListaRowChangeEvent)
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Delegate Sub StampeSottoscrizioniTipoRefertiListaRowChangeEventHandler(ByVal sender As Object, ByVal e As StampeSottoscrizioniTipoRefertiListaRowChangeEvent)
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Delegate Sub StampeSottoscrizioniTipoSottoscrizioniListaRowChangeEventHandler(ByVal sender As Object, ByVal e As StampeSottoscrizioniTipoSottoscrizioniListaRowChangeEvent)
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Delegate Sub StampeSottoscrizioniSistemiErogantiListaRowChangeEventHandler(ByVal sender As Object, ByVal e As StampeSottoscrizioniSistemiErogantiListaRowChangeEvent)
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Delegate Sub StampeSottoscrizioniRepartiRichiedentiListaRowChangeEventHandler(ByVal sender As Object, ByVal e As StampeSottoscrizioniRepartiRichiedentiListaRowChangeEvent)
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Delegate Sub StampeSottoscrizioniListaRowChangeEventHandler(ByVal sender As Object, ByVal e As StampeSottoscrizioniListaRowChangeEvent)
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Delegate Sub StampeSottoscrizioniDettaglioRowChangeEventHandler(ByVal sender As Object, ByVal e As StampeSottoscrizioniDettaglioRowChangeEvent)
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Delegate Sub StampeSottoscrizioniRepartiRichiedentiSelezionabiliRowChangeEventHandler(ByVal sender As Object, ByVal e As StampeSottoscrizioniRepartiRichiedentiSelezionabiliRowChangeEvent)
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Delegate Sub SistemiErogantiListaRowChangeEventHandler(ByVal sender As Object, ByVal e As SistemiErogantiListaRowChangeEvent)
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Delegate Sub AziendeErogantiListaRowChangeEventHandler(ByVal sender As Object, ByVal e As AziendeErogantiListaRowChangeEvent)
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Delegate Sub GetDocumentoSistemiErogantiRowChangeEventHandler(ByVal sender As Object, ByVal e As GetDocumentoSistemiErogantiRowChangeEvent)
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Delegate Sub UtentiRowChangeEventHandler(ByVal sender As Object, ByVal e As UtentiRowChangeEvent)
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Delegate Sub RuoliRowChangeEventHandler(ByVal sender As Object, ByVal e As RuoliRowChangeEvent)
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Delegate Sub SACUtentiRowChangeEventHandler(ByVal sender As Object, ByVal e As SACUtentiRowChangeEvent)
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Delegate Sub TipiRefertoRowChangeEventHandler(ByVal sender As Object, ByVal e As TipiRefertoRowChangeEvent)
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Delegate Sub BevsSistemiErogantiRowChangeEventHandler(ByVal sender As Object, ByVal e As BevsSistemiErogantiRowChangeEvent)
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Delegate Sub MMGSistemiAbilitatiCercaRowChangeEventHandler(ByVal sender As Object, ByVal e As MMGSistemiAbilitatiCercaRowChangeEvent)
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Delegate Sub BevsSistemiErogantiCodiciComboRowChangeEventHandler(ByVal sender As Object, ByVal e As BevsSistemiErogantiCodiciComboRowChangeEvent)
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Delegate Sub BeRicoveriListaRowChangeEventHandler(ByVal sender As Object, ByVal e As BeRicoveriListaRowChangeEvent)
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Delegate Sub BevsAttributiRicoveroOttieniRowChangeEventHandler(ByVal sender As Object, ByVal e As BevsAttributiRicoveroOttieniRowChangeEvent)
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Delegate Sub BevsEventiRicoveroOttieniRowChangeEventHandler(ByVal sender As Object, ByVal e As BevsEventiRicoveroOttieniRowChangeEvent)
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Delegate Sub BevsAttributiEventoOttieniRowChangeEventHandler(ByVal sender As Object, ByVal e As BevsAttributiEventoOttieniRowChangeEvent)
        
        '''<summary>
        '''Represents the strongly named DataTable class.
        '''</summary>
        <Global.System.Serializable(),  _
         Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
        Partial Public Class RefertiStiliListaDataTable
            Inherits Global.System.Data.TypedTableBase(Of RefertiStiliListaRow)
            
            Private columnId As Global.System.Data.DataColumn
            
            Private columnNome As Global.System.Data.DataColumn
            
            Private columnDescrizione As Global.System.Data.DataColumn
            
            Private columnAbilitato As Global.System.Data.DataColumn
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub New()
                MyBase.New
                Me.TableName = "RefertiStiliLista"
                Me.BeginInit
                Me.InitClass
                Me.EndInit
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Friend Sub New(ByVal table As Global.System.Data.DataTable)
                MyBase.New
                Me.TableName = table.TableName
                If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                    Me.CaseSensitive = table.CaseSensitive
                End If
                If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                    Me.Locale = table.Locale
                End If
                If (table.Namespace <> table.DataSet.Namespace) Then
                    Me.Namespace = table.Namespace
                End If
                Me.Prefix = table.Prefix
                Me.MinimumCapacity = table.MinimumCapacity
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
                MyBase.New(info, context)
                Me.InitVars
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property IdColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnId
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property NomeColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnNome
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property DescrizioneColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnDescrizione
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property AbilitatoColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnAbilitato
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
             Global.System.ComponentModel.Browsable(false)>  _
            Public ReadOnly Property Count() As Integer
                Get
                    Return Me.Rows.Count
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Default ReadOnly Property Item(ByVal index As Integer) As RefertiStiliListaRow
                Get
                    Return CType(Me.Rows(index),RefertiStiliListaRow)
                End Get
            End Property
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event RefertiStiliListaRowChanging As RefertiStiliListaRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event RefertiStiliListaRowChanged As RefertiStiliListaRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event RefertiStiliListaRowDeleting As RefertiStiliListaRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event RefertiStiliListaRowDeleted As RefertiStiliListaRowChangeEventHandler
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Overloads Sub AddRefertiStiliListaRow(ByVal row As RefertiStiliListaRow)
                Me.Rows.Add(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Overloads Function AddRefertiStiliListaRow(ByVal Id As System.Guid, ByVal Nome As String, ByVal Descrizione As String, ByVal Abilitato As Boolean) As RefertiStiliListaRow
                Dim rowRefertiStiliListaRow As RefertiStiliListaRow = CType(Me.NewRow,RefertiStiliListaRow)
                Dim columnValuesArray() As Object = New Object() {Id, Nome, Descrizione, Abilitato}
                rowRefertiStiliListaRow.ItemArray = columnValuesArray
                Me.Rows.Add(rowRefertiStiliListaRow)
                Return rowRefertiStiliListaRow
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function FindById(ByVal Id As System.Guid) As RefertiStiliListaRow
                Return CType(Me.Rows.Find(New Object() {Id}),RefertiStiliListaRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Overrides Function Clone() As Global.System.Data.DataTable
                Dim cln As RefertiStiliListaDataTable = CType(MyBase.Clone,RefertiStiliListaDataTable)
                cln.InitVars
                Return cln
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
                Return New RefertiStiliListaDataTable()
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Friend Sub InitVars()
                Me.columnId = MyBase.Columns("Id")
                Me.columnNome = MyBase.Columns("Nome")
                Me.columnDescrizione = MyBase.Columns("Descrizione")
                Me.columnAbilitato = MyBase.Columns("Abilitato")
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Private Sub InitClass()
                Me.columnId = New Global.System.Data.DataColumn("Id", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnId)
                Me.columnNome = New Global.System.Data.DataColumn("Nome", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnNome)
                Me.columnDescrizione = New Global.System.Data.DataColumn("Descrizione", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnDescrizione)
                Me.columnAbilitato = New Global.System.Data.DataColumn("Abilitato", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnAbilitato)
                Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnId}, true))
                Me.columnId.AllowDBNull = false
                Me.columnId.Unique = true
                Me.columnNome.AllowDBNull = false
                Me.columnNome.MaxLength = 64
                Me.columnDescrizione.AllowDBNull = false
                Me.columnDescrizione.MaxLength = 50
                Me.columnAbilitato.AllowDBNull = false
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function NewRefertiStiliListaRow() As RefertiStiliListaRow
                Return CType(Me.NewRow,RefertiStiliListaRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
                Return New RefertiStiliListaRow(builder)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Function GetRowType() As Global.System.Type
                Return GetType(RefertiStiliListaRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanged(e)
                If (Not (Me.RefertiStiliListaRowChangedEvent) Is Nothing) Then
                    RaiseEvent RefertiStiliListaRowChanged(Me, New RefertiStiliListaRowChangeEvent(CType(e.Row,RefertiStiliListaRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanging(e)
                If (Not (Me.RefertiStiliListaRowChangingEvent) Is Nothing) Then
                    RaiseEvent RefertiStiliListaRowChanging(Me, New RefertiStiliListaRowChangeEvent(CType(e.Row,RefertiStiliListaRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleted(e)
                If (Not (Me.RefertiStiliListaRowDeletedEvent) Is Nothing) Then
                    RaiseEvent RefertiStiliListaRowDeleted(Me, New RefertiStiliListaRowChangeEvent(CType(e.Row,RefertiStiliListaRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleting(e)
                If (Not (Me.RefertiStiliListaRowDeletingEvent) Is Nothing) Then
                    RaiseEvent RefertiStiliListaRowDeleting(Me, New RefertiStiliListaRowChangeEvent(CType(e.Row,RefertiStiliListaRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub RemoveRefertiStiliListaRow(ByVal row As RefertiStiliListaRow)
                Me.Rows.Remove(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
                Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
                Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
                Dim ds As BackEndDataSet = New BackEndDataSet()
                Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any1.Namespace = "http://www.w3.org/2001/XMLSchema"
                any1.MinOccurs = New Decimal(0)
                any1.MaxOccurs = Decimal.MaxValue
                any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any1)
                Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
                any2.MinOccurs = New Decimal(1)
                any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any2)
                Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute1.Name = "namespace"
                attribute1.FixedValue = ds.Namespace
                type.Attributes.Add(attribute1)
                Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute2.Name = "tableTypeName"
                attribute2.FixedValue = "RefertiStiliListaDataTable"
                type.Attributes.Add(attribute2)
                type.Particle = sequence
                Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
                If xs.Contains(dsSchema.TargetNamespace) Then
                    Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Try 
                        Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                        dsSchema.Write(s1)
                        Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                        Do While schemas.MoveNext
                            schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                            s2.SetLength(0)
                            schema.Write(s2)
                            If (s1.Length = s2.Length) Then
                                s1.Position = 0
                                s2.Position = 0
                                
                                Do While ((s1.Position <> s1.Length)  _
                                            AndAlso (s1.ReadByte = s2.ReadByte))
                                    
                                    
                                Loop
                                If (s1.Position = s1.Length) Then
                                    Return type
                                End If
                            End If
                            
                        Loop
                    Finally
                        If (Not (s1) Is Nothing) Then
                            s1.Close
                        End If
                        If (Not (s2) Is Nothing) Then
                            s2.Close
                        End If
                    End Try
                End If
                xs.Add(dsSchema)
                Return type
            End Function
        End Class
        
        '''<summary>
        '''Represents the strongly named DataTable class.
        '''</summary>
        <Global.System.Serializable(),  _
         Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
        Partial Public Class RefertiNoteListaDataTable
            Inherits Global.System.Data.TypedTableBase(Of RefertiNoteListaRow)
            
            Private columnNumeroReferto As Global.System.Data.DataColumn
            
            Private columnNumeroNosologico As Global.System.Data.DataColumn
            
            Private columnUtente As Global.System.Data.DataColumn
            
            Private columnDataInserimento As Global.System.Data.DataColumn
            
            Private columnNota As Global.System.Data.DataColumn
            
            Private columnIdRefertiNote As Global.System.Data.DataColumn
            
            Private columnIdReferti As Global.System.Data.DataColumn
            
            Private columnCancellata As Global.System.Data.DataColumn
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub New()
                MyBase.New
                Me.TableName = "RefertiNoteLista"
                Me.BeginInit
                Me.InitClass
                Me.EndInit
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Friend Sub New(ByVal table As Global.System.Data.DataTable)
                MyBase.New
                Me.TableName = table.TableName
                If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                    Me.CaseSensitive = table.CaseSensitive
                End If
                If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                    Me.Locale = table.Locale
                End If
                If (table.Namespace <> table.DataSet.Namespace) Then
                    Me.Namespace = table.Namespace
                End If
                Me.Prefix = table.Prefix
                Me.MinimumCapacity = table.MinimumCapacity
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
                MyBase.New(info, context)
                Me.InitVars
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property NumeroRefertoColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnNumeroReferto
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property NumeroNosologicoColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnNumeroNosologico
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property UtenteColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnUtente
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property DataInserimentoColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnDataInserimento
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property NotaColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnNota
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property IdRefertiNoteColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnIdRefertiNote
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property IdRefertiColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnIdReferti
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property CancellataColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnCancellata
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
             Global.System.ComponentModel.Browsable(false)>  _
            Public ReadOnly Property Count() As Integer
                Get
                    Return Me.Rows.Count
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Default ReadOnly Property Item(ByVal index As Integer) As RefertiNoteListaRow
                Get
                    Return CType(Me.Rows(index),RefertiNoteListaRow)
                End Get
            End Property
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event RefertiNoteListaRowChanging As RefertiNoteListaRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event RefertiNoteListaRowChanged As RefertiNoteListaRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event RefertiNoteListaRowDeleting As RefertiNoteListaRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event RefertiNoteListaRowDeleted As RefertiNoteListaRowChangeEventHandler
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Overloads Sub AddRefertiNoteListaRow(ByVal row As RefertiNoteListaRow)
                Me.Rows.Add(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Overloads Function AddRefertiNoteListaRow(ByVal NumeroReferto As String, ByVal NumeroNosologico As String, ByVal Utente As String, ByVal DataInserimento As Date, ByVal Nota As String, ByVal IdRefertiNote As System.Guid, ByVal IdReferti As System.Guid, ByVal Cancellata As Boolean) As RefertiNoteListaRow
                Dim rowRefertiNoteListaRow As RefertiNoteListaRow = CType(Me.NewRow,RefertiNoteListaRow)
                Dim columnValuesArray() As Object = New Object() {NumeroReferto, NumeroNosologico, Utente, DataInserimento, Nota, IdRefertiNote, IdReferti, Cancellata}
                rowRefertiNoteListaRow.ItemArray = columnValuesArray
                Me.Rows.Add(rowRefertiNoteListaRow)
                Return rowRefertiNoteListaRow
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Overrides Function Clone() As Global.System.Data.DataTable
                Dim cln As RefertiNoteListaDataTable = CType(MyBase.Clone,RefertiNoteListaDataTable)
                cln.InitVars
                Return cln
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
                Return New RefertiNoteListaDataTable()
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Friend Sub InitVars()
                Me.columnNumeroReferto = MyBase.Columns("NumeroReferto")
                Me.columnNumeroNosologico = MyBase.Columns("NumeroNosologico")
                Me.columnUtente = MyBase.Columns("Utente")
                Me.columnDataInserimento = MyBase.Columns("DataInserimento")
                Me.columnNota = MyBase.Columns("Nota")
                Me.columnIdRefertiNote = MyBase.Columns("IdRefertiNote")
                Me.columnIdReferti = MyBase.Columns("IdReferti")
                Me.columnCancellata = MyBase.Columns("Cancellata")
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Private Sub InitClass()
                Me.columnNumeroReferto = New Global.System.Data.DataColumn("NumeroReferto", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnNumeroReferto)
                Me.columnNumeroNosologico = New Global.System.Data.DataColumn("NumeroNosologico", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnNumeroNosologico)
                Me.columnUtente = New Global.System.Data.DataColumn("Utente", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnUtente)
                Me.columnDataInserimento = New Global.System.Data.DataColumn("DataInserimento", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnDataInserimento)
                Me.columnNota = New Global.System.Data.DataColumn("Nota", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnNota)
                Me.columnIdRefertiNote = New Global.System.Data.DataColumn("IdRefertiNote", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnIdRefertiNote)
                Me.columnIdReferti = New Global.System.Data.DataColumn("IdReferti", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnIdReferti)
                Me.columnCancellata = New Global.System.Data.DataColumn("Cancellata", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnCancellata)
                Me.columnNumeroReferto.MaxLength = 16
                Me.columnNumeroNosologico.MaxLength = 64
                Me.columnUtente.AllowDBNull = false
                Me.columnUtente.MaxLength = 100
                Me.columnDataInserimento.AllowDBNull = false
                Me.columnNota.ReadOnly = true
                Me.columnNota.MaxLength = 200
                Me.columnIdRefertiNote.AllowDBNull = false
                Me.columnIdReferti.AllowDBNull = false
                Me.columnCancellata.AllowDBNull = false
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function NewRefertiNoteListaRow() As RefertiNoteListaRow
                Return CType(Me.NewRow,RefertiNoteListaRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
                Return New RefertiNoteListaRow(builder)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Function GetRowType() As Global.System.Type
                Return GetType(RefertiNoteListaRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanged(e)
                If (Not (Me.RefertiNoteListaRowChangedEvent) Is Nothing) Then
                    RaiseEvent RefertiNoteListaRowChanged(Me, New RefertiNoteListaRowChangeEvent(CType(e.Row,RefertiNoteListaRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanging(e)
                If (Not (Me.RefertiNoteListaRowChangingEvent) Is Nothing) Then
                    RaiseEvent RefertiNoteListaRowChanging(Me, New RefertiNoteListaRowChangeEvent(CType(e.Row,RefertiNoteListaRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleted(e)
                If (Not (Me.RefertiNoteListaRowDeletedEvent) Is Nothing) Then
                    RaiseEvent RefertiNoteListaRowDeleted(Me, New RefertiNoteListaRowChangeEvent(CType(e.Row,RefertiNoteListaRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleting(e)
                If (Not (Me.RefertiNoteListaRowDeletingEvent) Is Nothing) Then
                    RaiseEvent RefertiNoteListaRowDeleting(Me, New RefertiNoteListaRowChangeEvent(CType(e.Row,RefertiNoteListaRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub RemoveRefertiNoteListaRow(ByVal row As RefertiNoteListaRow)
                Me.Rows.Remove(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
                Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
                Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
                Dim ds As BackEndDataSet = New BackEndDataSet()
                Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any1.Namespace = "http://www.w3.org/2001/XMLSchema"
                any1.MinOccurs = New Decimal(0)
                any1.MaxOccurs = Decimal.MaxValue
                any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any1)
                Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
                any2.MinOccurs = New Decimal(1)
                any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any2)
                Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute1.Name = "namespace"
                attribute1.FixedValue = ds.Namespace
                type.Attributes.Add(attribute1)
                Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute2.Name = "tableTypeName"
                attribute2.FixedValue = "RefertiNoteListaDataTable"
                type.Attributes.Add(attribute2)
                type.Particle = sequence
                Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
                If xs.Contains(dsSchema.TargetNamespace) Then
                    Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Try 
                        Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                        dsSchema.Write(s1)
                        Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                        Do While schemas.MoveNext
                            schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                            s2.SetLength(0)
                            schema.Write(s2)
                            If (s1.Length = s2.Length) Then
                                s1.Position = 0
                                s2.Position = 0
                                
                                Do While ((s1.Position <> s1.Length)  _
                                            AndAlso (s1.ReadByte = s2.ReadByte))
                                    
                                    
                                Loop
                                If (s1.Position = s1.Length) Then
                                    Return type
                                End If
                            End If
                            
                        Loop
                    Finally
                        If (Not (s1) Is Nothing) Then
                            s1.Close
                        End If
                        If (Not (s2) Is Nothing) Then
                            s2.Close
                        End If
                    End Try
                End If
                xs.Add(dsSchema)
                Return type
            End Function
        End Class
        
        '''<summary>
        '''Represents the strongly named DataTable class.
        '''</summary>
        <Global.System.Serializable(),  _
         Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
        Partial Public Class RefertiNoteDettaglioDataTable
            Inherits Global.System.Data.TypedTableBase(Of RefertiNoteDettaglioRow)
            
            Private columnIdReferti As Global.System.Data.DataColumn
            
            Private columnUtente As Global.System.Data.DataColumn
            
            Private columnDataInserimento As Global.System.Data.DataColumn
            
            Private columnNota As Global.System.Data.DataColumn
            
            Private columnId As Global.System.Data.DataColumn
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub New()
                MyBase.New
                Me.TableName = "RefertiNoteDettaglio"
                Me.BeginInit
                Me.InitClass
                Me.EndInit
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Friend Sub New(ByVal table As Global.System.Data.DataTable)
                MyBase.New
                Me.TableName = table.TableName
                If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                    Me.CaseSensitive = table.CaseSensitive
                End If
                If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                    Me.Locale = table.Locale
                End If
                If (table.Namespace <> table.DataSet.Namespace) Then
                    Me.Namespace = table.Namespace
                End If
                Me.Prefix = table.Prefix
                Me.MinimumCapacity = table.MinimumCapacity
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
                MyBase.New(info, context)
                Me.InitVars
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property IdRefertiColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnIdReferti
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property UtenteColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnUtente
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property DataInserimentoColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnDataInserimento
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property NotaColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnNota
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property IdColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnId
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
             Global.System.ComponentModel.Browsable(false)>  _
            Public ReadOnly Property Count() As Integer
                Get
                    Return Me.Rows.Count
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Default ReadOnly Property Item(ByVal index As Integer) As RefertiNoteDettaglioRow
                Get
                    Return CType(Me.Rows(index),RefertiNoteDettaglioRow)
                End Get
            End Property
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event RefertiNoteDettaglioRowChanging As RefertiNoteDettaglioRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event RefertiNoteDettaglioRowChanged As RefertiNoteDettaglioRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event RefertiNoteDettaglioRowDeleting As RefertiNoteDettaglioRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event RefertiNoteDettaglioRowDeleted As RefertiNoteDettaglioRowChangeEventHandler
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Overloads Sub AddRefertiNoteDettaglioRow(ByVal row As RefertiNoteDettaglioRow)
                Me.Rows.Add(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Overloads Function AddRefertiNoteDettaglioRow(ByVal IdReferti As System.Guid, ByVal Utente As String, ByVal DataInserimento As Date, ByVal Nota As String, ByVal Id As System.Guid) As RefertiNoteDettaglioRow
                Dim rowRefertiNoteDettaglioRow As RefertiNoteDettaglioRow = CType(Me.NewRow,RefertiNoteDettaglioRow)
                Dim columnValuesArray() As Object = New Object() {IdReferti, Utente, DataInserimento, Nota, Id}
                rowRefertiNoteDettaglioRow.ItemArray = columnValuesArray
                Me.Rows.Add(rowRefertiNoteDettaglioRow)
                Return rowRefertiNoteDettaglioRow
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Overrides Function Clone() As Global.System.Data.DataTable
                Dim cln As RefertiNoteDettaglioDataTable = CType(MyBase.Clone,RefertiNoteDettaglioDataTable)
                cln.InitVars
                Return cln
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
                Return New RefertiNoteDettaglioDataTable()
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Friend Sub InitVars()
                Me.columnIdReferti = MyBase.Columns("IdReferti")
                Me.columnUtente = MyBase.Columns("Utente")
                Me.columnDataInserimento = MyBase.Columns("DataInserimento")
                Me.columnNota = MyBase.Columns("Nota")
                Me.columnId = MyBase.Columns("Id")
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Private Sub InitClass()
                Me.columnIdReferti = New Global.System.Data.DataColumn("IdReferti", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnIdReferti)
                Me.columnUtente = New Global.System.Data.DataColumn("Utente", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnUtente)
                Me.columnDataInserimento = New Global.System.Data.DataColumn("DataInserimento", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnDataInserimento)
                Me.columnNota = New Global.System.Data.DataColumn("Nota", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnNota)
                Me.columnId = New Global.System.Data.DataColumn("Id", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnId)
                Me.columnIdReferti.AllowDBNull = false
                Me.columnUtente.AllowDBNull = false
                Me.columnUtente.MaxLength = 100
                Me.columnDataInserimento.AllowDBNull = false
                Me.columnNota.AllowDBNull = false
                Me.columnNota.MaxLength = 2147483647
                Me.columnId.AllowDBNull = false
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function NewRefertiNoteDettaglioRow() As RefertiNoteDettaglioRow
                Return CType(Me.NewRow,RefertiNoteDettaglioRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
                Return New RefertiNoteDettaglioRow(builder)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Function GetRowType() As Global.System.Type
                Return GetType(RefertiNoteDettaglioRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanged(e)
                If (Not (Me.RefertiNoteDettaglioRowChangedEvent) Is Nothing) Then
                    RaiseEvent RefertiNoteDettaglioRowChanged(Me, New RefertiNoteDettaglioRowChangeEvent(CType(e.Row,RefertiNoteDettaglioRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanging(e)
                If (Not (Me.RefertiNoteDettaglioRowChangingEvent) Is Nothing) Then
                    RaiseEvent RefertiNoteDettaglioRowChanging(Me, New RefertiNoteDettaglioRowChangeEvent(CType(e.Row,RefertiNoteDettaglioRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleted(e)
                If (Not (Me.RefertiNoteDettaglioRowDeletedEvent) Is Nothing) Then
                    RaiseEvent RefertiNoteDettaglioRowDeleted(Me, New RefertiNoteDettaglioRowChangeEvent(CType(e.Row,RefertiNoteDettaglioRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleting(e)
                If (Not (Me.RefertiNoteDettaglioRowDeletingEvent) Is Nothing) Then
                    RaiseEvent RefertiNoteDettaglioRowDeleting(Me, New RefertiNoteDettaglioRowChangeEvent(CType(e.Row,RefertiNoteDettaglioRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub RemoveRefertiNoteDettaglioRow(ByVal row As RefertiNoteDettaglioRow)
                Me.Rows.Remove(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
                Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
                Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
                Dim ds As BackEndDataSet = New BackEndDataSet()
                Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any1.Namespace = "http://www.w3.org/2001/XMLSchema"
                any1.MinOccurs = New Decimal(0)
                any1.MaxOccurs = Decimal.MaxValue
                any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any1)
                Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
                any2.MinOccurs = New Decimal(1)
                any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any2)
                Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute1.Name = "namespace"
                attribute1.FixedValue = ds.Namespace
                type.Attributes.Add(attribute1)
                Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute2.Name = "tableTypeName"
                attribute2.FixedValue = "RefertiNoteDettaglioDataTable"
                type.Attributes.Add(attribute2)
                type.Particle = sequence
                Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
                If xs.Contains(dsSchema.TargetNamespace) Then
                    Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Try 
                        Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                        dsSchema.Write(s1)
                        Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                        Do While schemas.MoveNext
                            schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                            s2.SetLength(0)
                            schema.Write(s2)
                            If (s1.Length = s2.Length) Then
                                s1.Position = 0
                                s2.Position = 0
                                
                                Do While ((s1.Position <> s1.Length)  _
                                            AndAlso (s1.ReadByte = s2.ReadByte))
                                    
                                    
                                Loop
                                If (s1.Position = s1.Length) Then
                                    Return type
                                End If
                            End If
                            
                        Loop
                    Finally
                        If (Not (s1) Is Nothing) Then
                            s1.Close
                        End If
                        If (Not (s2) Is Nothing) Then
                            s2.Close
                        End If
                    End Try
                End If
                xs.Add(dsSchema)
                Return type
            End Function
        End Class
        
        '''<summary>
        '''Represents the strongly named DataTable class.
        '''</summary>
        <Global.System.Serializable(),  _
         Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
        Partial Public Class SistemiErogantiComboDataTable
            Inherits Global.System.Data.TypedTableBase(Of SistemiErogantiComboRow)
            
            Private columnId As Global.System.Data.DataColumn
            
            Private columnDescrizione As Global.System.Data.DataColumn
            
            Private columnCodice As Global.System.Data.DataColumn
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub New()
                MyBase.New
                Me.TableName = "SistemiErogantiCombo"
                Me.BeginInit
                Me.InitClass
                Me.EndInit
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Friend Sub New(ByVal table As Global.System.Data.DataTable)
                MyBase.New
                Me.TableName = table.TableName
                If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                    Me.CaseSensitive = table.CaseSensitive
                End If
                If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                    Me.Locale = table.Locale
                End If
                If (table.Namespace <> table.DataSet.Namespace) Then
                    Me.Namespace = table.Namespace
                End If
                Me.Prefix = table.Prefix
                Me.MinimumCapacity = table.MinimumCapacity
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
                MyBase.New(info, context)
                Me.InitVars
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property IdColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnId
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property DescrizioneColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnDescrizione
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property CodiceColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnCodice
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
             Global.System.ComponentModel.Browsable(false)>  _
            Public ReadOnly Property Count() As Integer
                Get
                    Return Me.Rows.Count
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Default ReadOnly Property Item(ByVal index As Integer) As SistemiErogantiComboRow
                Get
                    Return CType(Me.Rows(index),SistemiErogantiComboRow)
                End Get
            End Property
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event SistemiErogantiComboRowChanging As SistemiErogantiComboRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event SistemiErogantiComboRowChanged As SistemiErogantiComboRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event SistemiErogantiComboRowDeleting As SistemiErogantiComboRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event SistemiErogantiComboRowDeleted As SistemiErogantiComboRowChangeEventHandler
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Overloads Sub AddSistemiErogantiComboRow(ByVal row As SistemiErogantiComboRow)
                Me.Rows.Add(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Overloads Function AddSistemiErogantiComboRow(ByVal Id As String, ByVal Descrizione As String, ByVal Codice As String) As SistemiErogantiComboRow
                Dim rowSistemiErogantiComboRow As SistemiErogantiComboRow = CType(Me.NewRow,SistemiErogantiComboRow)
                Dim columnValuesArray() As Object = New Object() {Id, Descrizione, Codice}
                rowSistemiErogantiComboRow.ItemArray = columnValuesArray
                Me.Rows.Add(rowSistemiErogantiComboRow)
                Return rowSistemiErogantiComboRow
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Overrides Function Clone() As Global.System.Data.DataTable
                Dim cln As SistemiErogantiComboDataTable = CType(MyBase.Clone,SistemiErogantiComboDataTable)
                cln.InitVars
                Return cln
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
                Return New SistemiErogantiComboDataTable()
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Friend Sub InitVars()
                Me.columnId = MyBase.Columns("Id")
                Me.columnDescrizione = MyBase.Columns("Descrizione")
                Me.columnCodice = MyBase.Columns("Codice")
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Private Sub InitClass()
                Me.columnId = New Global.System.Data.DataColumn("Id", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnId)
                Me.columnDescrizione = New Global.System.Data.DataColumn("Descrizione", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnDescrizione)
                Me.columnCodice = New Global.System.Data.DataColumn("Codice", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnCodice)
                Me.columnId.ReadOnly = true
                Me.columnId.MaxLength = 40
                Me.columnDescrizione.ReadOnly = true
                Me.columnDescrizione.MaxLength = 147
                Me.columnCodice.ReadOnly = true
                Me.columnCodice.MaxLength = 35
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function NewSistemiErogantiComboRow() As SistemiErogantiComboRow
                Return CType(Me.NewRow,SistemiErogantiComboRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
                Return New SistemiErogantiComboRow(builder)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Function GetRowType() As Global.System.Type
                Return GetType(SistemiErogantiComboRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanged(e)
                If (Not (Me.SistemiErogantiComboRowChangedEvent) Is Nothing) Then
                    RaiseEvent SistemiErogantiComboRowChanged(Me, New SistemiErogantiComboRowChangeEvent(CType(e.Row,SistemiErogantiComboRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanging(e)
                If (Not (Me.SistemiErogantiComboRowChangingEvent) Is Nothing) Then
                    RaiseEvent SistemiErogantiComboRowChanging(Me, New SistemiErogantiComboRowChangeEvent(CType(e.Row,SistemiErogantiComboRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleted(e)
                If (Not (Me.SistemiErogantiComboRowDeletedEvent) Is Nothing) Then
                    RaiseEvent SistemiErogantiComboRowDeleted(Me, New SistemiErogantiComboRowChangeEvent(CType(e.Row,SistemiErogantiComboRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleting(e)
                If (Not (Me.SistemiErogantiComboRowDeletingEvent) Is Nothing) Then
                    RaiseEvent SistemiErogantiComboRowDeleting(Me, New SistemiErogantiComboRowChangeEvent(CType(e.Row,SistemiErogantiComboRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub RemoveSistemiErogantiComboRow(ByVal row As SistemiErogantiComboRow)
                Me.Rows.Remove(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
                Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
                Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
                Dim ds As BackEndDataSet = New BackEndDataSet()
                Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any1.Namespace = "http://www.w3.org/2001/XMLSchema"
                any1.MinOccurs = New Decimal(0)
                any1.MaxOccurs = Decimal.MaxValue
                any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any1)
                Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
                any2.MinOccurs = New Decimal(1)
                any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any2)
                Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute1.Name = "namespace"
                attribute1.FixedValue = ds.Namespace
                type.Attributes.Add(attribute1)
                Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute2.Name = "tableTypeName"
                attribute2.FixedValue = "SistemiErogantiComboDataTable"
                type.Attributes.Add(attribute2)
                type.Particle = sequence
                Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
                If xs.Contains(dsSchema.TargetNamespace) Then
                    Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Try 
                        Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                        dsSchema.Write(s1)
                        Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                        Do While schemas.MoveNext
                            schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                            s2.SetLength(0)
                            schema.Write(s2)
                            If (s1.Length = s2.Length) Then
                                s1.Position = 0
                                s2.Position = 0
                                
                                Do While ((s1.Position <> s1.Length)  _
                                            AndAlso (s1.ReadByte = s2.ReadByte))
                                    
                                    
                                Loop
                                If (s1.Position = s1.Length) Then
                                    Return type
                                End If
                            End If
                            
                        Loop
                    Finally
                        If (Not (s1) Is Nothing) Then
                            s1.Close
                        End If
                        If (Not (s2) Is Nothing) Then
                            s2.Close
                        End If
                    End Try
                End If
                xs.Add(dsSchema)
                Return type
            End Function
        End Class
        
        '''<summary>
        '''Represents the strongly named DataTable class.
        '''</summary>
        <Global.System.Serializable(),  _
         Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
        Partial Public Class SistemiErogantiDocumentiListaDataTable
            Inherits Global.System.Data.TypedTableBase(Of SistemiErogantiDocumentiListaRow)
            
            Private columnId As Global.System.Data.DataColumn
            
            Private columnNome As Global.System.Data.DataColumn
            
            Private columnDimensione As Global.System.Data.DataColumn
            
            Private columnContentType As Global.System.Data.DataColumn
            
            Private columnAziendaErogante As Global.System.Data.DataColumn
            
            Private columnSistemaErogante As Global.System.Data.DataColumn
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub New()
                MyBase.New
                Me.TableName = "SistemiErogantiDocumentiLista"
                Me.BeginInit
                Me.InitClass
                Me.EndInit
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Friend Sub New(ByVal table As Global.System.Data.DataTable)
                MyBase.New
                Me.TableName = table.TableName
                If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                    Me.CaseSensitive = table.CaseSensitive
                End If
                If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                    Me.Locale = table.Locale
                End If
                If (table.Namespace <> table.DataSet.Namespace) Then
                    Me.Namespace = table.Namespace
                End If
                Me.Prefix = table.Prefix
                Me.MinimumCapacity = table.MinimumCapacity
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
                MyBase.New(info, context)
                Me.InitVars
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property IdColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnId
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property NomeColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnNome
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property DimensioneColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnDimensione
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property ContentTypeColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnContentType
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property AziendaEroganteColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnAziendaErogante
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property SistemaEroganteColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnSistemaErogante
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
             Global.System.ComponentModel.Browsable(false)>  _
            Public ReadOnly Property Count() As Integer
                Get
                    Return Me.Rows.Count
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Default ReadOnly Property Item(ByVal index As Integer) As SistemiErogantiDocumentiListaRow
                Get
                    Return CType(Me.Rows(index),SistemiErogantiDocumentiListaRow)
                End Get
            End Property
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event SistemiErogantiDocumentiListaRowChanging As SistemiErogantiDocumentiListaRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event SistemiErogantiDocumentiListaRowChanged As SistemiErogantiDocumentiListaRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event SistemiErogantiDocumentiListaRowDeleting As SistemiErogantiDocumentiListaRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event SistemiErogantiDocumentiListaRowDeleted As SistemiErogantiDocumentiListaRowChangeEventHandler
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Overloads Sub AddSistemiErogantiDocumentiListaRow(ByVal row As SistemiErogantiDocumentiListaRow)
                Me.Rows.Add(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Overloads Function AddSistemiErogantiDocumentiListaRow(ByVal Id As System.Guid, ByVal Nome As String, ByVal Dimensione As Integer, ByVal ContentType As String, ByVal AziendaErogante As String, ByVal SistemaErogante As String) As SistemiErogantiDocumentiListaRow
                Dim rowSistemiErogantiDocumentiListaRow As SistemiErogantiDocumentiListaRow = CType(Me.NewRow,SistemiErogantiDocumentiListaRow)
                Dim columnValuesArray() As Object = New Object() {Id, Nome, Dimensione, ContentType, AziendaErogante, SistemaErogante}
                rowSistemiErogantiDocumentiListaRow.ItemArray = columnValuesArray
                Me.Rows.Add(rowSistemiErogantiDocumentiListaRow)
                Return rowSistemiErogantiDocumentiListaRow
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function FindById(ByVal Id As System.Guid) As SistemiErogantiDocumentiListaRow
                Return CType(Me.Rows.Find(New Object() {Id}),SistemiErogantiDocumentiListaRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Overrides Function Clone() As Global.System.Data.DataTable
                Dim cln As SistemiErogantiDocumentiListaDataTable = CType(MyBase.Clone,SistemiErogantiDocumentiListaDataTable)
                cln.InitVars
                Return cln
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
                Return New SistemiErogantiDocumentiListaDataTable()
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Friend Sub InitVars()
                Me.columnId = MyBase.Columns("Id")
                Me.columnNome = MyBase.Columns("Nome")
                Me.columnDimensione = MyBase.Columns("Dimensione")
                Me.columnContentType = MyBase.Columns("ContentType")
                Me.columnAziendaErogante = MyBase.Columns("AziendaErogante")
                Me.columnSistemaErogante = MyBase.Columns("SistemaErogante")
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Private Sub InitClass()
                Me.columnId = New Global.System.Data.DataColumn("Id", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnId)
                Me.columnNome = New Global.System.Data.DataColumn("Nome", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnNome)
                Me.columnDimensione = New Global.System.Data.DataColumn("Dimensione", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnDimensione)
                Me.columnContentType = New Global.System.Data.DataColumn("ContentType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnContentType)
                Me.columnAziendaErogante = New Global.System.Data.DataColumn("AziendaErogante", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnAziendaErogante)
                Me.columnSistemaErogante = New Global.System.Data.DataColumn("SistemaErogante", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnSistemaErogante)
                Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnId}, true))
                Me.columnId.AllowDBNull = false
                Me.columnId.Unique = true
                Me.columnNome.ReadOnly = true
                Me.columnNome.MaxLength = 307
                Me.columnDimensione.AllowDBNull = false
                Me.columnContentType.AllowDBNull = false
                Me.columnContentType.MaxLength = 256
                Me.columnAziendaErogante.AllowDBNull = false
                Me.columnAziendaErogante.MaxLength = 16
                Me.columnSistemaErogante.AllowDBNull = false
                Me.columnSistemaErogante.MaxLength = 16
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function NewSistemiErogantiDocumentiListaRow() As SistemiErogantiDocumentiListaRow
                Return CType(Me.NewRow,SistemiErogantiDocumentiListaRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
                Return New SistemiErogantiDocumentiListaRow(builder)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Function GetRowType() As Global.System.Type
                Return GetType(SistemiErogantiDocumentiListaRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanged(e)
                If (Not (Me.SistemiErogantiDocumentiListaRowChangedEvent) Is Nothing) Then
                    RaiseEvent SistemiErogantiDocumentiListaRowChanged(Me, New SistemiErogantiDocumentiListaRowChangeEvent(CType(e.Row,SistemiErogantiDocumentiListaRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanging(e)
                If (Not (Me.SistemiErogantiDocumentiListaRowChangingEvent) Is Nothing) Then
                    RaiseEvent SistemiErogantiDocumentiListaRowChanging(Me, New SistemiErogantiDocumentiListaRowChangeEvent(CType(e.Row,SistemiErogantiDocumentiListaRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleted(e)
                If (Not (Me.SistemiErogantiDocumentiListaRowDeletedEvent) Is Nothing) Then
                    RaiseEvent SistemiErogantiDocumentiListaRowDeleted(Me, New SistemiErogantiDocumentiListaRowChangeEvent(CType(e.Row,SistemiErogantiDocumentiListaRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleting(e)
                If (Not (Me.SistemiErogantiDocumentiListaRowDeletingEvent) Is Nothing) Then
                    RaiseEvent SistemiErogantiDocumentiListaRowDeleting(Me, New SistemiErogantiDocumentiListaRowChangeEvent(CType(e.Row,SistemiErogantiDocumentiListaRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub RemoveSistemiErogantiDocumentiListaRow(ByVal row As SistemiErogantiDocumentiListaRow)
                Me.Rows.Remove(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
                Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
                Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
                Dim ds As BackEndDataSet = New BackEndDataSet()
                Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any1.Namespace = "http://www.w3.org/2001/XMLSchema"
                any1.MinOccurs = New Decimal(0)
                any1.MaxOccurs = Decimal.MaxValue
                any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any1)
                Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
                any2.MinOccurs = New Decimal(1)
                any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any2)
                Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute1.Name = "namespace"
                attribute1.FixedValue = ds.Namespace
                type.Attributes.Add(attribute1)
                Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute2.Name = "tableTypeName"
                attribute2.FixedValue = "SistemiErogantiDocumentiListaDataTable"
                type.Attributes.Add(attribute2)
                type.Particle = sequence
                Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
                If xs.Contains(dsSchema.TargetNamespace) Then
                    Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Try 
                        Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                        dsSchema.Write(s1)
                        Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                        Do While schemas.MoveNext
                            schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                            s2.SetLength(0)
                            schema.Write(s2)
                            If (s1.Length = s2.Length) Then
                                s1.Position = 0
                                s2.Position = 0
                                
                                Do While ((s1.Position <> s1.Length)  _
                                            AndAlso (s1.ReadByte = s2.ReadByte))
                                    
                                    
                                Loop
                                If (s1.Position = s1.Length) Then
                                    Return type
                                End If
                            End If
                            
                        Loop
                    Finally
                        If (Not (s1) Is Nothing) Then
                            s1.Close
                        End If
                        If (Not (s2) Is Nothing) Then
                            s2.Close
                        End If
                    End Try
                End If
                xs.Add(dsSchema)
                Return type
            End Function
        End Class
        
        '''<summary>
        '''Represents the strongly named DataTable class.
        '''</summary>
        <Global.System.Serializable(),  _
         Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
        Partial Public Class SistemiErogantiDocumentiDettaglioDataTable
            Inherits Global.System.Data.TypedTableBase(Of SistemiErogantiDocumentiDettaglioRow)
            
            Private columnContenuto As Global.System.Data.DataColumn
            
            Private columnId As Global.System.Data.DataColumn
            
            Private columnNome As Global.System.Data.DataColumn
            
            Private columnEstensione As Global.System.Data.DataColumn
            
            Private columnDimensione As Global.System.Data.DataColumn
            
            Private columnContentType As Global.System.Data.DataColumn
            
            Private columnIdSistemaErogante As Global.System.Data.DataColumn
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub New()
                MyBase.New
                Me.TableName = "SistemiErogantiDocumentiDettaglio"
                Me.BeginInit
                Me.InitClass
                Me.EndInit
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Friend Sub New(ByVal table As Global.System.Data.DataTable)
                MyBase.New
                Me.TableName = table.TableName
                If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                    Me.CaseSensitive = table.CaseSensitive
                End If
                If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                    Me.Locale = table.Locale
                End If
                If (table.Namespace <> table.DataSet.Namespace) Then
                    Me.Namespace = table.Namespace
                End If
                Me.Prefix = table.Prefix
                Me.MinimumCapacity = table.MinimumCapacity
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
                MyBase.New(info, context)
                Me.InitVars
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property ContenutoColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnContenuto
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property IdColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnId
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property NomeColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnNome
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property EstensioneColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnEstensione
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property DimensioneColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnDimensione
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property ContentTypeColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnContentType
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property IdSistemaEroganteColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnIdSistemaErogante
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
             Global.System.ComponentModel.Browsable(false)>  _
            Public ReadOnly Property Count() As Integer
                Get
                    Return Me.Rows.Count
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Default ReadOnly Property Item(ByVal index As Integer) As SistemiErogantiDocumentiDettaglioRow
                Get
                    Return CType(Me.Rows(index),SistemiErogantiDocumentiDettaglioRow)
                End Get
            End Property
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event SistemiErogantiDocumentiDettaglioRowChanging As SistemiErogantiDocumentiDettaglioRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event SistemiErogantiDocumentiDettaglioRowChanged As SistemiErogantiDocumentiDettaglioRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event SistemiErogantiDocumentiDettaglioRowDeleting As SistemiErogantiDocumentiDettaglioRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event SistemiErogantiDocumentiDettaglioRowDeleted As SistemiErogantiDocumentiDettaglioRowChangeEventHandler
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Overloads Sub AddSistemiErogantiDocumentiDettaglioRow(ByVal row As SistemiErogantiDocumentiDettaglioRow)
                Me.Rows.Add(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Overloads Function AddSistemiErogantiDocumentiDettaglioRow(ByVal Contenuto() As Byte, ByVal Id As System.Guid, ByVal Nome As String, ByVal Estensione As String, ByVal Dimensione As Integer, ByVal ContentType As String, ByVal IdSistemaErogante As System.Guid) As SistemiErogantiDocumentiDettaglioRow
                Dim rowSistemiErogantiDocumentiDettaglioRow As SistemiErogantiDocumentiDettaglioRow = CType(Me.NewRow,SistemiErogantiDocumentiDettaglioRow)
                Dim columnValuesArray() As Object = New Object() {Contenuto, Id, Nome, Estensione, Dimensione, ContentType, IdSistemaErogante}
                rowSistemiErogantiDocumentiDettaglioRow.ItemArray = columnValuesArray
                Me.Rows.Add(rowSistemiErogantiDocumentiDettaglioRow)
                Return rowSistemiErogantiDocumentiDettaglioRow
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function FindById(ByVal Id As System.Guid) As SistemiErogantiDocumentiDettaglioRow
                Return CType(Me.Rows.Find(New Object() {Id}),SistemiErogantiDocumentiDettaglioRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Overrides Function Clone() As Global.System.Data.DataTable
                Dim cln As SistemiErogantiDocumentiDettaglioDataTable = CType(MyBase.Clone,SistemiErogantiDocumentiDettaglioDataTable)
                cln.InitVars
                Return cln
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
                Return New SistemiErogantiDocumentiDettaglioDataTable()
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Friend Sub InitVars()
                Me.columnContenuto = MyBase.Columns("Contenuto")
                Me.columnId = MyBase.Columns("Id")
                Me.columnNome = MyBase.Columns("Nome")
                Me.columnEstensione = MyBase.Columns("Estensione")
                Me.columnDimensione = MyBase.Columns("Dimensione")
                Me.columnContentType = MyBase.Columns("ContentType")
                Me.columnIdSistemaErogante = MyBase.Columns("IdSistemaErogante")
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Private Sub InitClass()
                Me.columnContenuto = New Global.System.Data.DataColumn("Contenuto", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnContenuto)
                Me.columnId = New Global.System.Data.DataColumn("Id", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnId)
                Me.columnNome = New Global.System.Data.DataColumn("Nome", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnNome)
                Me.columnEstensione = New Global.System.Data.DataColumn("Estensione", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnEstensione)
                Me.columnDimensione = New Global.System.Data.DataColumn("Dimensione", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnDimensione)
                Me.columnContentType = New Global.System.Data.DataColumn("ContentType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnContentType)
                Me.columnIdSistemaErogante = New Global.System.Data.DataColumn("IdSistemaErogante", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnIdSistemaErogante)
                Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnId}, true))
                Me.columnContenuto.ReadOnly = true
                Me.columnId.AllowDBNull = false
                Me.columnId.Unique = true
                Me.columnNome.AllowDBNull = false
                Me.columnNome.MaxLength = 256
                Me.columnEstensione.AllowDBNull = false
                Me.columnEstensione.MaxLength = 50
                Me.columnDimensione.AllowDBNull = false
                Me.columnContentType.AllowDBNull = false
                Me.columnContentType.MaxLength = 256
                Me.columnIdSistemaErogante.AllowDBNull = false
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function NewSistemiErogantiDocumentiDettaglioRow() As SistemiErogantiDocumentiDettaglioRow
                Return CType(Me.NewRow,SistemiErogantiDocumentiDettaglioRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
                Return New SistemiErogantiDocumentiDettaglioRow(builder)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Function GetRowType() As Global.System.Type
                Return GetType(SistemiErogantiDocumentiDettaglioRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanged(e)
                If (Not (Me.SistemiErogantiDocumentiDettaglioRowChangedEvent) Is Nothing) Then
                    RaiseEvent SistemiErogantiDocumentiDettaglioRowChanged(Me, New SistemiErogantiDocumentiDettaglioRowChangeEvent(CType(e.Row,SistemiErogantiDocumentiDettaglioRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanging(e)
                If (Not (Me.SistemiErogantiDocumentiDettaglioRowChangingEvent) Is Nothing) Then
                    RaiseEvent SistemiErogantiDocumentiDettaglioRowChanging(Me, New SistemiErogantiDocumentiDettaglioRowChangeEvent(CType(e.Row,SistemiErogantiDocumentiDettaglioRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleted(e)
                If (Not (Me.SistemiErogantiDocumentiDettaglioRowDeletedEvent) Is Nothing) Then
                    RaiseEvent SistemiErogantiDocumentiDettaglioRowDeleted(Me, New SistemiErogantiDocumentiDettaglioRowChangeEvent(CType(e.Row,SistemiErogantiDocumentiDettaglioRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleting(e)
                If (Not (Me.SistemiErogantiDocumentiDettaglioRowDeletingEvent) Is Nothing) Then
                    RaiseEvent SistemiErogantiDocumentiDettaglioRowDeleting(Me, New SistemiErogantiDocumentiDettaglioRowChangeEvent(CType(e.Row,SistemiErogantiDocumentiDettaglioRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub RemoveSistemiErogantiDocumentiDettaglioRow(ByVal row As SistemiErogantiDocumentiDettaglioRow)
                Me.Rows.Remove(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
                Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
                Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
                Dim ds As BackEndDataSet = New BackEndDataSet()
                Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any1.Namespace = "http://www.w3.org/2001/XMLSchema"
                any1.MinOccurs = New Decimal(0)
                any1.MaxOccurs = Decimal.MaxValue
                any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any1)
                Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
                any2.MinOccurs = New Decimal(1)
                any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any2)
                Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute1.Name = "namespace"
                attribute1.FixedValue = ds.Namespace
                type.Attributes.Add(attribute1)
                Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute2.Name = "tableTypeName"
                attribute2.FixedValue = "SistemiErogantiDocumentiDettaglioDataTable"
                type.Attributes.Add(attribute2)
                type.Particle = sequence
                Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
                If xs.Contains(dsSchema.TargetNamespace) Then
                    Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Try 
                        Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                        dsSchema.Write(s1)
                        Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                        Do While schemas.MoveNext
                            schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                            s2.SetLength(0)
                            schema.Write(s2)
                            If (s1.Length = s2.Length) Then
                                s1.Position = 0
                                s2.Position = 0
                                
                                Do While ((s1.Position <> s1.Length)  _
                                            AndAlso (s1.ReadByte = s2.ReadByte))
                                    
                                    
                                Loop
                                If (s1.Position = s1.Length) Then
                                    Return type
                                End If
                            End If
                            
                        Loop
                    Finally
                        If (Not (s1) Is Nothing) Then
                            s1.Close
                        End If
                        If (Not (s2) Is Nothing) Then
                            s2.Close
                        End If
                    End Try
                End If
                xs.Add(dsSchema)
                Return type
            End Function
        End Class
        
        '''<summary>
        '''Represents the strongly named DataTable class.
        '''</summary>
        <Global.System.Serializable(),  _
         Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
        Partial Public Class BevsSistemiErogantiDocumentiListaDataTable
            Inherits Global.System.Data.TypedTableBase(Of BevsSistemiErogantiDocumentiListaRow)
            
            Private columnId As Global.System.Data.DataColumn
            
            Private columnNome As Global.System.Data.DataColumn
            
            Private columnDimensione As Global.System.Data.DataColumn
            
            Private columnContentType As Global.System.Data.DataColumn
            
            Private columnAziendaErogante As Global.System.Data.DataColumn
            
            Private columnSistemaErogante As Global.System.Data.DataColumn
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub New()
                MyBase.New
                Me.TableName = "BevsSistemiErogantiDocumentiLista"
                Me.BeginInit
                Me.InitClass
                Me.EndInit
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Friend Sub New(ByVal table As Global.System.Data.DataTable)
                MyBase.New
                Me.TableName = table.TableName
                If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                    Me.CaseSensitive = table.CaseSensitive
                End If
                If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                    Me.Locale = table.Locale
                End If
                If (table.Namespace <> table.DataSet.Namespace) Then
                    Me.Namespace = table.Namespace
                End If
                Me.Prefix = table.Prefix
                Me.MinimumCapacity = table.MinimumCapacity
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
                MyBase.New(info, context)
                Me.InitVars
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property IdColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnId
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property NomeColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnNome
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property DimensioneColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnDimensione
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property ContentTypeColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnContentType
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property AziendaEroganteColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnAziendaErogante
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property SistemaEroganteColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnSistemaErogante
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
             Global.System.ComponentModel.Browsable(false)>  _
            Public ReadOnly Property Count() As Integer
                Get
                    Return Me.Rows.Count
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Default ReadOnly Property Item(ByVal index As Integer) As BevsSistemiErogantiDocumentiListaRow
                Get
                    Return CType(Me.Rows(index),BevsSistemiErogantiDocumentiListaRow)
                End Get
            End Property
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event BevsSistemiErogantiDocumentiListaRowChanging As BevsSistemiErogantiDocumentiListaRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event BevsSistemiErogantiDocumentiListaRowChanged As BevsSistemiErogantiDocumentiListaRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event BevsSistemiErogantiDocumentiListaRowDeleting As BevsSistemiErogantiDocumentiListaRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event BevsSistemiErogantiDocumentiListaRowDeleted As BevsSistemiErogantiDocumentiListaRowChangeEventHandler
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Overloads Sub AddBevsSistemiErogantiDocumentiListaRow(ByVal row As BevsSistemiErogantiDocumentiListaRow)
                Me.Rows.Add(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Overloads Function AddBevsSistemiErogantiDocumentiListaRow(ByVal Id As System.Guid, ByVal Nome As String, ByVal Dimensione As Integer, ByVal ContentType As String, ByVal AziendaErogante As String, ByVal SistemaErogante As String) As BevsSistemiErogantiDocumentiListaRow
                Dim rowBevsSistemiErogantiDocumentiListaRow As BevsSistemiErogantiDocumentiListaRow = CType(Me.NewRow,BevsSistemiErogantiDocumentiListaRow)
                Dim columnValuesArray() As Object = New Object() {Id, Nome, Dimensione, ContentType, AziendaErogante, SistemaErogante}
                rowBevsSistemiErogantiDocumentiListaRow.ItemArray = columnValuesArray
                Me.Rows.Add(rowBevsSistemiErogantiDocumentiListaRow)
                Return rowBevsSistemiErogantiDocumentiListaRow
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function FindById(ByVal Id As System.Guid) As BevsSistemiErogantiDocumentiListaRow
                Return CType(Me.Rows.Find(New Object() {Id}),BevsSistemiErogantiDocumentiListaRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Overrides Function Clone() As Global.System.Data.DataTable
                Dim cln As BevsSistemiErogantiDocumentiListaDataTable = CType(MyBase.Clone,BevsSistemiErogantiDocumentiListaDataTable)
                cln.InitVars
                Return cln
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
                Return New BevsSistemiErogantiDocumentiListaDataTable()
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Friend Sub InitVars()
                Me.columnId = MyBase.Columns("Id")
                Me.columnNome = MyBase.Columns("Nome")
                Me.columnDimensione = MyBase.Columns("Dimensione")
                Me.columnContentType = MyBase.Columns("ContentType")
                Me.columnAziendaErogante = MyBase.Columns("AziendaErogante")
                Me.columnSistemaErogante = MyBase.Columns("SistemaErogante")
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Private Sub InitClass()
                Me.columnId = New Global.System.Data.DataColumn("Id", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnId)
                Me.columnNome = New Global.System.Data.DataColumn("Nome", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnNome)
                Me.columnDimensione = New Global.System.Data.DataColumn("Dimensione", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnDimensione)
                Me.columnContentType = New Global.System.Data.DataColumn("ContentType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnContentType)
                Me.columnAziendaErogante = New Global.System.Data.DataColumn("AziendaErogante", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnAziendaErogante)
                Me.columnSistemaErogante = New Global.System.Data.DataColumn("SistemaErogante", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnSistemaErogante)
                Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnId}, true))
                Me.columnId.AllowDBNull = false
                Me.columnId.Unique = true
                Me.columnNome.ReadOnly = true
                Me.columnNome.MaxLength = 307
                Me.columnDimensione.AllowDBNull = false
                Me.columnContentType.AllowDBNull = false
                Me.columnContentType.MaxLength = 256
                Me.columnAziendaErogante.AllowDBNull = false
                Me.columnAziendaErogante.MaxLength = 16
                Me.columnSistemaErogante.AllowDBNull = false
                Me.columnSistemaErogante.MaxLength = 16
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function NewBevsSistemiErogantiDocumentiListaRow() As BevsSistemiErogantiDocumentiListaRow
                Return CType(Me.NewRow,BevsSistemiErogantiDocumentiListaRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
                Return New BevsSistemiErogantiDocumentiListaRow(builder)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Function GetRowType() As Global.System.Type
                Return GetType(BevsSistemiErogantiDocumentiListaRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanged(e)
                If (Not (Me.BevsSistemiErogantiDocumentiListaRowChangedEvent) Is Nothing) Then
                    RaiseEvent BevsSistemiErogantiDocumentiListaRowChanged(Me, New BevsSistemiErogantiDocumentiListaRowChangeEvent(CType(e.Row,BevsSistemiErogantiDocumentiListaRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanging(e)
                If (Not (Me.BevsSistemiErogantiDocumentiListaRowChangingEvent) Is Nothing) Then
                    RaiseEvent BevsSistemiErogantiDocumentiListaRowChanging(Me, New BevsSistemiErogantiDocumentiListaRowChangeEvent(CType(e.Row,BevsSistemiErogantiDocumentiListaRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleted(e)
                If (Not (Me.BevsSistemiErogantiDocumentiListaRowDeletedEvent) Is Nothing) Then
                    RaiseEvent BevsSistemiErogantiDocumentiListaRowDeleted(Me, New BevsSistemiErogantiDocumentiListaRowChangeEvent(CType(e.Row,BevsSistemiErogantiDocumentiListaRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleting(e)
                If (Not (Me.BevsSistemiErogantiDocumentiListaRowDeletingEvent) Is Nothing) Then
                    RaiseEvent BevsSistemiErogantiDocumentiListaRowDeleting(Me, New BevsSistemiErogantiDocumentiListaRowChangeEvent(CType(e.Row,BevsSistemiErogantiDocumentiListaRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub RemoveBevsSistemiErogantiDocumentiListaRow(ByVal row As BevsSistemiErogantiDocumentiListaRow)
                Me.Rows.Remove(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
                Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
                Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
                Dim ds As BackEndDataSet = New BackEndDataSet()
                Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any1.Namespace = "http://www.w3.org/2001/XMLSchema"
                any1.MinOccurs = New Decimal(0)
                any1.MaxOccurs = Decimal.MaxValue
                any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any1)
                Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
                any2.MinOccurs = New Decimal(1)
                any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any2)
                Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute1.Name = "namespace"
                attribute1.FixedValue = ds.Namespace
                type.Attributes.Add(attribute1)
                Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute2.Name = "tableTypeName"
                attribute2.FixedValue = "BevsSistemiErogantiDocumentiListaDataTable"
                type.Attributes.Add(attribute2)
                type.Particle = sequence
                Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
                If xs.Contains(dsSchema.TargetNamespace) Then
                    Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Try 
                        Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                        dsSchema.Write(s1)
                        Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                        Do While schemas.MoveNext
                            schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                            s2.SetLength(0)
                            schema.Write(s2)
                            If (s1.Length = s2.Length) Then
                                s1.Position = 0
                                s2.Position = 0
                                
                                Do While ((s1.Position <> s1.Length)  _
                                            AndAlso (s1.ReadByte = s2.ReadByte))
                                    
                                    
                                Loop
                                If (s1.Position = s1.Length) Then
                                    Return type
                                End If
                            End If
                            
                        Loop
                    Finally
                        If (Not (s1) Is Nothing) Then
                            s1.Close
                        End If
                        If (Not (s2) Is Nothing) Then
                            s2.Close
                        End If
                    End Try
                End If
                xs.Add(dsSchema)
                Return type
            End Function
        End Class
        
        '''<summary>
        '''Represents the strongly named DataTable class.
        '''</summary>
        <Global.System.Serializable(),  _
         Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
        Partial Public Class BeRefertiListaDataTable
            Inherits Global.System.Data.TypedTableBase(Of BeRefertiListaRow)
            
            Private columnID As Global.System.Data.DataColumn
            
            Private columnIdEsterno As Global.System.Data.DataColumn
            
            Private columnIdPaziente As Global.System.Data.DataColumn
            
            Private columnDataInserimento As Global.System.Data.DataColumn
            
            Private columnDataModifica As Global.System.Data.DataColumn
            
            Private columnAziendaErogante As Global.System.Data.DataColumn
            
            Private columnSistemaErogante As Global.System.Data.DataColumn
            
            Private columnRepartoErogante As Global.System.Data.DataColumn
            
            Private columnDataReferto As Global.System.Data.DataColumn
            
            Private columnNumeroReferto As Global.System.Data.DataColumn
            
            Private columnNumeroNosologico As Global.System.Data.DataColumn
            
            Private columnNumeroPrenotazione As Global.System.Data.DataColumn
            
            Private columnCognome As Global.System.Data.DataColumn
            
            Private columnNome As Global.System.Data.DataColumn
            
            Private columnCodiceFiscale As Global.System.Data.DataColumn
            
            Private columnDataNascita As Global.System.Data.DataColumn
            
            Private columnComuneNascita As Global.System.Data.DataColumn
            
            Private columnCodiceSanitario As Global.System.Data.DataColumn
            
            Private columnRepartoRichiedenteCodice As Global.System.Data.DataColumn
            
            Private columnRepartoRichiedenteDescr As Global.System.Data.DataColumn
            
            Private columnStatoRichiestaCodice As Global.System.Data.DataColumn
            
            Private columnStatoRichiestaDescr As Global.System.Data.DataColumn
            
            Private columnCodiceOscuramento As Global.System.Data.DataColumn
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub New()
                MyBase.New
                Me.TableName = "BeRefertiLista"
                Me.BeginInit
                Me.InitClass
                Me.EndInit
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Friend Sub New(ByVal table As Global.System.Data.DataTable)
                MyBase.New
                Me.TableName = table.TableName
                If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                    Me.CaseSensitive = table.CaseSensitive
                End If
                If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                    Me.Locale = table.Locale
                End If
                If (table.Namespace <> table.DataSet.Namespace) Then
                    Me.Namespace = table.Namespace
                End If
                Me.Prefix = table.Prefix
                Me.MinimumCapacity = table.MinimumCapacity
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
                MyBase.New(info, context)
                Me.InitVars
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property IDColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnID
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property IdEsternoColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnIdEsterno
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property IdPazienteColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnIdPaziente
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property DataInserimentoColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnDataInserimento
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property DataModificaColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnDataModifica
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property AziendaEroganteColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnAziendaErogante
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property SistemaEroganteColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnSistemaErogante
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property RepartoEroganteColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnRepartoErogante
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property DataRefertoColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnDataReferto
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property NumeroRefertoColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnNumeroReferto
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property NumeroNosologicoColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnNumeroNosologico
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property NumeroPrenotazioneColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnNumeroPrenotazione
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property CognomeColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnCognome
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property NomeColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnNome
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property CodiceFiscaleColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnCodiceFiscale
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property DataNascitaColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnDataNascita
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property ComuneNascitaColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnComuneNascita
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property CodiceSanitarioColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnCodiceSanitario
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property RepartoRichiedenteCodiceColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnRepartoRichiedenteCodice
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property RepartoRichiedenteDescrColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnRepartoRichiedenteDescr
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property StatoRichiestaCodiceColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnStatoRichiestaCodice
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property StatoRichiestaDescrColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnStatoRichiestaDescr
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property CodiceOscuramentoColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnCodiceOscuramento
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
             Global.System.ComponentModel.Browsable(false)>  _
            Public ReadOnly Property Count() As Integer
                Get
                    Return Me.Rows.Count
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Default ReadOnly Property Item(ByVal index As Integer) As BeRefertiListaRow
                Get
                    Return CType(Me.Rows(index),BeRefertiListaRow)
                End Get
            End Property
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event BeRefertiListaRowChanging As BeRefertiListaRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event BeRefertiListaRowChanged As BeRefertiListaRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event BeRefertiListaRowDeleting As BeRefertiListaRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event BeRefertiListaRowDeleted As BeRefertiListaRowChangeEventHandler
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Overloads Sub AddBeRefertiListaRow(ByVal row As BeRefertiListaRow)
                Me.Rows.Add(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Overloads Function AddBeRefertiListaRow( _
                        ByVal ID As System.Guid,  _
                        ByVal IdEsterno As String,  _
                        ByVal IdPaziente As System.Guid,  _
                        ByVal DataInserimento As Date,  _
                        ByVal DataModifica As Date,  _
                        ByVal AziendaErogante As String,  _
                        ByVal SistemaErogante As String,  _
                        ByVal RepartoErogante As String,  _
                        ByVal DataReferto As Date,  _
                        ByVal NumeroReferto As String,  _
                        ByVal NumeroNosologico As String,  _
                        ByVal NumeroPrenotazione As String,  _
                        ByVal Cognome As String,  _
                        ByVal Nome As String,  _
                        ByVal CodiceFiscale As String,  _
                        ByVal DataNascita As Date,  _
                        ByVal ComuneNascita As String,  _
                        ByVal CodiceSanitario As String,  _
                        ByVal RepartoRichiedenteCodice As String,  _
                        ByVal RepartoRichiedenteDescr As String,  _
                        ByVal StatoRichiestaCodice As String,  _
                        ByVal StatoRichiestaDescr As String,  _
                        ByVal CodiceOscuramento As String) As BeRefertiListaRow
                Dim rowBeRefertiListaRow As BeRefertiListaRow = CType(Me.NewRow,BeRefertiListaRow)
                Dim columnValuesArray() As Object = New Object() {ID, IdEsterno, IdPaziente, DataInserimento, DataModifica, AziendaErogante, SistemaErogante, RepartoErogante, DataReferto, NumeroReferto, NumeroNosologico, NumeroPrenotazione, Cognome, Nome, CodiceFiscale, DataNascita, ComuneNascita, CodiceSanitario, RepartoRichiedenteCodice, RepartoRichiedenteDescr, StatoRichiestaCodice, StatoRichiestaDescr, CodiceOscuramento}
                rowBeRefertiListaRow.ItemArray = columnValuesArray
                Me.Rows.Add(rowBeRefertiListaRow)
                Return rowBeRefertiListaRow
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Overrides Function Clone() As Global.System.Data.DataTable
                Dim cln As BeRefertiListaDataTable = CType(MyBase.Clone,BeRefertiListaDataTable)
                cln.InitVars
                Return cln
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
                Return New BeRefertiListaDataTable()
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Friend Sub InitVars()
                Me.columnID = MyBase.Columns("ID")
                Me.columnIdEsterno = MyBase.Columns("IdEsterno")
                Me.columnIdPaziente = MyBase.Columns("IdPaziente")
                Me.columnDataInserimento = MyBase.Columns("DataInserimento")
                Me.columnDataModifica = MyBase.Columns("DataModifica")
                Me.columnAziendaErogante = MyBase.Columns("AziendaErogante")
                Me.columnSistemaErogante = MyBase.Columns("SistemaErogante")
                Me.columnRepartoErogante = MyBase.Columns("RepartoErogante")
                Me.columnDataReferto = MyBase.Columns("DataReferto")
                Me.columnNumeroReferto = MyBase.Columns("NumeroReferto")
                Me.columnNumeroNosologico = MyBase.Columns("NumeroNosologico")
                Me.columnNumeroPrenotazione = MyBase.Columns("NumeroPrenotazione")
                Me.columnCognome = MyBase.Columns("Cognome")
                Me.columnNome = MyBase.Columns("Nome")
                Me.columnCodiceFiscale = MyBase.Columns("CodiceFiscale")
                Me.columnDataNascita = MyBase.Columns("DataNascita")
                Me.columnComuneNascita = MyBase.Columns("ComuneNascita")
                Me.columnCodiceSanitario = MyBase.Columns("CodiceSanitario")
                Me.columnRepartoRichiedenteCodice = MyBase.Columns("RepartoRichiedenteCodice")
                Me.columnRepartoRichiedenteDescr = MyBase.Columns("RepartoRichiedenteDescr")
                Me.columnStatoRichiestaCodice = MyBase.Columns("StatoRichiestaCodice")
                Me.columnStatoRichiestaDescr = MyBase.Columns("StatoRichiestaDescr")
                Me.columnCodiceOscuramento = MyBase.Columns("CodiceOscuramento")
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Private Sub InitClass()
                Me.columnID = New Global.System.Data.DataColumn("ID", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnID)
                Me.columnIdEsterno = New Global.System.Data.DataColumn("IdEsterno", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnIdEsterno)
                Me.columnIdPaziente = New Global.System.Data.DataColumn("IdPaziente", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnIdPaziente)
                Me.columnDataInserimento = New Global.System.Data.DataColumn("DataInserimento", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnDataInserimento)
                Me.columnDataModifica = New Global.System.Data.DataColumn("DataModifica", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnDataModifica)
                Me.columnAziendaErogante = New Global.System.Data.DataColumn("AziendaErogante", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnAziendaErogante)
                Me.columnSistemaErogante = New Global.System.Data.DataColumn("SistemaErogante", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnSistemaErogante)
                Me.columnRepartoErogante = New Global.System.Data.DataColumn("RepartoErogante", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnRepartoErogante)
                Me.columnDataReferto = New Global.System.Data.DataColumn("DataReferto", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnDataReferto)
                Me.columnNumeroReferto = New Global.System.Data.DataColumn("NumeroReferto", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnNumeroReferto)
                Me.columnNumeroNosologico = New Global.System.Data.DataColumn("NumeroNosologico", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnNumeroNosologico)
                Me.columnNumeroPrenotazione = New Global.System.Data.DataColumn("NumeroPrenotazione", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnNumeroPrenotazione)
                Me.columnCognome = New Global.System.Data.DataColumn("Cognome", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnCognome)
                Me.columnNome = New Global.System.Data.DataColumn("Nome", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnNome)
                Me.columnCodiceFiscale = New Global.System.Data.DataColumn("CodiceFiscale", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnCodiceFiscale)
                Me.columnDataNascita = New Global.System.Data.DataColumn("DataNascita", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnDataNascita)
                Me.columnComuneNascita = New Global.System.Data.DataColumn("ComuneNascita", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnComuneNascita)
                Me.columnCodiceSanitario = New Global.System.Data.DataColumn("CodiceSanitario", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnCodiceSanitario)
                Me.columnRepartoRichiedenteCodice = New Global.System.Data.DataColumn("RepartoRichiedenteCodice", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnRepartoRichiedenteCodice)
                Me.columnRepartoRichiedenteDescr = New Global.System.Data.DataColumn("RepartoRichiedenteDescr", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnRepartoRichiedenteDescr)
                Me.columnStatoRichiestaCodice = New Global.System.Data.DataColumn("StatoRichiestaCodice", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnStatoRichiestaCodice)
                Me.columnStatoRichiestaDescr = New Global.System.Data.DataColumn("StatoRichiestaDescr", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnStatoRichiestaDescr)
                Me.columnCodiceOscuramento = New Global.System.Data.DataColumn("CodiceOscuramento", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnCodiceOscuramento)
                Me.columnID.AllowDBNull = false
                Me.columnIdEsterno.AllowDBNull = false
                Me.columnIdEsterno.MaxLength = 64
                Me.columnDataInserimento.AllowDBNull = false
                Me.columnDataModifica.AllowDBNull = false
                Me.columnAziendaErogante.AllowDBNull = false
                Me.columnAziendaErogante.MaxLength = 16
                Me.columnSistemaErogante.AllowDBNull = false
                Me.columnSistemaErogante.MaxLength = 16
                Me.columnRepartoErogante.MaxLength = 64
                Me.columnDataReferto.AllowDBNull = false
                Me.columnNumeroReferto.AllowDBNull = false
                Me.columnNumeroReferto.MaxLength = 16
                Me.columnNumeroNosologico.MaxLength = 64
                Me.columnNumeroPrenotazione.MaxLength = 32
                Me.columnCognome.MaxLength = 64
                Me.columnNome.MaxLength = 64
                Me.columnCodiceFiscale.MaxLength = 16
                Me.columnComuneNascita.ReadOnly = true
                Me.columnComuneNascita.MaxLength = 128
                Me.columnCodiceSanitario.MaxLength = 16
                Me.columnRepartoRichiedenteCodice.MaxLength = 16
                Me.columnRepartoRichiedenteDescr.MaxLength = 128
                Me.columnStatoRichiestaCodice.ReadOnly = true
                Me.columnStatoRichiestaCodice.MaxLength = 16
                Me.columnStatoRichiestaDescr.ReadOnly = true
                Me.columnStatoRichiestaDescr.MaxLength = 128
                Me.columnCodiceOscuramento.ReadOnly = true
                Me.columnCodiceOscuramento.MaxLength = 1000
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function NewBeRefertiListaRow() As BeRefertiListaRow
                Return CType(Me.NewRow,BeRefertiListaRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
                Return New BeRefertiListaRow(builder)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Function GetRowType() As Global.System.Type
                Return GetType(BeRefertiListaRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanged(e)
                If (Not (Me.BeRefertiListaRowChangedEvent) Is Nothing) Then
                    RaiseEvent BeRefertiListaRowChanged(Me, New BeRefertiListaRowChangeEvent(CType(e.Row,BeRefertiListaRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanging(e)
                If (Not (Me.BeRefertiListaRowChangingEvent) Is Nothing) Then
                    RaiseEvent BeRefertiListaRowChanging(Me, New BeRefertiListaRowChangeEvent(CType(e.Row,BeRefertiListaRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleted(e)
                If (Not (Me.BeRefertiListaRowDeletedEvent) Is Nothing) Then
                    RaiseEvent BeRefertiListaRowDeleted(Me, New BeRefertiListaRowChangeEvent(CType(e.Row,BeRefertiListaRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleting(e)
                If (Not (Me.BeRefertiListaRowDeletingEvent) Is Nothing) Then
                    RaiseEvent BeRefertiListaRowDeleting(Me, New BeRefertiListaRowChangeEvent(CType(e.Row,BeRefertiListaRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub RemoveBeRefertiListaRow(ByVal row As BeRefertiListaRow)
                Me.Rows.Remove(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
                Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
                Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
                Dim ds As BackEndDataSet = New BackEndDataSet()
                Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any1.Namespace = "http://www.w3.org/2001/XMLSchema"
                any1.MinOccurs = New Decimal(0)
                any1.MaxOccurs = Decimal.MaxValue
                any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any1)
                Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
                any2.MinOccurs = New Decimal(1)
                any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any2)
                Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute1.Name = "namespace"
                attribute1.FixedValue = ds.Namespace
                type.Attributes.Add(attribute1)
                Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute2.Name = "tableTypeName"
                attribute2.FixedValue = "BeRefertiListaDataTable"
                type.Attributes.Add(attribute2)
                type.Particle = sequence
                Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
                If xs.Contains(dsSchema.TargetNamespace) Then
                    Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Try 
                        Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                        dsSchema.Write(s1)
                        Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                        Do While schemas.MoveNext
                            schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                            s2.SetLength(0)
                            schema.Write(s2)
                            If (s1.Length = s2.Length) Then
                                s1.Position = 0
                                s2.Position = 0
                                
                                Do While ((s1.Position <> s1.Length)  _
                                            AndAlso (s1.ReadByte = s2.ReadByte))
                                    
                                    
                                Loop
                                If (s1.Position = s1.Length) Then
                                    Return type
                                End If
                            End If
                            
                        Loop
                    Finally
                        If (Not (s1) Is Nothing) Then
                            s1.Close
                        End If
                        If (Not (s2) Is Nothing) Then
                            s2.Close
                        End If
                    End Try
                End If
                xs.Add(dsSchema)
                Return type
            End Function
        End Class
        
        '''<summary>
        '''Represents the strongly named DataTable class.
        '''</summary>
        <Global.System.Serializable(),  _
         Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
        Partial Public Class StampeSottoscrizioniStatiListaDataTable
            Inherits Global.System.Data.TypedTableBase(Of StampeSottoscrizioniStatiListaRow)
            
            Private columnId As Global.System.Data.DataColumn
            
            Private columnDescrizione As Global.System.Data.DataColumn
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub New()
                MyBase.New
                Me.TableName = "StampeSottoscrizioniStatiLista"
                Me.BeginInit
                Me.InitClass
                Me.EndInit
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Friend Sub New(ByVal table As Global.System.Data.DataTable)
                MyBase.New
                Me.TableName = table.TableName
                If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                    Me.CaseSensitive = table.CaseSensitive
                End If
                If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                    Me.Locale = table.Locale
                End If
                If (table.Namespace <> table.DataSet.Namespace) Then
                    Me.Namespace = table.Namespace
                End If
                Me.Prefix = table.Prefix
                Me.MinimumCapacity = table.MinimumCapacity
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
                MyBase.New(info, context)
                Me.InitVars
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property IdColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnId
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property DescrizioneColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnDescrizione
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
             Global.System.ComponentModel.Browsable(false)>  _
            Public ReadOnly Property Count() As Integer
                Get
                    Return Me.Rows.Count
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Default ReadOnly Property Item(ByVal index As Integer) As StampeSottoscrizioniStatiListaRow
                Get
                    Return CType(Me.Rows(index),StampeSottoscrizioniStatiListaRow)
                End Get
            End Property
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event StampeSottoscrizioniStatiListaRowChanging As StampeSottoscrizioniStatiListaRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event StampeSottoscrizioniStatiListaRowChanged As StampeSottoscrizioniStatiListaRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event StampeSottoscrizioniStatiListaRowDeleting As StampeSottoscrizioniStatiListaRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event StampeSottoscrizioniStatiListaRowDeleted As StampeSottoscrizioniStatiListaRowChangeEventHandler
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Overloads Sub AddStampeSottoscrizioniStatiListaRow(ByVal row As StampeSottoscrizioniStatiListaRow)
                Me.Rows.Add(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Overloads Function AddStampeSottoscrizioniStatiListaRow(ByVal Id As Integer, ByVal Descrizione As String) As StampeSottoscrizioniStatiListaRow
                Dim rowStampeSottoscrizioniStatiListaRow As StampeSottoscrizioniStatiListaRow = CType(Me.NewRow,StampeSottoscrizioniStatiListaRow)
                Dim columnValuesArray() As Object = New Object() {Id, Descrizione}
                rowStampeSottoscrizioniStatiListaRow.ItemArray = columnValuesArray
                Me.Rows.Add(rowStampeSottoscrizioniStatiListaRow)
                Return rowStampeSottoscrizioniStatiListaRow
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function FindById(ByVal Id As Integer) As StampeSottoscrizioniStatiListaRow
                Return CType(Me.Rows.Find(New Object() {Id}),StampeSottoscrizioniStatiListaRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Overrides Function Clone() As Global.System.Data.DataTable
                Dim cln As StampeSottoscrizioniStatiListaDataTable = CType(MyBase.Clone,StampeSottoscrizioniStatiListaDataTable)
                cln.InitVars
                Return cln
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
                Return New StampeSottoscrizioniStatiListaDataTable()
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Friend Sub InitVars()
                Me.columnId = MyBase.Columns("Id")
                Me.columnDescrizione = MyBase.Columns("Descrizione")
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Private Sub InitClass()
                Me.columnId = New Global.System.Data.DataColumn("Id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnId)
                Me.columnDescrizione = New Global.System.Data.DataColumn("Descrizione", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnDescrizione)
                Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnId}, true))
                Me.columnId.AllowDBNull = false
                Me.columnId.Unique = true
                Me.columnDescrizione.MaxLength = 64
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function NewStampeSottoscrizioniStatiListaRow() As StampeSottoscrizioniStatiListaRow
                Return CType(Me.NewRow,StampeSottoscrizioniStatiListaRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
                Return New StampeSottoscrizioniStatiListaRow(builder)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Function GetRowType() As Global.System.Type
                Return GetType(StampeSottoscrizioniStatiListaRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanged(e)
                If (Not (Me.StampeSottoscrizioniStatiListaRowChangedEvent) Is Nothing) Then
                    RaiseEvent StampeSottoscrizioniStatiListaRowChanged(Me, New StampeSottoscrizioniStatiListaRowChangeEvent(CType(e.Row,StampeSottoscrizioniStatiListaRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanging(e)
                If (Not (Me.StampeSottoscrizioniStatiListaRowChangingEvent) Is Nothing) Then
                    RaiseEvent StampeSottoscrizioniStatiListaRowChanging(Me, New StampeSottoscrizioniStatiListaRowChangeEvent(CType(e.Row,StampeSottoscrizioniStatiListaRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleted(e)
                If (Not (Me.StampeSottoscrizioniStatiListaRowDeletedEvent) Is Nothing) Then
                    RaiseEvent StampeSottoscrizioniStatiListaRowDeleted(Me, New StampeSottoscrizioniStatiListaRowChangeEvent(CType(e.Row,StampeSottoscrizioniStatiListaRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleting(e)
                If (Not (Me.StampeSottoscrizioniStatiListaRowDeletingEvent) Is Nothing) Then
                    RaiseEvent StampeSottoscrizioniStatiListaRowDeleting(Me, New StampeSottoscrizioniStatiListaRowChangeEvent(CType(e.Row,StampeSottoscrizioniStatiListaRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub RemoveStampeSottoscrizioniStatiListaRow(ByVal row As StampeSottoscrizioniStatiListaRow)
                Me.Rows.Remove(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
                Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
                Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
                Dim ds As BackEndDataSet = New BackEndDataSet()
                Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any1.Namespace = "http://www.w3.org/2001/XMLSchema"
                any1.MinOccurs = New Decimal(0)
                any1.MaxOccurs = Decimal.MaxValue
                any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any1)
                Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
                any2.MinOccurs = New Decimal(1)
                any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any2)
                Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute1.Name = "namespace"
                attribute1.FixedValue = ds.Namespace
                type.Attributes.Add(attribute1)
                Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute2.Name = "tableTypeName"
                attribute2.FixedValue = "StampeSottoscrizioniStatiListaDataTable"
                type.Attributes.Add(attribute2)
                type.Particle = sequence
                Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
                If xs.Contains(dsSchema.TargetNamespace) Then
                    Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Try 
                        Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                        dsSchema.Write(s1)
                        Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                        Do While schemas.MoveNext
                            schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                            s2.SetLength(0)
                            schema.Write(s2)
                            If (s1.Length = s2.Length) Then
                                s1.Position = 0
                                s2.Position = 0
                                
                                Do While ((s1.Position <> s1.Length)  _
                                            AndAlso (s1.ReadByte = s2.ReadByte))
                                    
                                    
                                Loop
                                If (s1.Position = s1.Length) Then
                                    Return type
                                End If
                            End If
                            
                        Loop
                    Finally
                        If (Not (s1) Is Nothing) Then
                            s1.Close
                        End If
                        If (Not (s2) Is Nothing) Then
                            s2.Close
                        End If
                    End Try
                End If
                xs.Add(dsSchema)
                Return type
            End Function
        End Class
        
        '''<summary>
        '''Represents the strongly named DataTable class.
        '''</summary>
        <Global.System.Serializable(),  _
         Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
        Partial Public Class StampeSottoscrizioniTipoRefertiListaDataTable
            Inherits Global.System.Data.TypedTableBase(Of StampeSottoscrizioniTipoRefertiListaRow)
            
            Private columnId As Global.System.Data.DataColumn
            
            Private columnDescrizione As Global.System.Data.DataColumn
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub New()
                MyBase.New
                Me.TableName = "StampeSottoscrizioniTipoRefertiLista"
                Me.BeginInit
                Me.InitClass
                Me.EndInit
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Friend Sub New(ByVal table As Global.System.Data.DataTable)
                MyBase.New
                Me.TableName = table.TableName
                If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                    Me.CaseSensitive = table.CaseSensitive
                End If
                If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                    Me.Locale = table.Locale
                End If
                If (table.Namespace <> table.DataSet.Namespace) Then
                    Me.Namespace = table.Namespace
                End If
                Me.Prefix = table.Prefix
                Me.MinimumCapacity = table.MinimumCapacity
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
                MyBase.New(info, context)
                Me.InitVars
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property IdColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnId
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property DescrizioneColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnDescrizione
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
             Global.System.ComponentModel.Browsable(false)>  _
            Public ReadOnly Property Count() As Integer
                Get
                    Return Me.Rows.Count
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Default ReadOnly Property Item(ByVal index As Integer) As StampeSottoscrizioniTipoRefertiListaRow
                Get
                    Return CType(Me.Rows(index),StampeSottoscrizioniTipoRefertiListaRow)
                End Get
            End Property
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event StampeSottoscrizioniTipoRefertiListaRowChanging As StampeSottoscrizioniTipoRefertiListaRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event StampeSottoscrizioniTipoRefertiListaRowChanged As StampeSottoscrizioniTipoRefertiListaRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event StampeSottoscrizioniTipoRefertiListaRowDeleting As StampeSottoscrizioniTipoRefertiListaRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event StampeSottoscrizioniTipoRefertiListaRowDeleted As StampeSottoscrizioniTipoRefertiListaRowChangeEventHandler
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Overloads Sub AddStampeSottoscrizioniTipoRefertiListaRow(ByVal row As StampeSottoscrizioniTipoRefertiListaRow)
                Me.Rows.Add(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Overloads Function AddStampeSottoscrizioniTipoRefertiListaRow(ByVal Id As Integer, ByVal Descrizione As String) As StampeSottoscrizioniTipoRefertiListaRow
                Dim rowStampeSottoscrizioniTipoRefertiListaRow As StampeSottoscrizioniTipoRefertiListaRow = CType(Me.NewRow,StampeSottoscrizioniTipoRefertiListaRow)
                Dim columnValuesArray() As Object = New Object() {Id, Descrizione}
                rowStampeSottoscrizioniTipoRefertiListaRow.ItemArray = columnValuesArray
                Me.Rows.Add(rowStampeSottoscrizioniTipoRefertiListaRow)
                Return rowStampeSottoscrizioniTipoRefertiListaRow
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function FindById(ByVal Id As Integer) As StampeSottoscrizioniTipoRefertiListaRow
                Return CType(Me.Rows.Find(New Object() {Id}),StampeSottoscrizioniTipoRefertiListaRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Overrides Function Clone() As Global.System.Data.DataTable
                Dim cln As StampeSottoscrizioniTipoRefertiListaDataTable = CType(MyBase.Clone,StampeSottoscrizioniTipoRefertiListaDataTable)
                cln.InitVars
                Return cln
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
                Return New StampeSottoscrizioniTipoRefertiListaDataTable()
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Friend Sub InitVars()
                Me.columnId = MyBase.Columns("Id")
                Me.columnDescrizione = MyBase.Columns("Descrizione")
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Private Sub InitClass()
                Me.columnId = New Global.System.Data.DataColumn("Id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnId)
                Me.columnDescrizione = New Global.System.Data.DataColumn("Descrizione", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnDescrizione)
                Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnId}, true))
                Me.columnId.AllowDBNull = false
                Me.columnId.Unique = true
                Me.columnDescrizione.MaxLength = 64
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function NewStampeSottoscrizioniTipoRefertiListaRow() As StampeSottoscrizioniTipoRefertiListaRow
                Return CType(Me.NewRow,StampeSottoscrizioniTipoRefertiListaRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
                Return New StampeSottoscrizioniTipoRefertiListaRow(builder)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Function GetRowType() As Global.System.Type
                Return GetType(StampeSottoscrizioniTipoRefertiListaRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanged(e)
                If (Not (Me.StampeSottoscrizioniTipoRefertiListaRowChangedEvent) Is Nothing) Then
                    RaiseEvent StampeSottoscrizioniTipoRefertiListaRowChanged(Me, New StampeSottoscrizioniTipoRefertiListaRowChangeEvent(CType(e.Row,StampeSottoscrizioniTipoRefertiListaRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanging(e)
                If (Not (Me.StampeSottoscrizioniTipoRefertiListaRowChangingEvent) Is Nothing) Then
                    RaiseEvent StampeSottoscrizioniTipoRefertiListaRowChanging(Me, New StampeSottoscrizioniTipoRefertiListaRowChangeEvent(CType(e.Row,StampeSottoscrizioniTipoRefertiListaRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleted(e)
                If (Not (Me.StampeSottoscrizioniTipoRefertiListaRowDeletedEvent) Is Nothing) Then
                    RaiseEvent StampeSottoscrizioniTipoRefertiListaRowDeleted(Me, New StampeSottoscrizioniTipoRefertiListaRowChangeEvent(CType(e.Row,StampeSottoscrizioniTipoRefertiListaRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleting(e)
                If (Not (Me.StampeSottoscrizioniTipoRefertiListaRowDeletingEvent) Is Nothing) Then
                    RaiseEvent StampeSottoscrizioniTipoRefertiListaRowDeleting(Me, New StampeSottoscrizioniTipoRefertiListaRowChangeEvent(CType(e.Row,StampeSottoscrizioniTipoRefertiListaRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub RemoveStampeSottoscrizioniTipoRefertiListaRow(ByVal row As StampeSottoscrizioniTipoRefertiListaRow)
                Me.Rows.Remove(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
                Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
                Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
                Dim ds As BackEndDataSet = New BackEndDataSet()
                Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any1.Namespace = "http://www.w3.org/2001/XMLSchema"
                any1.MinOccurs = New Decimal(0)
                any1.MaxOccurs = Decimal.MaxValue
                any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any1)
                Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
                any2.MinOccurs = New Decimal(1)
                any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any2)
                Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute1.Name = "namespace"
                attribute1.FixedValue = ds.Namespace
                type.Attributes.Add(attribute1)
                Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute2.Name = "tableTypeName"
                attribute2.FixedValue = "StampeSottoscrizioniTipoRefertiListaDataTable"
                type.Attributes.Add(attribute2)
                type.Particle = sequence
                Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
                If xs.Contains(dsSchema.TargetNamespace) Then
                    Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Try 
                        Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                        dsSchema.Write(s1)
                        Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                        Do While schemas.MoveNext
                            schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                            s2.SetLength(0)
                            schema.Write(s2)
                            If (s1.Length = s2.Length) Then
                                s1.Position = 0
                                s2.Position = 0
                                
                                Do While ((s1.Position <> s1.Length)  _
                                            AndAlso (s1.ReadByte = s2.ReadByte))
                                    
                                    
                                Loop
                                If (s1.Position = s1.Length) Then
                                    Return type
                                End If
                            End If
                            
                        Loop
                    Finally
                        If (Not (s1) Is Nothing) Then
                            s1.Close
                        End If
                        If (Not (s2) Is Nothing) Then
                            s2.Close
                        End If
                    End Try
                End If
                xs.Add(dsSchema)
                Return type
            End Function
        End Class
        
        '''<summary>
        '''Represents the strongly named DataTable class.
        '''</summary>
        <Global.System.Serializable(),  _
         Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
        Partial Public Class StampeSottoscrizioniTipoSottoscrizioniListaDataTable
            Inherits Global.System.Data.TypedTableBase(Of StampeSottoscrizioniTipoSottoscrizioniListaRow)
            
            Private columnId As Global.System.Data.DataColumn
            
            Private columnDescrizione As Global.System.Data.DataColumn
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub New()
                MyBase.New
                Me.TableName = "StampeSottoscrizioniTipoSottoscrizioniLista"
                Me.BeginInit
                Me.InitClass
                Me.EndInit
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Friend Sub New(ByVal table As Global.System.Data.DataTable)
                MyBase.New
                Me.TableName = table.TableName
                If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                    Me.CaseSensitive = table.CaseSensitive
                End If
                If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                    Me.Locale = table.Locale
                End If
                If (table.Namespace <> table.DataSet.Namespace) Then
                    Me.Namespace = table.Namespace
                End If
                Me.Prefix = table.Prefix
                Me.MinimumCapacity = table.MinimumCapacity
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
                MyBase.New(info, context)
                Me.InitVars
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property IdColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnId
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property DescrizioneColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnDescrizione
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
             Global.System.ComponentModel.Browsable(false)>  _
            Public ReadOnly Property Count() As Integer
                Get
                    Return Me.Rows.Count
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Default ReadOnly Property Item(ByVal index As Integer) As StampeSottoscrizioniTipoSottoscrizioniListaRow
                Get
                    Return CType(Me.Rows(index),StampeSottoscrizioniTipoSottoscrizioniListaRow)
                End Get
            End Property
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event StampeSottoscrizioniTipoSottoscrizioniListaRowChanging As StampeSottoscrizioniTipoSottoscrizioniListaRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event StampeSottoscrizioniTipoSottoscrizioniListaRowChanged As StampeSottoscrizioniTipoSottoscrizioniListaRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event StampeSottoscrizioniTipoSottoscrizioniListaRowDeleting As StampeSottoscrizioniTipoSottoscrizioniListaRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event StampeSottoscrizioniTipoSottoscrizioniListaRowDeleted As StampeSottoscrizioniTipoSottoscrizioniListaRowChangeEventHandler
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Overloads Sub AddStampeSottoscrizioniTipoSottoscrizioniListaRow(ByVal row As StampeSottoscrizioniTipoSottoscrizioniListaRow)
                Me.Rows.Add(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Overloads Function AddStampeSottoscrizioniTipoSottoscrizioniListaRow(ByVal Id As Integer, ByVal Descrizione As String) As StampeSottoscrizioniTipoSottoscrizioniListaRow
                Dim rowStampeSottoscrizioniTipoSottoscrizioniListaRow As StampeSottoscrizioniTipoSottoscrizioniListaRow = CType(Me.NewRow,StampeSottoscrizioniTipoSottoscrizioniListaRow)
                Dim columnValuesArray() As Object = New Object() {Id, Descrizione}
                rowStampeSottoscrizioniTipoSottoscrizioniListaRow.ItemArray = columnValuesArray
                Me.Rows.Add(rowStampeSottoscrizioniTipoSottoscrizioniListaRow)
                Return rowStampeSottoscrizioniTipoSottoscrizioniListaRow
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function FindById(ByVal Id As Integer) As StampeSottoscrizioniTipoSottoscrizioniListaRow
                Return CType(Me.Rows.Find(New Object() {Id}),StampeSottoscrizioniTipoSottoscrizioniListaRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Overrides Function Clone() As Global.System.Data.DataTable
                Dim cln As StampeSottoscrizioniTipoSottoscrizioniListaDataTable = CType(MyBase.Clone,StampeSottoscrizioniTipoSottoscrizioniListaDataTable)
                cln.InitVars
                Return cln
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
                Return New StampeSottoscrizioniTipoSottoscrizioniListaDataTable()
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Friend Sub InitVars()
                Me.columnId = MyBase.Columns("Id")
                Me.columnDescrizione = MyBase.Columns("Descrizione")
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Private Sub InitClass()
                Me.columnId = New Global.System.Data.DataColumn("Id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnId)
                Me.columnDescrizione = New Global.System.Data.DataColumn("Descrizione", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnDescrizione)
                Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnId}, true))
                Me.columnId.AllowDBNull = false
                Me.columnId.Unique = true
                Me.columnDescrizione.MaxLength = 64
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function NewStampeSottoscrizioniTipoSottoscrizioniListaRow() As StampeSottoscrizioniTipoSottoscrizioniListaRow
                Return CType(Me.NewRow,StampeSottoscrizioniTipoSottoscrizioniListaRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
                Return New StampeSottoscrizioniTipoSottoscrizioniListaRow(builder)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Function GetRowType() As Global.System.Type
                Return GetType(StampeSottoscrizioniTipoSottoscrizioniListaRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanged(e)
                If (Not (Me.StampeSottoscrizioniTipoSottoscrizioniListaRowChangedEvent) Is Nothing) Then
                    RaiseEvent StampeSottoscrizioniTipoSottoscrizioniListaRowChanged(Me, New StampeSottoscrizioniTipoSottoscrizioniListaRowChangeEvent(CType(e.Row,StampeSottoscrizioniTipoSottoscrizioniListaRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanging(e)
                If (Not (Me.StampeSottoscrizioniTipoSottoscrizioniListaRowChangingEvent) Is Nothing) Then
                    RaiseEvent StampeSottoscrizioniTipoSottoscrizioniListaRowChanging(Me, New StampeSottoscrizioniTipoSottoscrizioniListaRowChangeEvent(CType(e.Row,StampeSottoscrizioniTipoSottoscrizioniListaRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleted(e)
                If (Not (Me.StampeSottoscrizioniTipoSottoscrizioniListaRowDeletedEvent) Is Nothing) Then
                    RaiseEvent StampeSottoscrizioniTipoSottoscrizioniListaRowDeleted(Me, New StampeSottoscrizioniTipoSottoscrizioniListaRowChangeEvent(CType(e.Row,StampeSottoscrizioniTipoSottoscrizioniListaRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleting(e)
                If (Not (Me.StampeSottoscrizioniTipoSottoscrizioniListaRowDeletingEvent) Is Nothing) Then
                    RaiseEvent StampeSottoscrizioniTipoSottoscrizioniListaRowDeleting(Me, New StampeSottoscrizioniTipoSottoscrizioniListaRowChangeEvent(CType(e.Row,StampeSottoscrizioniTipoSottoscrizioniListaRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub RemoveStampeSottoscrizioniTipoSottoscrizioniListaRow(ByVal row As StampeSottoscrizioniTipoSottoscrizioniListaRow)
                Me.Rows.Remove(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
                Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
                Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
                Dim ds As BackEndDataSet = New BackEndDataSet()
                Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any1.Namespace = "http://www.w3.org/2001/XMLSchema"
                any1.MinOccurs = New Decimal(0)
                any1.MaxOccurs = Decimal.MaxValue
                any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any1)
                Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
                any2.MinOccurs = New Decimal(1)
                any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any2)
                Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute1.Name = "namespace"
                attribute1.FixedValue = ds.Namespace
                type.Attributes.Add(attribute1)
                Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute2.Name = "tableTypeName"
                attribute2.FixedValue = "StampeSottoscrizioniTipoSottoscrizioniListaDataTable"
                type.Attributes.Add(attribute2)
                type.Particle = sequence
                Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
                If xs.Contains(dsSchema.TargetNamespace) Then
                    Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Try 
                        Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                        dsSchema.Write(s1)
                        Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                        Do While schemas.MoveNext
                            schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                            s2.SetLength(0)
                            schema.Write(s2)
                            If (s1.Length = s2.Length) Then
                                s1.Position = 0
                                s2.Position = 0
                                
                                Do While ((s1.Position <> s1.Length)  _
                                            AndAlso (s1.ReadByte = s2.ReadByte))
                                    
                                    
                                Loop
                                If (s1.Position = s1.Length) Then
                                    Return type
                                End If
                            End If
                            
                        Loop
                    Finally
                        If (Not (s1) Is Nothing) Then
                            s1.Close
                        End If
                        If (Not (s2) Is Nothing) Then
                            s2.Close
                        End If
                    End Try
                End If
                xs.Add(dsSchema)
                Return type
            End Function
        End Class
        
        '''<summary>
        '''Represents the strongly named DataTable class.
        '''</summary>
        <Global.System.Serializable(),  _
         Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
        Partial Public Class StampeSottoscrizioniSistemiErogantiListaDataTable
            Inherits Global.System.Data.TypedTableBase(Of StampeSottoscrizioniSistemiErogantiListaRow)
            
            Private columnCodice As Global.System.Data.DataColumn
            
            Private columnDescrizione As Global.System.Data.DataColumn
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub New()
                MyBase.New
                Me.TableName = "StampeSottoscrizioniSistemiErogantiLista"
                Me.BeginInit
                Me.InitClass
                Me.EndInit
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Friend Sub New(ByVal table As Global.System.Data.DataTable)
                MyBase.New
                Me.TableName = table.TableName
                If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                    Me.CaseSensitive = table.CaseSensitive
                End If
                If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                    Me.Locale = table.Locale
                End If
                If (table.Namespace <> table.DataSet.Namespace) Then
                    Me.Namespace = table.Namespace
                End If
                Me.Prefix = table.Prefix
                Me.MinimumCapacity = table.MinimumCapacity
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
                MyBase.New(info, context)
                Me.InitVars
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property CodiceColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnCodice
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property DescrizioneColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnDescrizione
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
             Global.System.ComponentModel.Browsable(false)>  _
            Public ReadOnly Property Count() As Integer
                Get
                    Return Me.Rows.Count
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Default ReadOnly Property Item(ByVal index As Integer) As StampeSottoscrizioniSistemiErogantiListaRow
                Get
                    Return CType(Me.Rows(index),StampeSottoscrizioniSistemiErogantiListaRow)
                End Get
            End Property
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event StampeSottoscrizioniSistemiErogantiListaRowChanging As StampeSottoscrizioniSistemiErogantiListaRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event StampeSottoscrizioniSistemiErogantiListaRowChanged As StampeSottoscrizioniSistemiErogantiListaRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event StampeSottoscrizioniSistemiErogantiListaRowDeleting As StampeSottoscrizioniSistemiErogantiListaRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event StampeSottoscrizioniSistemiErogantiListaRowDeleted As StampeSottoscrizioniSistemiErogantiListaRowChangeEventHandler
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Overloads Sub AddStampeSottoscrizioniSistemiErogantiListaRow(ByVal row As StampeSottoscrizioniSistemiErogantiListaRow)
                Me.Rows.Add(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Overloads Function AddStampeSottoscrizioniSistemiErogantiListaRow(ByVal Codice As String, ByVal Descrizione As String) As StampeSottoscrizioniSistemiErogantiListaRow
                Dim rowStampeSottoscrizioniSistemiErogantiListaRow As StampeSottoscrizioniSistemiErogantiListaRow = CType(Me.NewRow,StampeSottoscrizioniSistemiErogantiListaRow)
                Dim columnValuesArray() As Object = New Object() {Codice, Descrizione}
                rowStampeSottoscrizioniSistemiErogantiListaRow.ItemArray = columnValuesArray
                Me.Rows.Add(rowStampeSottoscrizioniSistemiErogantiListaRow)
                Return rowStampeSottoscrizioniSistemiErogantiListaRow
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Overrides Function Clone() As Global.System.Data.DataTable
                Dim cln As StampeSottoscrizioniSistemiErogantiListaDataTable = CType(MyBase.Clone,StampeSottoscrizioniSistemiErogantiListaDataTable)
                cln.InitVars
                Return cln
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
                Return New StampeSottoscrizioniSistemiErogantiListaDataTable()
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Friend Sub InitVars()
                Me.columnCodice = MyBase.Columns("Codice")
                Me.columnDescrizione = MyBase.Columns("Descrizione")
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Private Sub InitClass()
                Me.columnCodice = New Global.System.Data.DataColumn("Codice", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnCodice)
                Me.columnDescrizione = New Global.System.Data.DataColumn("Descrizione", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnDescrizione)
                Me.columnCodice.AllowDBNull = false
                Me.columnCodice.MaxLength = 16
                Me.columnDescrizione.MaxLength = 128
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function NewStampeSottoscrizioniSistemiErogantiListaRow() As StampeSottoscrizioniSistemiErogantiListaRow
                Return CType(Me.NewRow,StampeSottoscrizioniSistemiErogantiListaRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
                Return New StampeSottoscrizioniSistemiErogantiListaRow(builder)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Function GetRowType() As Global.System.Type
                Return GetType(StampeSottoscrizioniSistemiErogantiListaRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanged(e)
                If (Not (Me.StampeSottoscrizioniSistemiErogantiListaRowChangedEvent) Is Nothing) Then
                    RaiseEvent StampeSottoscrizioniSistemiErogantiListaRowChanged(Me, New StampeSottoscrizioniSistemiErogantiListaRowChangeEvent(CType(e.Row,StampeSottoscrizioniSistemiErogantiListaRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanging(e)
                If (Not (Me.StampeSottoscrizioniSistemiErogantiListaRowChangingEvent) Is Nothing) Then
                    RaiseEvent StampeSottoscrizioniSistemiErogantiListaRowChanging(Me, New StampeSottoscrizioniSistemiErogantiListaRowChangeEvent(CType(e.Row,StampeSottoscrizioniSistemiErogantiListaRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleted(e)
                If (Not (Me.StampeSottoscrizioniSistemiErogantiListaRowDeletedEvent) Is Nothing) Then
                    RaiseEvent StampeSottoscrizioniSistemiErogantiListaRowDeleted(Me, New StampeSottoscrizioniSistemiErogantiListaRowChangeEvent(CType(e.Row,StampeSottoscrizioniSistemiErogantiListaRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleting(e)
                If (Not (Me.StampeSottoscrizioniSistemiErogantiListaRowDeletingEvent) Is Nothing) Then
                    RaiseEvent StampeSottoscrizioniSistemiErogantiListaRowDeleting(Me, New StampeSottoscrizioniSistemiErogantiListaRowChangeEvent(CType(e.Row,StampeSottoscrizioniSistemiErogantiListaRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub RemoveStampeSottoscrizioniSistemiErogantiListaRow(ByVal row As StampeSottoscrizioniSistemiErogantiListaRow)
                Me.Rows.Remove(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
                Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
                Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
                Dim ds As BackEndDataSet = New BackEndDataSet()
                Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any1.Namespace = "http://www.w3.org/2001/XMLSchema"
                any1.MinOccurs = New Decimal(0)
                any1.MaxOccurs = Decimal.MaxValue
                any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any1)
                Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
                any2.MinOccurs = New Decimal(1)
                any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any2)
                Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute1.Name = "namespace"
                attribute1.FixedValue = ds.Namespace
                type.Attributes.Add(attribute1)
                Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute2.Name = "tableTypeName"
                attribute2.FixedValue = "StampeSottoscrizioniSistemiErogantiListaDataTable"
                type.Attributes.Add(attribute2)
                type.Particle = sequence
                Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
                If xs.Contains(dsSchema.TargetNamespace) Then
                    Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Try 
                        Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                        dsSchema.Write(s1)
                        Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                        Do While schemas.MoveNext
                            schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                            s2.SetLength(0)
                            schema.Write(s2)
                            If (s1.Length = s2.Length) Then
                                s1.Position = 0
                                s2.Position = 0
                                
                                Do While ((s1.Position <> s1.Length)  _
                                            AndAlso (s1.ReadByte = s2.ReadByte))
                                    
                                    
                                Loop
                                If (s1.Position = s1.Length) Then
                                    Return type
                                End If
                            End If
                            
                        Loop
                    Finally
                        If (Not (s1) Is Nothing) Then
                            s1.Close
                        End If
                        If (Not (s2) Is Nothing) Then
                            s2.Close
                        End If
                    End Try
                End If
                xs.Add(dsSchema)
                Return type
            End Function
        End Class
        
        '''<summary>
        '''Represents the strongly named DataTable class.
        '''</summary>
        <Global.System.Serializable(),  _
         Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
        Partial Public Class StampeSottoscrizioniRepartiRichiedentiListaDataTable
            Inherits Global.System.Data.TypedTableBase(Of StampeSottoscrizioniRepartiRichiedentiListaRow)
            
            Private columnId As Global.System.Data.DataColumn
            
            Private columnRepartoRichiedenteCodice As Global.System.Data.DataColumn
            
            Private columnRepartoRichiedenteDescrizione As Global.System.Data.DataColumn
            
            Private columnSistemaErogante As Global.System.Data.DataColumn
            
            Private columnAziendaErogante As Global.System.Data.DataColumn
            
            Private columnIdReparto As Global.System.Data.DataColumn
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub New()
                MyBase.New
                Me.TableName = "StampeSottoscrizioniRepartiRichiedentiLista"
                Me.BeginInit
                Me.InitClass
                Me.EndInit
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Friend Sub New(ByVal table As Global.System.Data.DataTable)
                MyBase.New
                Me.TableName = table.TableName
                If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                    Me.CaseSensitive = table.CaseSensitive
                End If
                If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                    Me.Locale = table.Locale
                End If
                If (table.Namespace <> table.DataSet.Namespace) Then
                    Me.Namespace = table.Namespace
                End If
                Me.Prefix = table.Prefix
                Me.MinimumCapacity = table.MinimumCapacity
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
                MyBase.New(info, context)
                Me.InitVars
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property IdColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnId
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property RepartoRichiedenteCodiceColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnRepartoRichiedenteCodice
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property RepartoRichiedenteDescrizioneColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnRepartoRichiedenteDescrizione
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property SistemaEroganteColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnSistemaErogante
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property AziendaEroganteColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnAziendaErogante
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property IdRepartoColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnIdReparto
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
             Global.System.ComponentModel.Browsable(false)>  _
            Public ReadOnly Property Count() As Integer
                Get
                    Return Me.Rows.Count
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Default ReadOnly Property Item(ByVal index As Integer) As StampeSottoscrizioniRepartiRichiedentiListaRow
                Get
                    Return CType(Me.Rows(index),StampeSottoscrizioniRepartiRichiedentiListaRow)
                End Get
            End Property
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event StampeSottoscrizioniRepartiRichiedentiListaRowChanging As StampeSottoscrizioniRepartiRichiedentiListaRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event StampeSottoscrizioniRepartiRichiedentiListaRowChanged As StampeSottoscrizioniRepartiRichiedentiListaRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event StampeSottoscrizioniRepartiRichiedentiListaRowDeleting As StampeSottoscrizioniRepartiRichiedentiListaRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event StampeSottoscrizioniRepartiRichiedentiListaRowDeleted As StampeSottoscrizioniRepartiRichiedentiListaRowChangeEventHandler
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Overloads Sub AddStampeSottoscrizioniRepartiRichiedentiListaRow(ByVal row As StampeSottoscrizioniRepartiRichiedentiListaRow)
                Me.Rows.Add(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Overloads Function AddStampeSottoscrizioniRepartiRichiedentiListaRow(ByVal Id As System.Guid, ByVal RepartoRichiedenteCodice As String, ByVal RepartoRichiedenteDescrizione As String, ByVal SistemaErogante As String, ByVal AziendaErogante As String, ByVal IdReparto As System.Guid) As StampeSottoscrizioniRepartiRichiedentiListaRow
                Dim rowStampeSottoscrizioniRepartiRichiedentiListaRow As StampeSottoscrizioniRepartiRichiedentiListaRow = CType(Me.NewRow,StampeSottoscrizioniRepartiRichiedentiListaRow)
                Dim columnValuesArray() As Object = New Object() {Id, RepartoRichiedenteCodice, RepartoRichiedenteDescrizione, SistemaErogante, AziendaErogante, IdReparto}
                rowStampeSottoscrizioniRepartiRichiedentiListaRow.ItemArray = columnValuesArray
                Me.Rows.Add(rowStampeSottoscrizioniRepartiRichiedentiListaRow)
                Return rowStampeSottoscrizioniRepartiRichiedentiListaRow
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function FindById(ByVal Id As System.Guid) As StampeSottoscrizioniRepartiRichiedentiListaRow
                Return CType(Me.Rows.Find(New Object() {Id}),StampeSottoscrizioniRepartiRichiedentiListaRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Overrides Function Clone() As Global.System.Data.DataTable
                Dim cln As StampeSottoscrizioniRepartiRichiedentiListaDataTable = CType(MyBase.Clone,StampeSottoscrizioniRepartiRichiedentiListaDataTable)
                cln.InitVars
                Return cln
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
                Return New StampeSottoscrizioniRepartiRichiedentiListaDataTable()
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Friend Sub InitVars()
                Me.columnId = MyBase.Columns("Id")
                Me.columnRepartoRichiedenteCodice = MyBase.Columns("RepartoRichiedenteCodice")
                Me.columnRepartoRichiedenteDescrizione = MyBase.Columns("RepartoRichiedenteDescrizione")
                Me.columnSistemaErogante = MyBase.Columns("SistemaErogante")
                Me.columnAziendaErogante = MyBase.Columns("AziendaErogante")
                Me.columnIdReparto = MyBase.Columns("IdReparto")
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Private Sub InitClass()
                Me.columnId = New Global.System.Data.DataColumn("Id", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnId)
                Me.columnRepartoRichiedenteCodice = New Global.System.Data.DataColumn("RepartoRichiedenteCodice", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnRepartoRichiedenteCodice)
                Me.columnRepartoRichiedenteDescrizione = New Global.System.Data.DataColumn("RepartoRichiedenteDescrizione", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnRepartoRichiedenteDescrizione)
                Me.columnSistemaErogante = New Global.System.Data.DataColumn("SistemaErogante", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnSistemaErogante)
                Me.columnAziendaErogante = New Global.System.Data.DataColumn("AziendaErogante", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnAziendaErogante)
                Me.columnIdReparto = New Global.System.Data.DataColumn("IdReparto", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnIdReparto)
                Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnId}, true))
                Me.columnId.AllowDBNull = false
                Me.columnId.Unique = true
                Me.columnRepartoRichiedenteCodice.MaxLength = 16
                Me.columnRepartoRichiedenteDescrizione.MaxLength = 128
                Me.columnSistemaErogante.AllowDBNull = false
                Me.columnSistemaErogante.MaxLength = 16
                Me.columnAziendaErogante.AllowDBNull = false
                Me.columnAziendaErogante.MaxLength = 16
                Me.columnIdReparto.AllowDBNull = false
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function NewStampeSottoscrizioniRepartiRichiedentiListaRow() As StampeSottoscrizioniRepartiRichiedentiListaRow
                Return CType(Me.NewRow,StampeSottoscrizioniRepartiRichiedentiListaRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
                Return New StampeSottoscrizioniRepartiRichiedentiListaRow(builder)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Function GetRowType() As Global.System.Type
                Return GetType(StampeSottoscrizioniRepartiRichiedentiListaRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanged(e)
                If (Not (Me.StampeSottoscrizioniRepartiRichiedentiListaRowChangedEvent) Is Nothing) Then
                    RaiseEvent StampeSottoscrizioniRepartiRichiedentiListaRowChanged(Me, New StampeSottoscrizioniRepartiRichiedentiListaRowChangeEvent(CType(e.Row,StampeSottoscrizioniRepartiRichiedentiListaRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanging(e)
                If (Not (Me.StampeSottoscrizioniRepartiRichiedentiListaRowChangingEvent) Is Nothing) Then
                    RaiseEvent StampeSottoscrizioniRepartiRichiedentiListaRowChanging(Me, New StampeSottoscrizioniRepartiRichiedentiListaRowChangeEvent(CType(e.Row,StampeSottoscrizioniRepartiRichiedentiListaRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleted(e)
                If (Not (Me.StampeSottoscrizioniRepartiRichiedentiListaRowDeletedEvent) Is Nothing) Then
                    RaiseEvent StampeSottoscrizioniRepartiRichiedentiListaRowDeleted(Me, New StampeSottoscrizioniRepartiRichiedentiListaRowChangeEvent(CType(e.Row,StampeSottoscrizioniRepartiRichiedentiListaRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleting(e)
                If (Not (Me.StampeSottoscrizioniRepartiRichiedentiListaRowDeletingEvent) Is Nothing) Then
                    RaiseEvent StampeSottoscrizioniRepartiRichiedentiListaRowDeleting(Me, New StampeSottoscrizioniRepartiRichiedentiListaRowChangeEvent(CType(e.Row,StampeSottoscrizioniRepartiRichiedentiListaRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub RemoveStampeSottoscrizioniRepartiRichiedentiListaRow(ByVal row As StampeSottoscrizioniRepartiRichiedentiListaRow)
                Me.Rows.Remove(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
                Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
                Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
                Dim ds As BackEndDataSet = New BackEndDataSet()
                Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any1.Namespace = "http://www.w3.org/2001/XMLSchema"
                any1.MinOccurs = New Decimal(0)
                any1.MaxOccurs = Decimal.MaxValue
                any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any1)
                Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
                any2.MinOccurs = New Decimal(1)
                any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any2)
                Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute1.Name = "namespace"
                attribute1.FixedValue = ds.Namespace
                type.Attributes.Add(attribute1)
                Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute2.Name = "tableTypeName"
                attribute2.FixedValue = "StampeSottoscrizioniRepartiRichiedentiListaDataTable"
                type.Attributes.Add(attribute2)
                type.Particle = sequence
                Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
                If xs.Contains(dsSchema.TargetNamespace) Then
                    Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Try 
                        Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                        dsSchema.Write(s1)
                        Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                        Do While schemas.MoveNext
                            schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                            s2.SetLength(0)
                            schema.Write(s2)
                            If (s1.Length = s2.Length) Then
                                s1.Position = 0
                                s2.Position = 0
                                
                                Do While ((s1.Position <> s1.Length)  _
                                            AndAlso (s1.ReadByte = s2.ReadByte))
                                    
                                    
                                Loop
                                If (s1.Position = s1.Length) Then
                                    Return type
                                End If
                            End If
                            
                        Loop
                    Finally
                        If (Not (s1) Is Nothing) Then
                            s1.Close
                        End If
                        If (Not (s2) Is Nothing) Then
                            s2.Close
                        End If
                    End Try
                End If
                xs.Add(dsSchema)
                Return type
            End Function
        End Class
        
        '''<summary>
        '''Represents the strongly named DataTable class.
        '''</summary>
        <Global.System.Serializable(),  _
         Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
        Partial Public Class StampeSottoscrizioniListaDataTable
            Inherits Global.System.Data.TypedTableBase(Of StampeSottoscrizioniListaRow)
            
            Private columnId As Global.System.Data.DataColumn
            
            Private columnDataInserimento As Global.System.Data.DataColumn
            
            Private columnDataModifica As Global.System.Data.DataColumn
            
            Private columnAccount As Global.System.Data.DataColumn
            
            Private columnDataInizio As Global.System.Data.DataColumn
            
            Private columnDataFine As Global.System.Data.DataColumn
            
            Private columnIdTipoReferti As Global.System.Data.DataColumn
            
            Private columnTipoReferti As Global.System.Data.DataColumn
            
            Private columnServerDiStampa As Global.System.Data.DataColumn
            
            Private columnStampante As Global.System.Data.DataColumn
            
            Private columnIdStato As Global.System.Data.DataColumn
            
            Private columnStato As Global.System.Data.DataColumn
            
            Private columnTipoSottoscrizione As Global.System.Data.DataColumn
            
            Private columnTs As Global.System.Data.DataColumn
            
            Private columnNome As Global.System.Data.DataColumn
            
            Private columnDescrizione As Global.System.Data.DataColumn
            
            Private columnStampaConfidenziali As Global.System.Data.DataColumn
            
            Private columnStampaOscurati As Global.System.Data.DataColumn
            
            Private columnNumeroCopie As Global.System.Data.DataColumn
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub New()
                MyBase.New
                Me.TableName = "StampeSottoscrizioniLista"
                Me.BeginInit
                Me.InitClass
                Me.EndInit
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Friend Sub New(ByVal table As Global.System.Data.DataTable)
                MyBase.New
                Me.TableName = table.TableName
                If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                    Me.CaseSensitive = table.CaseSensitive
                End If
                If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                    Me.Locale = table.Locale
                End If
                If (table.Namespace <> table.DataSet.Namespace) Then
                    Me.Namespace = table.Namespace
                End If
                Me.Prefix = table.Prefix
                Me.MinimumCapacity = table.MinimumCapacity
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
                MyBase.New(info, context)
                Me.InitVars
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property IdColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnId
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property DataInserimentoColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnDataInserimento
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property DataModificaColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnDataModifica
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property AccountColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnAccount
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property DataInizioColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnDataInizio
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property DataFineColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnDataFine
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property IdTipoRefertiColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnIdTipoReferti
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property TipoRefertiColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnTipoReferti
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property ServerDiStampaColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnServerDiStampa
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property StampanteColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnStampante
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property IdStatoColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnIdStato
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property StatoColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnStato
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property TipoSottoscrizioneColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnTipoSottoscrizione
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property TsColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnTs
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property NomeColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnNome
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property DescrizioneColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnDescrizione
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property StampaConfidenzialiColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnStampaConfidenziali
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property StampaOscuratiColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnStampaOscurati
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property NumeroCopieColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnNumeroCopie
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
             Global.System.ComponentModel.Browsable(false)>  _
            Public ReadOnly Property Count() As Integer
                Get
                    Return Me.Rows.Count
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Default ReadOnly Property Item(ByVal index As Integer) As StampeSottoscrizioniListaRow
                Get
                    Return CType(Me.Rows(index),StampeSottoscrizioniListaRow)
                End Get
            End Property
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event StampeSottoscrizioniListaRowChanging As StampeSottoscrizioniListaRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event StampeSottoscrizioniListaRowChanged As StampeSottoscrizioniListaRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event StampeSottoscrizioniListaRowDeleting As StampeSottoscrizioniListaRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event StampeSottoscrizioniListaRowDeleted As StampeSottoscrizioniListaRowChangeEventHandler
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Overloads Sub AddStampeSottoscrizioniListaRow(ByVal row As StampeSottoscrizioniListaRow)
                Me.Rows.Add(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Overloads Function AddStampeSottoscrizioniListaRow( _
                        ByVal Id As System.Guid,  _
                        ByVal DataInserimento As Date,  _
                        ByVal DataModifica As Date,  _
                        ByVal Account As String,  _
                        ByVal DataInizio As Date,  _
                        ByVal DataFine As Date,  _
                        ByVal IdTipoReferti As Integer,  _
                        ByVal TipoReferti As String,  _
                        ByVal ServerDiStampa As String,  _
                        ByVal Stampante As String,  _
                        ByVal IdStato As Integer,  _
                        ByVal Stato As String,  _
                        ByVal TipoSottoscrizione As String,  _
                        ByVal Ts() As Byte,  _
                        ByVal Nome As String,  _
                        ByVal Descrizione As String,  _
                        ByVal StampaConfidenziali As Boolean,  _
                        ByVal StampaOscurati As Boolean,  _
                        ByVal NumeroCopie As Byte) As StampeSottoscrizioniListaRow
                Dim rowStampeSottoscrizioniListaRow As StampeSottoscrizioniListaRow = CType(Me.NewRow,StampeSottoscrizioniListaRow)
                Dim columnValuesArray() As Object = New Object() {Id, DataInserimento, DataModifica, Account, DataInizio, DataFine, IdTipoReferti, TipoReferti, ServerDiStampa, Stampante, IdStato, Stato, TipoSottoscrizione, Ts, Nome, Descrizione, StampaConfidenziali, StampaOscurati, NumeroCopie}
                rowStampeSottoscrizioniListaRow.ItemArray = columnValuesArray
                Me.Rows.Add(rowStampeSottoscrizioniListaRow)
                Return rowStampeSottoscrizioniListaRow
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function FindById(ByVal Id As System.Guid) As StampeSottoscrizioniListaRow
                Return CType(Me.Rows.Find(New Object() {Id}),StampeSottoscrizioniListaRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Overrides Function Clone() As Global.System.Data.DataTable
                Dim cln As StampeSottoscrizioniListaDataTable = CType(MyBase.Clone,StampeSottoscrizioniListaDataTable)
                cln.InitVars
                Return cln
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
                Return New StampeSottoscrizioniListaDataTable()
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Friend Sub InitVars()
                Me.columnId = MyBase.Columns("Id")
                Me.columnDataInserimento = MyBase.Columns("DataInserimento")
                Me.columnDataModifica = MyBase.Columns("DataModifica")
                Me.columnAccount = MyBase.Columns("Account")
                Me.columnDataInizio = MyBase.Columns("DataInizio")
                Me.columnDataFine = MyBase.Columns("DataFine")
                Me.columnIdTipoReferti = MyBase.Columns("IdTipoReferti")
                Me.columnTipoReferti = MyBase.Columns("TipoReferti")
                Me.columnServerDiStampa = MyBase.Columns("ServerDiStampa")
                Me.columnStampante = MyBase.Columns("Stampante")
                Me.columnIdStato = MyBase.Columns("IdStato")
                Me.columnStato = MyBase.Columns("Stato")
                Me.columnTipoSottoscrizione = MyBase.Columns("TipoSottoscrizione")
                Me.columnTs = MyBase.Columns("Ts")
                Me.columnNome = MyBase.Columns("Nome")
                Me.columnDescrizione = MyBase.Columns("Descrizione")
                Me.columnStampaConfidenziali = MyBase.Columns("StampaConfidenziali")
                Me.columnStampaOscurati = MyBase.Columns("StampaOscurati")
                Me.columnNumeroCopie = MyBase.Columns("NumeroCopie")
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Private Sub InitClass()
                Me.columnId = New Global.System.Data.DataColumn("Id", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnId)
                Me.columnDataInserimento = New Global.System.Data.DataColumn("DataInserimento", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnDataInserimento)
                Me.columnDataModifica = New Global.System.Data.DataColumn("DataModifica", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnDataModifica)
                Me.columnAccount = New Global.System.Data.DataColumn("Account", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnAccount)
                Me.columnDataInizio = New Global.System.Data.DataColumn("DataInizio", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnDataInizio)
                Me.columnDataFine = New Global.System.Data.DataColumn("DataFine", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnDataFine)
                Me.columnIdTipoReferti = New Global.System.Data.DataColumn("IdTipoReferti", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnIdTipoReferti)
                Me.columnTipoReferti = New Global.System.Data.DataColumn("TipoReferti", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnTipoReferti)
                Me.columnServerDiStampa = New Global.System.Data.DataColumn("ServerDiStampa", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnServerDiStampa)
                Me.columnStampante = New Global.System.Data.DataColumn("Stampante", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnStampante)
                Me.columnIdStato = New Global.System.Data.DataColumn("IdStato", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnIdStato)
                Me.columnStato = New Global.System.Data.DataColumn("Stato", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnStato)
                Me.columnTipoSottoscrizione = New Global.System.Data.DataColumn("TipoSottoscrizione", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnTipoSottoscrizione)
                Me.columnTs = New Global.System.Data.DataColumn("Ts", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnTs)
                Me.columnNome = New Global.System.Data.DataColumn("Nome", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnNome)
                Me.columnDescrizione = New Global.System.Data.DataColumn("Descrizione", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnDescrizione)
                Me.columnStampaConfidenziali = New Global.System.Data.DataColumn("StampaConfidenziali", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnStampaConfidenziali)
                Me.columnStampaOscurati = New Global.System.Data.DataColumn("StampaOscurati", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnStampaOscurati)
                Me.columnNumeroCopie = New Global.System.Data.DataColumn("NumeroCopie", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnNumeroCopie)
                Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnId}, true))
                Me.columnId.AllowDBNull = false
                Me.columnId.Unique = true
                Me.columnDataInserimento.AllowDBNull = false
                Me.columnDataModifica.AllowDBNull = false
                Me.columnAccount.AllowDBNull = false
                Me.columnAccount.MaxLength = 128
                Me.columnDataInizio.AllowDBNull = false
                Me.columnDataFine.AllowDBNull = false
                Me.columnIdTipoReferti.AllowDBNull = false
                Me.columnTipoReferti.MaxLength = 64
                Me.columnServerDiStampa.ReadOnly = true
                Me.columnServerDiStampa.MaxLength = 8000
                Me.columnStampante.MaxLength = 64
                Me.columnIdStato.AllowDBNull = false
                Me.columnStato.MaxLength = 64
                Me.columnTipoSottoscrizione.MaxLength = 64
                Me.columnTs.ReadOnly = true
                Me.columnNome.AllowDBNull = false
                Me.columnNome.MaxLength = 128
                Me.columnDescrizione.MaxLength = 1024
                Me.columnStampaConfidenziali.AllowDBNull = false
                Me.columnStampaOscurati.AllowDBNull = false
                Me.columnNumeroCopie.AllowDBNull = false
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function NewStampeSottoscrizioniListaRow() As StampeSottoscrizioniListaRow
                Return CType(Me.NewRow,StampeSottoscrizioniListaRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
                Return New StampeSottoscrizioniListaRow(builder)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Function GetRowType() As Global.System.Type
                Return GetType(StampeSottoscrizioniListaRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanged(e)
                If (Not (Me.StampeSottoscrizioniListaRowChangedEvent) Is Nothing) Then
                    RaiseEvent StampeSottoscrizioniListaRowChanged(Me, New StampeSottoscrizioniListaRowChangeEvent(CType(e.Row,StampeSottoscrizioniListaRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanging(e)
                If (Not (Me.StampeSottoscrizioniListaRowChangingEvent) Is Nothing) Then
                    RaiseEvent StampeSottoscrizioniListaRowChanging(Me, New StampeSottoscrizioniListaRowChangeEvent(CType(e.Row,StampeSottoscrizioniListaRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleted(e)
                If (Not (Me.StampeSottoscrizioniListaRowDeletedEvent) Is Nothing) Then
                    RaiseEvent StampeSottoscrizioniListaRowDeleted(Me, New StampeSottoscrizioniListaRowChangeEvent(CType(e.Row,StampeSottoscrizioniListaRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleting(e)
                If (Not (Me.StampeSottoscrizioniListaRowDeletingEvent) Is Nothing) Then
                    RaiseEvent StampeSottoscrizioniListaRowDeleting(Me, New StampeSottoscrizioniListaRowChangeEvent(CType(e.Row,StampeSottoscrizioniListaRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub RemoveStampeSottoscrizioniListaRow(ByVal row As StampeSottoscrizioniListaRow)
                Me.Rows.Remove(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
                Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
                Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
                Dim ds As BackEndDataSet = New BackEndDataSet()
                Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any1.Namespace = "http://www.w3.org/2001/XMLSchema"
                any1.MinOccurs = New Decimal(0)
                any1.MaxOccurs = Decimal.MaxValue
                any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any1)
                Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
                any2.MinOccurs = New Decimal(1)
                any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any2)
                Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute1.Name = "namespace"
                attribute1.FixedValue = ds.Namespace
                type.Attributes.Add(attribute1)
                Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute2.Name = "tableTypeName"
                attribute2.FixedValue = "StampeSottoscrizioniListaDataTable"
                type.Attributes.Add(attribute2)
                type.Particle = sequence
                Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
                If xs.Contains(dsSchema.TargetNamespace) Then
                    Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Try 
                        Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                        dsSchema.Write(s1)
                        Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                        Do While schemas.MoveNext
                            schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                            s2.SetLength(0)
                            schema.Write(s2)
                            If (s1.Length = s2.Length) Then
                                s1.Position = 0
                                s2.Position = 0
                                
                                Do While ((s1.Position <> s1.Length)  _
                                            AndAlso (s1.ReadByte = s2.ReadByte))
                                    
                                    
                                Loop
                                If (s1.Position = s1.Length) Then
                                    Return type
                                End If
                            End If
                            
                        Loop
                    Finally
                        If (Not (s1) Is Nothing) Then
                            s1.Close
                        End If
                        If (Not (s2) Is Nothing) Then
                            s2.Close
                        End If
                    End Try
                End If
                xs.Add(dsSchema)
                Return type
            End Function
        End Class
        
        '''<summary>
        '''Represents the strongly named DataTable class.
        '''</summary>
        <Global.System.Serializable(),  _
         Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
        Partial Public Class StampeSottoscrizioniDettaglioDataTable
            Inherits Global.System.Data.TypedTableBase(Of StampeSottoscrizioniDettaglioRow)
            
            Private columnId As Global.System.Data.DataColumn
            
            Private columnAccount As Global.System.Data.DataColumn
            
            Private columnDataFine As Global.System.Data.DataColumn
            
            Private columnIdTipoReferti As Global.System.Data.DataColumn
            
            Private columnServerDiStampa As Global.System.Data.DataColumn
            
            Private columnStampante As Global.System.Data.DataColumn
            
            Private columnIdStato As Global.System.Data.DataColumn
            
            Private columnIdTipoSottoscrizione As Global.System.Data.DataColumn
            
            Private columnTs As Global.System.Data.DataColumn
            
            Private columnNome As Global.System.Data.DataColumn
            
            Private columnDescrizione As Global.System.Data.DataColumn
            
            Private columnStato As Global.System.Data.DataColumn
            
            Private columnStampaConfidenziali As Global.System.Data.DataColumn
            
            Private columnStampaOscurati As Global.System.Data.DataColumn
            
            Private columnNumeroCopie As Global.System.Data.DataColumn
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub New()
                MyBase.New
                Me.TableName = "StampeSottoscrizioniDettaglio"
                Me.BeginInit
                Me.InitClass
                Me.EndInit
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Friend Sub New(ByVal table As Global.System.Data.DataTable)
                MyBase.New
                Me.TableName = table.TableName
                If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                    Me.CaseSensitive = table.CaseSensitive
                End If
                If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                    Me.Locale = table.Locale
                End If
                If (table.Namespace <> table.DataSet.Namespace) Then
                    Me.Namespace = table.Namespace
                End If
                Me.Prefix = table.Prefix
                Me.MinimumCapacity = table.MinimumCapacity
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
                MyBase.New(info, context)
                Me.InitVars
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property IdColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnId
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property AccountColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnAccount
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property DataFineColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnDataFine
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property IdTipoRefertiColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnIdTipoReferti
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property ServerDiStampaColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnServerDiStampa
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property StampanteColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnStampante
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property IdStatoColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnIdStato
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property IdTipoSottoscrizioneColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnIdTipoSottoscrizione
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property TsColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnTs
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property NomeColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnNome
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property DescrizioneColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnDescrizione
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property StatoColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnStato
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property StampaConfidenzialiColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnStampaConfidenziali
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property StampaOscuratiColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnStampaOscurati
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property NumeroCopieColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnNumeroCopie
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
             Global.System.ComponentModel.Browsable(false)>  _
            Public ReadOnly Property Count() As Integer
                Get
                    Return Me.Rows.Count
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Default ReadOnly Property Item(ByVal index As Integer) As StampeSottoscrizioniDettaglioRow
                Get
                    Return CType(Me.Rows(index),StampeSottoscrizioniDettaglioRow)
                End Get
            End Property
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event StampeSottoscrizioniDettaglioRowChanging As StampeSottoscrizioniDettaglioRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event StampeSottoscrizioniDettaglioRowChanged As StampeSottoscrizioniDettaglioRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event StampeSottoscrizioniDettaglioRowDeleting As StampeSottoscrizioniDettaglioRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event StampeSottoscrizioniDettaglioRowDeleted As StampeSottoscrizioniDettaglioRowChangeEventHandler
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Overloads Sub AddStampeSottoscrizioniDettaglioRow(ByVal row As StampeSottoscrizioniDettaglioRow)
                Me.Rows.Add(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Overloads Function AddStampeSottoscrizioniDettaglioRow(ByVal Id As System.Guid, ByVal Account As String, ByVal DataFine As Date, ByVal IdTipoReferti As Integer, ByVal ServerDiStampa As String, ByVal Stampante As String, ByVal IdStato As Integer, ByVal IdTipoSottoscrizione As Integer, ByVal Ts() As Byte, ByVal Nome As String, ByVal Descrizione As String, ByVal Stato As String, ByVal StampaConfidenziali As Boolean, ByVal StampaOscurati As Boolean, ByVal NumeroCopie As Byte) As StampeSottoscrizioniDettaglioRow
                Dim rowStampeSottoscrizioniDettaglioRow As StampeSottoscrizioniDettaglioRow = CType(Me.NewRow,StampeSottoscrizioniDettaglioRow)
                Dim columnValuesArray() As Object = New Object() {Id, Account, DataFine, IdTipoReferti, ServerDiStampa, Stampante, IdStato, IdTipoSottoscrizione, Ts, Nome, Descrizione, Stato, StampaConfidenziali, StampaOscurati, NumeroCopie}
                rowStampeSottoscrizioniDettaglioRow.ItemArray = columnValuesArray
                Me.Rows.Add(rowStampeSottoscrizioniDettaglioRow)
                Return rowStampeSottoscrizioniDettaglioRow
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function FindById(ByVal Id As System.Guid) As StampeSottoscrizioniDettaglioRow
                Return CType(Me.Rows.Find(New Object() {Id}),StampeSottoscrizioniDettaglioRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Overrides Function Clone() As Global.System.Data.DataTable
                Dim cln As StampeSottoscrizioniDettaglioDataTable = CType(MyBase.Clone,StampeSottoscrizioniDettaglioDataTable)
                cln.InitVars
                Return cln
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
                Return New StampeSottoscrizioniDettaglioDataTable()
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Friend Sub InitVars()
                Me.columnId = MyBase.Columns("Id")
                Me.columnAccount = MyBase.Columns("Account")
                Me.columnDataFine = MyBase.Columns("DataFine")
                Me.columnIdTipoReferti = MyBase.Columns("IdTipoReferti")
                Me.columnServerDiStampa = MyBase.Columns("ServerDiStampa")
                Me.columnStampante = MyBase.Columns("Stampante")
                Me.columnIdStato = MyBase.Columns("IdStato")
                Me.columnIdTipoSottoscrizione = MyBase.Columns("IdTipoSottoscrizione")
                Me.columnTs = MyBase.Columns("Ts")
                Me.columnNome = MyBase.Columns("Nome")
                Me.columnDescrizione = MyBase.Columns("Descrizione")
                Me.columnStato = MyBase.Columns("Stato")
                Me.columnStampaConfidenziali = MyBase.Columns("StampaConfidenziali")
                Me.columnStampaOscurati = MyBase.Columns("StampaOscurati")
                Me.columnNumeroCopie = MyBase.Columns("NumeroCopie")
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Private Sub InitClass()
                Me.columnId = New Global.System.Data.DataColumn("Id", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnId)
                Me.columnAccount = New Global.System.Data.DataColumn("Account", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnAccount)
                Me.columnDataFine = New Global.System.Data.DataColumn("DataFine", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnDataFine)
                Me.columnIdTipoReferti = New Global.System.Data.DataColumn("IdTipoReferti", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnIdTipoReferti)
                Me.columnServerDiStampa = New Global.System.Data.DataColumn("ServerDiStampa", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnServerDiStampa)
                Me.columnStampante = New Global.System.Data.DataColumn("Stampante", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnStampante)
                Me.columnIdStato = New Global.System.Data.DataColumn("IdStato", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnIdStato)
                Me.columnIdTipoSottoscrizione = New Global.System.Data.DataColumn("IdTipoSottoscrizione", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnIdTipoSottoscrizione)
                Me.columnTs = New Global.System.Data.DataColumn("Ts", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnTs)
                Me.columnNome = New Global.System.Data.DataColumn("Nome", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnNome)
                Me.columnDescrizione = New Global.System.Data.DataColumn("Descrizione", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnDescrizione)
                Me.columnStato = New Global.System.Data.DataColumn("Stato", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnStato)
                Me.columnStampaConfidenziali = New Global.System.Data.DataColumn("StampaConfidenziali", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnStampaConfidenziali)
                Me.columnStampaOscurati = New Global.System.Data.DataColumn("StampaOscurati", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnStampaOscurati)
                Me.columnNumeroCopie = New Global.System.Data.DataColumn("NumeroCopie", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnNumeroCopie)
                Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnId}, true))
                Me.columnId.AllowDBNull = false
                Me.columnId.Unique = true
                Me.columnAccount.AllowDBNull = false
                Me.columnAccount.MaxLength = 128
                Me.columnDataFine.AllowDBNull = false
                Me.columnIdTipoReferti.AllowDBNull = false
                Me.columnIdTipoReferti.Caption = "IDTipoReferti"
                Me.columnServerDiStampa.MaxLength = 8000
                Me.columnStampante.MaxLength = 64
                Me.columnIdStato.AllowDBNull = false
                Me.columnIdTipoSottoscrizione.AllowDBNull = false
                Me.columnNome.AllowDBNull = false
                Me.columnNome.MaxLength = 128
                Me.columnDescrizione.MaxLength = 1024
                Me.columnStato.MaxLength = 64
                Me.columnStampaConfidenziali.AllowDBNull = false
                Me.columnStampaOscurati.AllowDBNull = false
                Me.columnNumeroCopie.AllowDBNull = false
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function NewStampeSottoscrizioniDettaglioRow() As StampeSottoscrizioniDettaglioRow
                Return CType(Me.NewRow,StampeSottoscrizioniDettaglioRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
                Return New StampeSottoscrizioniDettaglioRow(builder)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Function GetRowType() As Global.System.Type
                Return GetType(StampeSottoscrizioniDettaglioRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanged(e)
                If (Not (Me.StampeSottoscrizioniDettaglioRowChangedEvent) Is Nothing) Then
                    RaiseEvent StampeSottoscrizioniDettaglioRowChanged(Me, New StampeSottoscrizioniDettaglioRowChangeEvent(CType(e.Row,StampeSottoscrizioniDettaglioRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanging(e)
                If (Not (Me.StampeSottoscrizioniDettaglioRowChangingEvent) Is Nothing) Then
                    RaiseEvent StampeSottoscrizioniDettaglioRowChanging(Me, New StampeSottoscrizioniDettaglioRowChangeEvent(CType(e.Row,StampeSottoscrizioniDettaglioRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleted(e)
                If (Not (Me.StampeSottoscrizioniDettaglioRowDeletedEvent) Is Nothing) Then
                    RaiseEvent StampeSottoscrizioniDettaglioRowDeleted(Me, New StampeSottoscrizioniDettaglioRowChangeEvent(CType(e.Row,StampeSottoscrizioniDettaglioRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleting(e)
                If (Not (Me.StampeSottoscrizioniDettaglioRowDeletingEvent) Is Nothing) Then
                    RaiseEvent StampeSottoscrizioniDettaglioRowDeleting(Me, New StampeSottoscrizioniDettaglioRowChangeEvent(CType(e.Row,StampeSottoscrizioniDettaglioRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub RemoveStampeSottoscrizioniDettaglioRow(ByVal row As StampeSottoscrizioniDettaglioRow)
                Me.Rows.Remove(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
                Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
                Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
                Dim ds As BackEndDataSet = New BackEndDataSet()
                Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any1.Namespace = "http://www.w3.org/2001/XMLSchema"
                any1.MinOccurs = New Decimal(0)
                any1.MaxOccurs = Decimal.MaxValue
                any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any1)
                Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
                any2.MinOccurs = New Decimal(1)
                any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any2)
                Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute1.Name = "namespace"
                attribute1.FixedValue = ds.Namespace
                type.Attributes.Add(attribute1)
                Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute2.Name = "tableTypeName"
                attribute2.FixedValue = "StampeSottoscrizioniDettaglioDataTable"
                type.Attributes.Add(attribute2)
                type.Particle = sequence
                Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
                If xs.Contains(dsSchema.TargetNamespace) Then
                    Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Try 
                        Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                        dsSchema.Write(s1)
                        Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                        Do While schemas.MoveNext
                            schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                            s2.SetLength(0)
                            schema.Write(s2)
                            If (s1.Length = s2.Length) Then
                                s1.Position = 0
                                s2.Position = 0
                                
                                Do While ((s1.Position <> s1.Length)  _
                                            AndAlso (s1.ReadByte = s2.ReadByte))
                                    
                                    
                                Loop
                                If (s1.Position = s1.Length) Then
                                    Return type
                                End If
                            End If
                            
                        Loop
                    Finally
                        If (Not (s1) Is Nothing) Then
                            s1.Close
                        End If
                        If (Not (s2) Is Nothing) Then
                            s2.Close
                        End If
                    End Try
                End If
                xs.Add(dsSchema)
                Return type
            End Function
        End Class
        
        '''<summary>
        '''Represents the strongly named DataTable class.
        '''</summary>
        <Global.System.Serializable(),  _
         Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
        Partial Public Class StampeSottoscrizioniRepartiRichiedentiSelezionabiliDataTable
            Inherits Global.System.Data.TypedTableBase(Of StampeSottoscrizioniRepartiRichiedentiSelezionabiliRow)
            
            Private columnId As Global.System.Data.DataColumn
            
            Private columnRepartoRichiedenteDescrizione As Global.System.Data.DataColumn
            
            Private columnRepartoRichiedenteCodice As Global.System.Data.DataColumn
            
            Private columnAziendaErogante As Global.System.Data.DataColumn
            
            Private columnSistemaErogante As Global.System.Data.DataColumn
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub New()
                MyBase.New
                Me.TableName = "StampeSottoscrizioniRepartiRichiedentiSelezionabili"
                Me.BeginInit
                Me.InitClass
                Me.EndInit
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Friend Sub New(ByVal table As Global.System.Data.DataTable)
                MyBase.New
                Me.TableName = table.TableName
                If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                    Me.CaseSensitive = table.CaseSensitive
                End If
                If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                    Me.Locale = table.Locale
                End If
                If (table.Namespace <> table.DataSet.Namespace) Then
                    Me.Namespace = table.Namespace
                End If
                Me.Prefix = table.Prefix
                Me.MinimumCapacity = table.MinimumCapacity
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
                MyBase.New(info, context)
                Me.InitVars
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property IdColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnId
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property RepartoRichiedenteDescrizioneColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnRepartoRichiedenteDescrizione
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property RepartoRichiedenteCodiceColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnRepartoRichiedenteCodice
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property AziendaEroganteColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnAziendaErogante
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property SistemaEroganteColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnSistemaErogante
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
             Global.System.ComponentModel.Browsable(false)>  _
            Public ReadOnly Property Count() As Integer
                Get
                    Return Me.Rows.Count
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Default ReadOnly Property Item(ByVal index As Integer) As StampeSottoscrizioniRepartiRichiedentiSelezionabiliRow
                Get
                    Return CType(Me.Rows(index),StampeSottoscrizioniRepartiRichiedentiSelezionabiliRow)
                End Get
            End Property
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event StampeSottoscrizioniRepartiRichiedentiSelezionabiliRowChanging As StampeSottoscrizioniRepartiRichiedentiSelezionabiliRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event StampeSottoscrizioniRepartiRichiedentiSelezionabiliRowChanged As StampeSottoscrizioniRepartiRichiedentiSelezionabiliRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event StampeSottoscrizioniRepartiRichiedentiSelezionabiliRowDeleting As StampeSottoscrizioniRepartiRichiedentiSelezionabiliRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event StampeSottoscrizioniRepartiRichiedentiSelezionabiliRowDeleted As StampeSottoscrizioniRepartiRichiedentiSelezionabiliRowChangeEventHandler
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Overloads Sub AddStampeSottoscrizioniRepartiRichiedentiSelezionabiliRow(ByVal row As StampeSottoscrizioniRepartiRichiedentiSelezionabiliRow)
                Me.Rows.Add(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Overloads Function AddStampeSottoscrizioniRepartiRichiedentiSelezionabiliRow(ByVal Id As System.Guid, ByVal RepartoRichiedenteDescrizione As String, ByVal RepartoRichiedenteCodice As String, ByVal AziendaErogante As String, ByVal SistemaErogante As String) As StampeSottoscrizioniRepartiRichiedentiSelezionabiliRow
                Dim rowStampeSottoscrizioniRepartiRichiedentiSelezionabiliRow As StampeSottoscrizioniRepartiRichiedentiSelezionabiliRow = CType(Me.NewRow,StampeSottoscrizioniRepartiRichiedentiSelezionabiliRow)
                Dim columnValuesArray() As Object = New Object() {Id, RepartoRichiedenteDescrizione, RepartoRichiedenteCodice, AziendaErogante, SistemaErogante}
                rowStampeSottoscrizioniRepartiRichiedentiSelezionabiliRow.ItemArray = columnValuesArray
                Me.Rows.Add(rowStampeSottoscrizioniRepartiRichiedentiSelezionabiliRow)
                Return rowStampeSottoscrizioniRepartiRichiedentiSelezionabiliRow
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function FindById(ByVal Id As System.Guid) As StampeSottoscrizioniRepartiRichiedentiSelezionabiliRow
                Return CType(Me.Rows.Find(New Object() {Id}),StampeSottoscrizioniRepartiRichiedentiSelezionabiliRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Overrides Function Clone() As Global.System.Data.DataTable
                Dim cln As StampeSottoscrizioniRepartiRichiedentiSelezionabiliDataTable = CType(MyBase.Clone,StampeSottoscrizioniRepartiRichiedentiSelezionabiliDataTable)
                cln.InitVars
                Return cln
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
                Return New StampeSottoscrizioniRepartiRichiedentiSelezionabiliDataTable()
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Friend Sub InitVars()
                Me.columnId = MyBase.Columns("Id")
                Me.columnRepartoRichiedenteDescrizione = MyBase.Columns("RepartoRichiedenteDescrizione")
                Me.columnRepartoRichiedenteCodice = MyBase.Columns("RepartoRichiedenteCodice")
                Me.columnAziendaErogante = MyBase.Columns("AziendaErogante")
                Me.columnSistemaErogante = MyBase.Columns("SistemaErogante")
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Private Sub InitClass()
                Me.columnId = New Global.System.Data.DataColumn("Id", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnId)
                Me.columnRepartoRichiedenteDescrizione = New Global.System.Data.DataColumn("RepartoRichiedenteDescrizione", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnRepartoRichiedenteDescrizione)
                Me.columnRepartoRichiedenteCodice = New Global.System.Data.DataColumn("RepartoRichiedenteCodice", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnRepartoRichiedenteCodice)
                Me.columnAziendaErogante = New Global.System.Data.DataColumn("AziendaErogante", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnAziendaErogante)
                Me.columnSistemaErogante = New Global.System.Data.DataColumn("SistemaErogante", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnSistemaErogante)
                Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnId}, true))
                Me.columnId.AllowDBNull = false
                Me.columnId.Unique = true
                Me.columnRepartoRichiedenteDescrizione.MaxLength = 128
                Me.columnRepartoRichiedenteCodice.MaxLength = 16
                Me.columnAziendaErogante.AllowDBNull = false
                Me.columnAziendaErogante.MaxLength = 16
                Me.columnSistemaErogante.AllowDBNull = false
                Me.columnSistemaErogante.MaxLength = 16
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function NewStampeSottoscrizioniRepartiRichiedentiSelezionabiliRow() As StampeSottoscrizioniRepartiRichiedentiSelezionabiliRow
                Return CType(Me.NewRow,StampeSottoscrizioniRepartiRichiedentiSelezionabiliRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
                Return New StampeSottoscrizioniRepartiRichiedentiSelezionabiliRow(builder)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Function GetRowType() As Global.System.Type
                Return GetType(StampeSottoscrizioniRepartiRichiedentiSelezionabiliRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanged(e)
                If (Not (Me.StampeSottoscrizioniRepartiRichiedentiSelezionabiliRowChangedEvent) Is Nothing) Then
                    RaiseEvent StampeSottoscrizioniRepartiRichiedentiSelezionabiliRowChanged(Me, New StampeSottoscrizioniRepartiRichiedentiSelezionabiliRowChangeEvent(CType(e.Row,StampeSottoscrizioniRepartiRichiedentiSelezionabiliRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanging(e)
                If (Not (Me.StampeSottoscrizioniRepartiRichiedentiSelezionabiliRowChangingEvent) Is Nothing) Then
                    RaiseEvent StampeSottoscrizioniRepartiRichiedentiSelezionabiliRowChanging(Me, New StampeSottoscrizioniRepartiRichiedentiSelezionabiliRowChangeEvent(CType(e.Row,StampeSottoscrizioniRepartiRichiedentiSelezionabiliRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleted(e)
                If (Not (Me.StampeSottoscrizioniRepartiRichiedentiSelezionabiliRowDeletedEvent) Is Nothing) Then
                    RaiseEvent StampeSottoscrizioniRepartiRichiedentiSelezionabiliRowDeleted(Me, New StampeSottoscrizioniRepartiRichiedentiSelezionabiliRowChangeEvent(CType(e.Row,StampeSottoscrizioniRepartiRichiedentiSelezionabiliRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleting(e)
                If (Not (Me.StampeSottoscrizioniRepartiRichiedentiSelezionabiliRowDeletingEvent) Is Nothing) Then
                    RaiseEvent StampeSottoscrizioniRepartiRichiedentiSelezionabiliRowDeleting(Me, New StampeSottoscrizioniRepartiRichiedentiSelezionabiliRowChangeEvent(CType(e.Row,StampeSottoscrizioniRepartiRichiedentiSelezionabiliRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub RemoveStampeSottoscrizioniRepartiRichiedentiSelezionabiliRow(ByVal row As StampeSottoscrizioniRepartiRichiedentiSelezionabiliRow)
                Me.Rows.Remove(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
                Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
                Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
                Dim ds As BackEndDataSet = New BackEndDataSet()
                Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any1.Namespace = "http://www.w3.org/2001/XMLSchema"
                any1.MinOccurs = New Decimal(0)
                any1.MaxOccurs = Decimal.MaxValue
                any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any1)
                Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
                any2.MinOccurs = New Decimal(1)
                any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any2)
                Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute1.Name = "namespace"
                attribute1.FixedValue = ds.Namespace
                type.Attributes.Add(attribute1)
                Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute2.Name = "tableTypeName"
                attribute2.FixedValue = "StampeSottoscrizioniRepartiRichiedentiSelezionabiliDataTable"
                type.Attributes.Add(attribute2)
                type.Particle = sequence
                Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
                If xs.Contains(dsSchema.TargetNamespace) Then
                    Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Try 
                        Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                        dsSchema.Write(s1)
                        Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                        Do While schemas.MoveNext
                            schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                            s2.SetLength(0)
                            schema.Write(s2)
                            If (s1.Length = s2.Length) Then
                                s1.Position = 0
                                s2.Position = 0
                                
                                Do While ((s1.Position <> s1.Length)  _
                                            AndAlso (s1.ReadByte = s2.ReadByte))
                                    
                                    
                                Loop
                                If (s1.Position = s1.Length) Then
                                    Return type
                                End If
                            End If
                            
                        Loop
                    Finally
                        If (Not (s1) Is Nothing) Then
                            s1.Close
                        End If
                        If (Not (s2) Is Nothing) Then
                            s2.Close
                        End If
                    End Try
                End If
                xs.Add(dsSchema)
                Return type
            End Function
        End Class
        
        '''<summary>
        '''Represents the strongly named DataTable class.
        '''</summary>
        <Global.System.Serializable(),  _
         Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
        Partial Public Class SistemiErogantiListaDataTable
            Inherits Global.System.Data.TypedTableBase(Of SistemiErogantiListaRow)
            
            Private columnCodice As Global.System.Data.DataColumn
            
            Private columnDescrizione As Global.System.Data.DataColumn
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub New()
                MyBase.New
                Me.TableName = "SistemiErogantiLista"
                Me.BeginInit
                Me.InitClass
                Me.EndInit
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Friend Sub New(ByVal table As Global.System.Data.DataTable)
                MyBase.New
                Me.TableName = table.TableName
                If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                    Me.CaseSensitive = table.CaseSensitive
                End If
                If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                    Me.Locale = table.Locale
                End If
                If (table.Namespace <> table.DataSet.Namespace) Then
                    Me.Namespace = table.Namespace
                End If
                Me.Prefix = table.Prefix
                Me.MinimumCapacity = table.MinimumCapacity
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
                MyBase.New(info, context)
                Me.InitVars
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property CodiceColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnCodice
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property DescrizioneColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnDescrizione
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
             Global.System.ComponentModel.Browsable(false)>  _
            Public ReadOnly Property Count() As Integer
                Get
                    Return Me.Rows.Count
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Default ReadOnly Property Item(ByVal index As Integer) As SistemiErogantiListaRow
                Get
                    Return CType(Me.Rows(index),SistemiErogantiListaRow)
                End Get
            End Property
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event SistemiErogantiListaRowChanging As SistemiErogantiListaRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event SistemiErogantiListaRowChanged As SistemiErogantiListaRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event SistemiErogantiListaRowDeleting As SistemiErogantiListaRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event SistemiErogantiListaRowDeleted As SistemiErogantiListaRowChangeEventHandler
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Overloads Sub AddSistemiErogantiListaRow(ByVal row As SistemiErogantiListaRow)
                Me.Rows.Add(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Overloads Function AddSistemiErogantiListaRow(ByVal Codice As String, ByVal Descrizione As String) As SistemiErogantiListaRow
                Dim rowSistemiErogantiListaRow As SistemiErogantiListaRow = CType(Me.NewRow,SistemiErogantiListaRow)
                Dim columnValuesArray() As Object = New Object() {Codice, Descrizione}
                rowSistemiErogantiListaRow.ItemArray = columnValuesArray
                Me.Rows.Add(rowSistemiErogantiListaRow)
                Return rowSistemiErogantiListaRow
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Overrides Function Clone() As Global.System.Data.DataTable
                Dim cln As SistemiErogantiListaDataTable = CType(MyBase.Clone,SistemiErogantiListaDataTable)
                cln.InitVars
                Return cln
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
                Return New SistemiErogantiListaDataTable()
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Friend Sub InitVars()
                Me.columnCodice = MyBase.Columns("Codice")
                Me.columnDescrizione = MyBase.Columns("Descrizione")
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Private Sub InitClass()
                Me.columnCodice = New Global.System.Data.DataColumn("Codice", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnCodice)
                Me.columnDescrizione = New Global.System.Data.DataColumn("Descrizione", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnDescrizione)
                Me.columnCodice.AllowDBNull = false
                Me.columnCodice.MaxLength = 16
                Me.columnDescrizione.MaxLength = 128
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function NewSistemiErogantiListaRow() As SistemiErogantiListaRow
                Return CType(Me.NewRow,SistemiErogantiListaRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
                Return New SistemiErogantiListaRow(builder)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Function GetRowType() As Global.System.Type
                Return GetType(SistemiErogantiListaRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanged(e)
                If (Not (Me.SistemiErogantiListaRowChangedEvent) Is Nothing) Then
                    RaiseEvent SistemiErogantiListaRowChanged(Me, New SistemiErogantiListaRowChangeEvent(CType(e.Row,SistemiErogantiListaRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanging(e)
                If (Not (Me.SistemiErogantiListaRowChangingEvent) Is Nothing) Then
                    RaiseEvent SistemiErogantiListaRowChanging(Me, New SistemiErogantiListaRowChangeEvent(CType(e.Row,SistemiErogantiListaRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleted(e)
                If (Not (Me.SistemiErogantiListaRowDeletedEvent) Is Nothing) Then
                    RaiseEvent SistemiErogantiListaRowDeleted(Me, New SistemiErogantiListaRowChangeEvent(CType(e.Row,SistemiErogantiListaRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleting(e)
                If (Not (Me.SistemiErogantiListaRowDeletingEvent) Is Nothing) Then
                    RaiseEvent SistemiErogantiListaRowDeleting(Me, New SistemiErogantiListaRowChangeEvent(CType(e.Row,SistemiErogantiListaRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub RemoveSistemiErogantiListaRow(ByVal row As SistemiErogantiListaRow)
                Me.Rows.Remove(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
                Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
                Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
                Dim ds As BackEndDataSet = New BackEndDataSet()
                Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any1.Namespace = "http://www.w3.org/2001/XMLSchema"
                any1.MinOccurs = New Decimal(0)
                any1.MaxOccurs = Decimal.MaxValue
                any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any1)
                Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
                any2.MinOccurs = New Decimal(1)
                any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any2)
                Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute1.Name = "namespace"
                attribute1.FixedValue = ds.Namespace
                type.Attributes.Add(attribute1)
                Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute2.Name = "tableTypeName"
                attribute2.FixedValue = "SistemiErogantiListaDataTable"
                type.Attributes.Add(attribute2)
                type.Particle = sequence
                Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
                If xs.Contains(dsSchema.TargetNamespace) Then
                    Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Try 
                        Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                        dsSchema.Write(s1)
                        Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                        Do While schemas.MoveNext
                            schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                            s2.SetLength(0)
                            schema.Write(s2)
                            If (s1.Length = s2.Length) Then
                                s1.Position = 0
                                s2.Position = 0
                                
                                Do While ((s1.Position <> s1.Length)  _
                                            AndAlso (s1.ReadByte = s2.ReadByte))
                                    
                                    
                                Loop
                                If (s1.Position = s1.Length) Then
                                    Return type
                                End If
                            End If
                            
                        Loop
                    Finally
                        If (Not (s1) Is Nothing) Then
                            s1.Close
                        End If
                        If (Not (s2) Is Nothing) Then
                            s2.Close
                        End If
                    End Try
                End If
                xs.Add(dsSchema)
                Return type
            End Function
        End Class
        
        '''<summary>
        '''Represents the strongly named DataTable class.
        '''</summary>
        <Global.System.Serializable(),  _
         Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
        Partial Public Class AziendeErogantiListaDataTable
            Inherits Global.System.Data.TypedTableBase(Of AziendeErogantiListaRow)
            
            Private columnCodice As Global.System.Data.DataColumn
            
            Private columnDescrizione As Global.System.Data.DataColumn
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub New()
                MyBase.New
                Me.TableName = "AziendeErogantiLista"
                Me.BeginInit
                Me.InitClass
                Me.EndInit
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Friend Sub New(ByVal table As Global.System.Data.DataTable)
                MyBase.New
                Me.TableName = table.TableName
                If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                    Me.CaseSensitive = table.CaseSensitive
                End If
                If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                    Me.Locale = table.Locale
                End If
                If (table.Namespace <> table.DataSet.Namespace) Then
                    Me.Namespace = table.Namespace
                End If
                Me.Prefix = table.Prefix
                Me.MinimumCapacity = table.MinimumCapacity
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
                MyBase.New(info, context)
                Me.InitVars
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property CodiceColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnCodice
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property DescrizioneColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnDescrizione
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
             Global.System.ComponentModel.Browsable(false)>  _
            Public ReadOnly Property Count() As Integer
                Get
                    Return Me.Rows.Count
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Default ReadOnly Property Item(ByVal index As Integer) As AziendeErogantiListaRow
                Get
                    Return CType(Me.Rows(index),AziendeErogantiListaRow)
                End Get
            End Property
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event AziendeErogantiListaRowChanging As AziendeErogantiListaRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event AziendeErogantiListaRowChanged As AziendeErogantiListaRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event AziendeErogantiListaRowDeleting As AziendeErogantiListaRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event AziendeErogantiListaRowDeleted As AziendeErogantiListaRowChangeEventHandler
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Overloads Sub AddAziendeErogantiListaRow(ByVal row As AziendeErogantiListaRow)
                Me.Rows.Add(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Overloads Function AddAziendeErogantiListaRow(ByVal Codice As String, ByVal Descrizione As String) As AziendeErogantiListaRow
                Dim rowAziendeErogantiListaRow As AziendeErogantiListaRow = CType(Me.NewRow,AziendeErogantiListaRow)
                Dim columnValuesArray() As Object = New Object() {Codice, Descrizione}
                rowAziendeErogantiListaRow.ItemArray = columnValuesArray
                Me.Rows.Add(rowAziendeErogantiListaRow)
                Return rowAziendeErogantiListaRow
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Overrides Function Clone() As Global.System.Data.DataTable
                Dim cln As AziendeErogantiListaDataTable = CType(MyBase.Clone,AziendeErogantiListaDataTable)
                cln.InitVars
                Return cln
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
                Return New AziendeErogantiListaDataTable()
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Friend Sub InitVars()
                Me.columnCodice = MyBase.Columns("Codice")
                Me.columnDescrizione = MyBase.Columns("Descrizione")
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Private Sub InitClass()
                Me.columnCodice = New Global.System.Data.DataColumn("Codice", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnCodice)
                Me.columnDescrizione = New Global.System.Data.DataColumn("Descrizione", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnDescrizione)
                Me.columnCodice.AllowDBNull = false
                Me.columnCodice.MaxLength = 16
                Me.columnDescrizione.AllowDBNull = false
                Me.columnDescrizione.MaxLength = 16
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function NewAziendeErogantiListaRow() As AziendeErogantiListaRow
                Return CType(Me.NewRow,AziendeErogantiListaRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
                Return New AziendeErogantiListaRow(builder)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Function GetRowType() As Global.System.Type
                Return GetType(AziendeErogantiListaRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanged(e)
                If (Not (Me.AziendeErogantiListaRowChangedEvent) Is Nothing) Then
                    RaiseEvent AziendeErogantiListaRowChanged(Me, New AziendeErogantiListaRowChangeEvent(CType(e.Row,AziendeErogantiListaRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanging(e)
                If (Not (Me.AziendeErogantiListaRowChangingEvent) Is Nothing) Then
                    RaiseEvent AziendeErogantiListaRowChanging(Me, New AziendeErogantiListaRowChangeEvent(CType(e.Row,AziendeErogantiListaRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleted(e)
                If (Not (Me.AziendeErogantiListaRowDeletedEvent) Is Nothing) Then
                    RaiseEvent AziendeErogantiListaRowDeleted(Me, New AziendeErogantiListaRowChangeEvent(CType(e.Row,AziendeErogantiListaRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleting(e)
                If (Not (Me.AziendeErogantiListaRowDeletingEvent) Is Nothing) Then
                    RaiseEvent AziendeErogantiListaRowDeleting(Me, New AziendeErogantiListaRowChangeEvent(CType(e.Row,AziendeErogantiListaRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub RemoveAziendeErogantiListaRow(ByVal row As AziendeErogantiListaRow)
                Me.Rows.Remove(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
                Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
                Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
                Dim ds As BackEndDataSet = New BackEndDataSet()
                Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any1.Namespace = "http://www.w3.org/2001/XMLSchema"
                any1.MinOccurs = New Decimal(0)
                any1.MaxOccurs = Decimal.MaxValue
                any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any1)
                Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
                any2.MinOccurs = New Decimal(1)
                any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any2)
                Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute1.Name = "namespace"
                attribute1.FixedValue = ds.Namespace
                type.Attributes.Add(attribute1)
                Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute2.Name = "tableTypeName"
                attribute2.FixedValue = "AziendeErogantiListaDataTable"
                type.Attributes.Add(attribute2)
                type.Particle = sequence
                Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
                If xs.Contains(dsSchema.TargetNamespace) Then
                    Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Try 
                        Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                        dsSchema.Write(s1)
                        Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                        Do While schemas.MoveNext
                            schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                            s2.SetLength(0)
                            schema.Write(s2)
                            If (s1.Length = s2.Length) Then
                                s1.Position = 0
                                s2.Position = 0
                                
                                Do While ((s1.Position <> s1.Length)  _
                                            AndAlso (s1.ReadByte = s2.ReadByte))
                                    
                                    
                                Loop
                                If (s1.Position = s1.Length) Then
                                    Return type
                                End If
                            End If
                            
                        Loop
                    Finally
                        If (Not (s1) Is Nothing) Then
                            s1.Close
                        End If
                        If (Not (s2) Is Nothing) Then
                            s2.Close
                        End If
                    End Try
                End If
                xs.Add(dsSchema)
                Return type
            End Function
        End Class
        
        '''<summary>
        '''Represents the strongly named DataTable class.
        '''</summary>
        <Global.System.Serializable(),  _
         Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
        Partial Public Class GetDocumentoSistemiErogantiDataTable
            Inherits Global.System.Data.TypedTableBase(Of GetDocumentoSistemiErogantiRow)
            
            Private columnId As Global.System.Data.DataColumn
            
            Private columnNome As Global.System.Data.DataColumn
            
            Private columnEstensione As Global.System.Data.DataColumn
            
            Private columnDimensione As Global.System.Data.DataColumn
            
            Private columnContentType As Global.System.Data.DataColumn
            
            Private columnContenuto As Global.System.Data.DataColumn
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub New()
                MyBase.New
                Me.TableName = "GetDocumentoSistemiEroganti"
                Me.BeginInit
                Me.InitClass
                Me.EndInit
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Friend Sub New(ByVal table As Global.System.Data.DataTable)
                MyBase.New
                Me.TableName = table.TableName
                If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                    Me.CaseSensitive = table.CaseSensitive
                End If
                If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                    Me.Locale = table.Locale
                End If
                If (table.Namespace <> table.DataSet.Namespace) Then
                    Me.Namespace = table.Namespace
                End If
                Me.Prefix = table.Prefix
                Me.MinimumCapacity = table.MinimumCapacity
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
                MyBase.New(info, context)
                Me.InitVars
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property IdColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnId
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property NomeColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnNome
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property EstensioneColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnEstensione
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property DimensioneColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnDimensione
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property ContentTypeColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnContentType
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property ContenutoColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnContenuto
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
             Global.System.ComponentModel.Browsable(false)>  _
            Public ReadOnly Property Count() As Integer
                Get
                    Return Me.Rows.Count
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Default ReadOnly Property Item(ByVal index As Integer) As GetDocumentoSistemiErogantiRow
                Get
                    Return CType(Me.Rows(index),GetDocumentoSistemiErogantiRow)
                End Get
            End Property
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event GetDocumentoSistemiErogantiRowChanging As GetDocumentoSistemiErogantiRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event GetDocumentoSistemiErogantiRowChanged As GetDocumentoSistemiErogantiRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event GetDocumentoSistemiErogantiRowDeleting As GetDocumentoSistemiErogantiRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event GetDocumentoSistemiErogantiRowDeleted As GetDocumentoSistemiErogantiRowChangeEventHandler
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Overloads Sub AddGetDocumentoSistemiErogantiRow(ByVal row As GetDocumentoSistemiErogantiRow)
                Me.Rows.Add(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Overloads Function AddGetDocumentoSistemiErogantiRow(ByVal Id As System.Guid, ByVal Nome As String, ByVal Estensione As String, ByVal Dimensione As Integer, ByVal ContentType As String, ByVal Contenuto() As Byte) As GetDocumentoSistemiErogantiRow
                Dim rowGetDocumentoSistemiErogantiRow As GetDocumentoSistemiErogantiRow = CType(Me.NewRow,GetDocumentoSistemiErogantiRow)
                Dim columnValuesArray() As Object = New Object() {Id, Nome, Estensione, Dimensione, ContentType, Contenuto}
                rowGetDocumentoSistemiErogantiRow.ItemArray = columnValuesArray
                Me.Rows.Add(rowGetDocumentoSistemiErogantiRow)
                Return rowGetDocumentoSistemiErogantiRow
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function FindById(ByVal Id As System.Guid) As GetDocumentoSistemiErogantiRow
                Return CType(Me.Rows.Find(New Object() {Id}),GetDocumentoSistemiErogantiRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Overrides Function Clone() As Global.System.Data.DataTable
                Dim cln As GetDocumentoSistemiErogantiDataTable = CType(MyBase.Clone,GetDocumentoSistemiErogantiDataTable)
                cln.InitVars
                Return cln
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
                Return New GetDocumentoSistemiErogantiDataTable()
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Friend Sub InitVars()
                Me.columnId = MyBase.Columns("Id")
                Me.columnNome = MyBase.Columns("Nome")
                Me.columnEstensione = MyBase.Columns("Estensione")
                Me.columnDimensione = MyBase.Columns("Dimensione")
                Me.columnContentType = MyBase.Columns("ContentType")
                Me.columnContenuto = MyBase.Columns("Contenuto")
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Private Sub InitClass()
                Me.columnId = New Global.System.Data.DataColumn("Id", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnId)
                Me.columnNome = New Global.System.Data.DataColumn("Nome", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnNome)
                Me.columnEstensione = New Global.System.Data.DataColumn("Estensione", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnEstensione)
                Me.columnDimensione = New Global.System.Data.DataColumn("Dimensione", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnDimensione)
                Me.columnContentType = New Global.System.Data.DataColumn("ContentType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnContentType)
                Me.columnContenuto = New Global.System.Data.DataColumn("Contenuto", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnContenuto)
                Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnId}, true))
                Me.columnId.AllowDBNull = false
                Me.columnId.Unique = true
                Me.columnNome.AllowDBNull = false
                Me.columnNome.MaxLength = 256
                Me.columnEstensione.AllowDBNull = false
                Me.columnEstensione.MaxLength = 50
                Me.columnDimensione.AllowDBNull = false
                Me.columnContentType.AllowDBNull = false
                Me.columnContentType.MaxLength = 256
                Me.columnContenuto.AllowDBNull = false
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function NewGetDocumentoSistemiErogantiRow() As GetDocumentoSistemiErogantiRow
                Return CType(Me.NewRow,GetDocumentoSistemiErogantiRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
                Return New GetDocumentoSistemiErogantiRow(builder)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Function GetRowType() As Global.System.Type
                Return GetType(GetDocumentoSistemiErogantiRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanged(e)
                If (Not (Me.GetDocumentoSistemiErogantiRowChangedEvent) Is Nothing) Then
                    RaiseEvent GetDocumentoSistemiErogantiRowChanged(Me, New GetDocumentoSistemiErogantiRowChangeEvent(CType(e.Row,GetDocumentoSistemiErogantiRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanging(e)
                If (Not (Me.GetDocumentoSistemiErogantiRowChangingEvent) Is Nothing) Then
                    RaiseEvent GetDocumentoSistemiErogantiRowChanging(Me, New GetDocumentoSistemiErogantiRowChangeEvent(CType(e.Row,GetDocumentoSistemiErogantiRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleted(e)
                If (Not (Me.GetDocumentoSistemiErogantiRowDeletedEvent) Is Nothing) Then
                    RaiseEvent GetDocumentoSistemiErogantiRowDeleted(Me, New GetDocumentoSistemiErogantiRowChangeEvent(CType(e.Row,GetDocumentoSistemiErogantiRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleting(e)
                If (Not (Me.GetDocumentoSistemiErogantiRowDeletingEvent) Is Nothing) Then
                    RaiseEvent GetDocumentoSistemiErogantiRowDeleting(Me, New GetDocumentoSistemiErogantiRowChangeEvent(CType(e.Row,GetDocumentoSistemiErogantiRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub RemoveGetDocumentoSistemiErogantiRow(ByVal row As GetDocumentoSistemiErogantiRow)
                Me.Rows.Remove(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
                Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
                Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
                Dim ds As BackEndDataSet = New BackEndDataSet()
                Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any1.Namespace = "http://www.w3.org/2001/XMLSchema"
                any1.MinOccurs = New Decimal(0)
                any1.MaxOccurs = Decimal.MaxValue
                any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any1)
                Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
                any2.MinOccurs = New Decimal(1)
                any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any2)
                Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute1.Name = "namespace"
                attribute1.FixedValue = ds.Namespace
                type.Attributes.Add(attribute1)
                Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute2.Name = "tableTypeName"
                attribute2.FixedValue = "GetDocumentoSistemiErogantiDataTable"
                type.Attributes.Add(attribute2)
                type.Particle = sequence
                Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
                If xs.Contains(dsSchema.TargetNamespace) Then
                    Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Try 
                        Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                        dsSchema.Write(s1)
                        Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                        Do While schemas.MoveNext
                            schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                            s2.SetLength(0)
                            schema.Write(s2)
                            If (s1.Length = s2.Length) Then
                                s1.Position = 0
                                s2.Position = 0
                                
                                Do While ((s1.Position <> s1.Length)  _
                                            AndAlso (s1.ReadByte = s2.ReadByte))
                                    
                                    
                                Loop
                                If (s1.Position = s1.Length) Then
                                    Return type
                                End If
                            End If
                            
                        Loop
                    Finally
                        If (Not (s1) Is Nothing) Then
                            s1.Close
                        End If
                        If (Not (s2) Is Nothing) Then
                            s2.Close
                        End If
                    End Try
                End If
                xs.Add(dsSchema)
                Return type
            End Function
        End Class
        
        '''<summary>
        '''Represents the strongly named DataTable class.
        '''</summary>
        <Global.System.Serializable(),  _
         Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
        Partial Public Class UtentiDataTable
            Inherits Global.System.Data.TypedTableBase(Of UtentiRow)
            
            Private columnId As Global.System.Data.DataColumn
            
            Private columnIdRuolo As Global.System.Data.DataColumn
            
            Private columnUtente As Global.System.Data.DataColumn
            
            Private columnDescrizione As Global.System.Data.DataColumn
            
            Private columnRuolo As Global.System.Data.DataColumn
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub New()
                MyBase.New
                Me.TableName = "Utenti"
                Me.BeginInit
                Me.InitClass
                Me.EndInit
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Friend Sub New(ByVal table As Global.System.Data.DataTable)
                MyBase.New
                Me.TableName = table.TableName
                If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                    Me.CaseSensitive = table.CaseSensitive
                End If
                If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                    Me.Locale = table.Locale
                End If
                If (table.Namespace <> table.DataSet.Namespace) Then
                    Me.Namespace = table.Namespace
                End If
                Me.Prefix = table.Prefix
                Me.MinimumCapacity = table.MinimumCapacity
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
                MyBase.New(info, context)
                Me.InitVars
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property IdColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnId
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property IdRuoloColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnIdRuolo
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property UtenteColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnUtente
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property DescrizioneColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnDescrizione
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property RuoloColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnRuolo
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
             Global.System.ComponentModel.Browsable(false)>  _
            Public ReadOnly Property Count() As Integer
                Get
                    Return Me.Rows.Count
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Default ReadOnly Property Item(ByVal index As Integer) As UtentiRow
                Get
                    Return CType(Me.Rows(index),UtentiRow)
                End Get
            End Property
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event UtentiRowChanging As UtentiRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event UtentiRowChanged As UtentiRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event UtentiRowDeleting As UtentiRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event UtentiRowDeleted As UtentiRowChangeEventHandler
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Overloads Sub AddUtentiRow(ByVal row As UtentiRow)
                Me.Rows.Add(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Overloads Function AddUtentiRow(ByVal Id As System.Guid, ByVal IdRuolo As System.Guid, ByVal Utente As String, ByVal Descrizione As String, ByVal Ruolo As String) As UtentiRow
                Dim rowUtentiRow As UtentiRow = CType(Me.NewRow,UtentiRow)
                Dim columnValuesArray() As Object = New Object() {Id, IdRuolo, Utente, Descrizione, Ruolo}
                rowUtentiRow.ItemArray = columnValuesArray
                Me.Rows.Add(rowUtentiRow)
                Return rowUtentiRow
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Overrides Function Clone() As Global.System.Data.DataTable
                Dim cln As UtentiDataTable = CType(MyBase.Clone,UtentiDataTable)
                cln.InitVars
                Return cln
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
                Return New UtentiDataTable()
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Friend Sub InitVars()
                Me.columnId = MyBase.Columns("Id")
                Me.columnIdRuolo = MyBase.Columns("IdRuolo")
                Me.columnUtente = MyBase.Columns("Utente")
                Me.columnDescrizione = MyBase.Columns("Descrizione")
                Me.columnRuolo = MyBase.Columns("Ruolo")
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Private Sub InitClass()
                Me.columnId = New Global.System.Data.DataColumn("Id", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnId)
                Me.columnIdRuolo = New Global.System.Data.DataColumn("IdRuolo", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnIdRuolo)
                Me.columnUtente = New Global.System.Data.DataColumn("Utente", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnUtente)
                Me.columnDescrizione = New Global.System.Data.DataColumn("Descrizione", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnDescrizione)
                Me.columnRuolo = New Global.System.Data.DataColumn("Ruolo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnRuolo)
                Me.columnId.AllowDBNull = false
                Me.columnUtente.MaxLength = 128
                Me.columnDescrizione.MaxLength = 128
                Me.columnRuolo.MaxLength = 128
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function NewUtentiRow() As UtentiRow
                Return CType(Me.NewRow,UtentiRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
                Return New UtentiRow(builder)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Function GetRowType() As Global.System.Type
                Return GetType(UtentiRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanged(e)
                If (Not (Me.UtentiRowChangedEvent) Is Nothing) Then
                    RaiseEvent UtentiRowChanged(Me, New UtentiRowChangeEvent(CType(e.Row,UtentiRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanging(e)
                If (Not (Me.UtentiRowChangingEvent) Is Nothing) Then
                    RaiseEvent UtentiRowChanging(Me, New UtentiRowChangeEvent(CType(e.Row,UtentiRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleted(e)
                If (Not (Me.UtentiRowDeletedEvent) Is Nothing) Then
                    RaiseEvent UtentiRowDeleted(Me, New UtentiRowChangeEvent(CType(e.Row,UtentiRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleting(e)
                If (Not (Me.UtentiRowDeletingEvent) Is Nothing) Then
                    RaiseEvent UtentiRowDeleting(Me, New UtentiRowChangeEvent(CType(e.Row,UtentiRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub RemoveUtentiRow(ByVal row As UtentiRow)
                Me.Rows.Remove(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
                Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
                Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
                Dim ds As BackEndDataSet = New BackEndDataSet()
                Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any1.Namespace = "http://www.w3.org/2001/XMLSchema"
                any1.MinOccurs = New Decimal(0)
                any1.MaxOccurs = Decimal.MaxValue
                any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any1)
                Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
                any2.MinOccurs = New Decimal(1)
                any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any2)
                Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute1.Name = "namespace"
                attribute1.FixedValue = ds.Namespace
                type.Attributes.Add(attribute1)
                Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute2.Name = "tableTypeName"
                attribute2.FixedValue = "UtentiDataTable"
                type.Attributes.Add(attribute2)
                type.Particle = sequence
                Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
                If xs.Contains(dsSchema.TargetNamespace) Then
                    Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Try 
                        Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                        dsSchema.Write(s1)
                        Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                        Do While schemas.MoveNext
                            schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                            s2.SetLength(0)
                            schema.Write(s2)
                            If (s1.Length = s2.Length) Then
                                s1.Position = 0
                                s2.Position = 0
                                
                                Do While ((s1.Position <> s1.Length)  _
                                            AndAlso (s1.ReadByte = s2.ReadByte))
                                    
                                    
                                Loop
                                If (s1.Position = s1.Length) Then
                                    Return type
                                End If
                            End If
                            
                        Loop
                    Finally
                        If (Not (s1) Is Nothing) Then
                            s1.Close
                        End If
                        If (Not (s2) Is Nothing) Then
                            s2.Close
                        End If
                    End Try
                End If
                xs.Add(dsSchema)
                Return type
            End Function
        End Class
        
        '''<summary>
        '''Represents the strongly named DataTable class.
        '''</summary>
        <Global.System.Serializable(),  _
         Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
        Partial Public Class RuoliDataTable
            Inherits Global.System.Data.TypedTableBase(Of RuoliRow)
            
            Private columnId As Global.System.Data.DataColumn
            
            Private columnCodice As Global.System.Data.DataColumn
            
            Private columnDescrizione As Global.System.Data.DataColumn
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub New()
                MyBase.New
                Me.TableName = "Ruoli"
                Me.BeginInit
                Me.InitClass
                Me.EndInit
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Friend Sub New(ByVal table As Global.System.Data.DataTable)
                MyBase.New
                Me.TableName = table.TableName
                If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                    Me.CaseSensitive = table.CaseSensitive
                End If
                If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                    Me.Locale = table.Locale
                End If
                If (table.Namespace <> table.DataSet.Namespace) Then
                    Me.Namespace = table.Namespace
                End If
                Me.Prefix = table.Prefix
                Me.MinimumCapacity = table.MinimumCapacity
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
                MyBase.New(info, context)
                Me.InitVars
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property IdColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnId
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property CodiceColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnCodice
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property DescrizioneColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnDescrizione
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
             Global.System.ComponentModel.Browsable(false)>  _
            Public ReadOnly Property Count() As Integer
                Get
                    Return Me.Rows.Count
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Default ReadOnly Property Item(ByVal index As Integer) As RuoliRow
                Get
                    Return CType(Me.Rows(index),RuoliRow)
                End Get
            End Property
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event RuoliRowChanging As RuoliRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event RuoliRowChanged As RuoliRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event RuoliRowDeleting As RuoliRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event RuoliRowDeleted As RuoliRowChangeEventHandler
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Overloads Sub AddRuoliRow(ByVal row As RuoliRow)
                Me.Rows.Add(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Overloads Function AddRuoliRow(ByVal Id As System.Guid, ByVal Codice As String, ByVal Descrizione As String) As RuoliRow
                Dim rowRuoliRow As RuoliRow = CType(Me.NewRow,RuoliRow)
                Dim columnValuesArray() As Object = New Object() {Id, Codice, Descrizione}
                rowRuoliRow.ItemArray = columnValuesArray
                Me.Rows.Add(rowRuoliRow)
                Return rowRuoliRow
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function FindById(ByVal Id As System.Guid) As RuoliRow
                Return CType(Me.Rows.Find(New Object() {Id}),RuoliRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Overrides Function Clone() As Global.System.Data.DataTable
                Dim cln As RuoliDataTable = CType(MyBase.Clone,RuoliDataTable)
                cln.InitVars
                Return cln
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
                Return New RuoliDataTable()
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Friend Sub InitVars()
                Me.columnId = MyBase.Columns("Id")
                Me.columnCodice = MyBase.Columns("Codice")
                Me.columnDescrizione = MyBase.Columns("Descrizione")
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Private Sub InitClass()
                Me.columnId = New Global.System.Data.DataColumn("Id", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnId)
                Me.columnCodice = New Global.System.Data.DataColumn("Codice", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnCodice)
                Me.columnDescrizione = New Global.System.Data.DataColumn("Descrizione", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnDescrizione)
                Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnId}, true))
                Me.columnId.AllowDBNull = false
                Me.columnId.Unique = true
                Me.columnCodice.AllowDBNull = false
                Me.columnCodice.MaxLength = 16
                Me.columnDescrizione.MaxLength = 128
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function NewRuoliRow() As RuoliRow
                Return CType(Me.NewRow,RuoliRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
                Return New RuoliRow(builder)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Function GetRowType() As Global.System.Type
                Return GetType(RuoliRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanged(e)
                If (Not (Me.RuoliRowChangedEvent) Is Nothing) Then
                    RaiseEvent RuoliRowChanged(Me, New RuoliRowChangeEvent(CType(e.Row,RuoliRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanging(e)
                If (Not (Me.RuoliRowChangingEvent) Is Nothing) Then
                    RaiseEvent RuoliRowChanging(Me, New RuoliRowChangeEvent(CType(e.Row,RuoliRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleted(e)
                If (Not (Me.RuoliRowDeletedEvent) Is Nothing) Then
                    RaiseEvent RuoliRowDeleted(Me, New RuoliRowChangeEvent(CType(e.Row,RuoliRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleting(e)
                If (Not (Me.RuoliRowDeletingEvent) Is Nothing) Then
                    RaiseEvent RuoliRowDeleting(Me, New RuoliRowChangeEvent(CType(e.Row,RuoliRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub RemoveRuoliRow(ByVal row As RuoliRow)
                Me.Rows.Remove(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
                Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
                Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
                Dim ds As BackEndDataSet = New BackEndDataSet()
                Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any1.Namespace = "http://www.w3.org/2001/XMLSchema"
                any1.MinOccurs = New Decimal(0)
                any1.MaxOccurs = Decimal.MaxValue
                any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any1)
                Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
                any2.MinOccurs = New Decimal(1)
                any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any2)
                Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute1.Name = "namespace"
                attribute1.FixedValue = ds.Namespace
                type.Attributes.Add(attribute1)
                Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute2.Name = "tableTypeName"
                attribute2.FixedValue = "RuoliDataTable"
                type.Attributes.Add(attribute2)
                type.Particle = sequence
                Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
                If xs.Contains(dsSchema.TargetNamespace) Then
                    Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Try 
                        Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                        dsSchema.Write(s1)
                        Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                        Do While schemas.MoveNext
                            schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                            s2.SetLength(0)
                            schema.Write(s2)
                            If (s1.Length = s2.Length) Then
                                s1.Position = 0
                                s2.Position = 0
                                
                                Do While ((s1.Position <> s1.Length)  _
                                            AndAlso (s1.ReadByte = s2.ReadByte))
                                    
                                    
                                Loop
                                If (s1.Position = s1.Length) Then
                                    Return type
                                End If
                            End If
                            
                        Loop
                    Finally
                        If (Not (s1) Is Nothing) Then
                            s1.Close
                        End If
                        If (Not (s2) Is Nothing) Then
                            s2.Close
                        End If
                    End Try
                End If
                xs.Add(dsSchema)
                Return type
            End Function
        End Class
        
        '''<summary>
        '''Represents the strongly named DataTable class.
        '''</summary>
        <Global.System.Serializable(),  _
         Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
        Partial Public Class SACUtentiDataTable
            Inherits Global.System.Data.TypedTableBase(Of SACUtentiRow)
            
            Private columnId As Global.System.Data.DataColumn
            
            Private columnUtente As Global.System.Data.DataColumn
            
            Private columnDescrizione As Global.System.Data.DataColumn
            
            Private columnCognome As Global.System.Data.DataColumn
            
            Private columnNome As Global.System.Data.DataColumn
            
            Private columnCodiceFiscale As Global.System.Data.DataColumn
            
            Private columnMatricola As Global.System.Data.DataColumn
            
            Private columnEmail As Global.System.Data.DataColumn
            
            Private columnAttivo As Global.System.Data.DataColumn
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub New()
                MyBase.New
                Me.TableName = "SACUtenti"
                Me.BeginInit
                Me.InitClass
                Me.EndInit
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Friend Sub New(ByVal table As Global.System.Data.DataTable)
                MyBase.New
                Me.TableName = table.TableName
                If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                    Me.CaseSensitive = table.CaseSensitive
                End If
                If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                    Me.Locale = table.Locale
                End If
                If (table.Namespace <> table.DataSet.Namespace) Then
                    Me.Namespace = table.Namespace
                End If
                Me.Prefix = table.Prefix
                Me.MinimumCapacity = table.MinimumCapacity
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
                MyBase.New(info, context)
                Me.InitVars
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property IdColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnId
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property UtenteColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnUtente
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property DescrizioneColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnDescrizione
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property CognomeColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnCognome
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property NomeColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnNome
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property CodiceFiscaleColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnCodiceFiscale
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property MatricolaColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnMatricola
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property EmailColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnEmail
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property AttivoColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnAttivo
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
             Global.System.ComponentModel.Browsable(false)>  _
            Public ReadOnly Property Count() As Integer
                Get
                    Return Me.Rows.Count
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Default ReadOnly Property Item(ByVal index As Integer) As SACUtentiRow
                Get
                    Return CType(Me.Rows(index),SACUtentiRow)
                End Get
            End Property
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event SACUtentiRowChanging As SACUtentiRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event SACUtentiRowChanged As SACUtentiRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event SACUtentiRowDeleting As SACUtentiRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event SACUtentiRowDeleted As SACUtentiRowChangeEventHandler
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Overloads Sub AddSACUtentiRow(ByVal row As SACUtentiRow)
                Me.Rows.Add(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Overloads Function AddSACUtentiRow(ByVal Id As System.Guid, ByVal Utente As String, ByVal Descrizione As String, ByVal Cognome As String, ByVal Nome As String, ByVal CodiceFiscale As String, ByVal Matricola As String, ByVal Email As String, ByVal Attivo As Boolean) As SACUtentiRow
                Dim rowSACUtentiRow As SACUtentiRow = CType(Me.NewRow,SACUtentiRow)
                Dim columnValuesArray() As Object = New Object() {Id, Utente, Descrizione, Cognome, Nome, CodiceFiscale, Matricola, Email, Attivo}
                rowSACUtentiRow.ItemArray = columnValuesArray
                Me.Rows.Add(rowSACUtentiRow)
                Return rowSACUtentiRow
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function FindById(ByVal Id As System.Guid) As SACUtentiRow
                Return CType(Me.Rows.Find(New Object() {Id}),SACUtentiRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Overrides Function Clone() As Global.System.Data.DataTable
                Dim cln As SACUtentiDataTable = CType(MyBase.Clone,SACUtentiDataTable)
                cln.InitVars
                Return cln
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
                Return New SACUtentiDataTable()
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Friend Sub InitVars()
                Me.columnId = MyBase.Columns("Id")
                Me.columnUtente = MyBase.Columns("Utente")
                Me.columnDescrizione = MyBase.Columns("Descrizione")
                Me.columnCognome = MyBase.Columns("Cognome")
                Me.columnNome = MyBase.Columns("Nome")
                Me.columnCodiceFiscale = MyBase.Columns("CodiceFiscale")
                Me.columnMatricola = MyBase.Columns("Matricola")
                Me.columnEmail = MyBase.Columns("Email")
                Me.columnAttivo = MyBase.Columns("Attivo")
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Private Sub InitClass()
                Me.columnId = New Global.System.Data.DataColumn("Id", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnId)
                Me.columnUtente = New Global.System.Data.DataColumn("Utente", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnUtente)
                Me.columnDescrizione = New Global.System.Data.DataColumn("Descrizione", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnDescrizione)
                Me.columnCognome = New Global.System.Data.DataColumn("Cognome", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnCognome)
                Me.columnNome = New Global.System.Data.DataColumn("Nome", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnNome)
                Me.columnCodiceFiscale = New Global.System.Data.DataColumn("CodiceFiscale", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnCodiceFiscale)
                Me.columnMatricola = New Global.System.Data.DataColumn("Matricola", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnMatricola)
                Me.columnEmail = New Global.System.Data.DataColumn("Email", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnEmail)
                Me.columnAttivo = New Global.System.Data.DataColumn("Attivo", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnAttivo)
                Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnId}, true))
                Me.columnId.AllowDBNull = false
                Me.columnId.Unique = true
                Me.columnUtente.AllowDBNull = false
                Me.columnUtente.MaxLength = 128
                Me.columnDescrizione.MaxLength = 256
                Me.columnCognome.MaxLength = 64
                Me.columnNome.MaxLength = 64
                Me.columnCodiceFiscale.MaxLength = 16
                Me.columnMatricola.MaxLength = 64
                Me.columnEmail.MaxLength = 256
                Me.columnAttivo.AllowDBNull = false
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function NewSACUtentiRow() As SACUtentiRow
                Return CType(Me.NewRow,SACUtentiRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
                Return New SACUtentiRow(builder)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Function GetRowType() As Global.System.Type
                Return GetType(SACUtentiRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanged(e)
                If (Not (Me.SACUtentiRowChangedEvent) Is Nothing) Then
                    RaiseEvent SACUtentiRowChanged(Me, New SACUtentiRowChangeEvent(CType(e.Row,SACUtentiRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanging(e)
                If (Not (Me.SACUtentiRowChangingEvent) Is Nothing) Then
                    RaiseEvent SACUtentiRowChanging(Me, New SACUtentiRowChangeEvent(CType(e.Row,SACUtentiRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleted(e)
                If (Not (Me.SACUtentiRowDeletedEvent) Is Nothing) Then
                    RaiseEvent SACUtentiRowDeleted(Me, New SACUtentiRowChangeEvent(CType(e.Row,SACUtentiRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleting(e)
                If (Not (Me.SACUtentiRowDeletingEvent) Is Nothing) Then
                    RaiseEvent SACUtentiRowDeleting(Me, New SACUtentiRowChangeEvent(CType(e.Row,SACUtentiRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub RemoveSACUtentiRow(ByVal row As SACUtentiRow)
                Me.Rows.Remove(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
                Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
                Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
                Dim ds As BackEndDataSet = New BackEndDataSet()
                Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any1.Namespace = "http://www.w3.org/2001/XMLSchema"
                any1.MinOccurs = New Decimal(0)
                any1.MaxOccurs = Decimal.MaxValue
                any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any1)
                Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
                any2.MinOccurs = New Decimal(1)
                any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any2)
                Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute1.Name = "namespace"
                attribute1.FixedValue = ds.Namespace
                type.Attributes.Add(attribute1)
                Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute2.Name = "tableTypeName"
                attribute2.FixedValue = "SACUtentiDataTable"
                type.Attributes.Add(attribute2)
                type.Particle = sequence
                Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
                If xs.Contains(dsSchema.TargetNamespace) Then
                    Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Try 
                        Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                        dsSchema.Write(s1)
                        Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                        Do While schemas.MoveNext
                            schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                            s2.SetLength(0)
                            schema.Write(s2)
                            If (s1.Length = s2.Length) Then
                                s1.Position = 0
                                s2.Position = 0
                                
                                Do While ((s1.Position <> s1.Length)  _
                                            AndAlso (s1.ReadByte = s2.ReadByte))
                                    
                                    
                                Loop
                                If (s1.Position = s1.Length) Then
                                    Return type
                                End If
                            End If
                            
                        Loop
                    Finally
                        If (Not (s1) Is Nothing) Then
                            s1.Close
                        End If
                        If (Not (s2) Is Nothing) Then
                            s2.Close
                        End If
                    End Try
                End If
                xs.Add(dsSchema)
                Return type
            End Function
        End Class
        
        '''<summary>
        '''Represents the strongly named DataTable class.
        '''</summary>
        <Global.System.Serializable(),  _
         Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
        Partial Public Class TipiRefertoDataTable
            Inherits Global.System.Data.TypedTableBase(Of TipiRefertoRow)
            
            Private columnId As Global.System.Data.DataColumn
            
            Private columnSistemaErogante As Global.System.Data.DataColumn
            
            Private columnSpecialitaErogante As Global.System.Data.DataColumn
            
            Private columnDescrizione As Global.System.Data.DataColumn
            
            Private columnIcona As Global.System.Data.DataColumn
            
            Private columnOrdinamento As Global.System.Data.DataColumn
            
            Private columnAziendaErogante As Global.System.Data.DataColumn
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub New()
                MyBase.New
                Me.TableName = "TipiReferto"
                Me.BeginInit
                Me.InitClass
                Me.EndInit
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Friend Sub New(ByVal table As Global.System.Data.DataTable)
                MyBase.New
                Me.TableName = table.TableName
                If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                    Me.CaseSensitive = table.CaseSensitive
                End If
                If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                    Me.Locale = table.Locale
                End If
                If (table.Namespace <> table.DataSet.Namespace) Then
                    Me.Namespace = table.Namespace
                End If
                Me.Prefix = table.Prefix
                Me.MinimumCapacity = table.MinimumCapacity
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
                MyBase.New(info, context)
                Me.InitVars
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property IdColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnId
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property SistemaEroganteColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnSistemaErogante
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property SpecialitaEroganteColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnSpecialitaErogante
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property DescrizioneColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnDescrizione
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property IconaColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnIcona
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property OrdinamentoColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnOrdinamento
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property AziendaEroganteColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnAziendaErogante
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
             Global.System.ComponentModel.Browsable(false)>  _
            Public ReadOnly Property Count() As Integer
                Get
                    Return Me.Rows.Count
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Default ReadOnly Property Item(ByVal index As Integer) As TipiRefertoRow
                Get
                    Return CType(Me.Rows(index),TipiRefertoRow)
                End Get
            End Property
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event TipiRefertoRowChanging As TipiRefertoRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event TipiRefertoRowChanged As TipiRefertoRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event TipiRefertoRowDeleting As TipiRefertoRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event TipiRefertoRowDeleted As TipiRefertoRowChangeEventHandler
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Overloads Sub AddTipiRefertoRow(ByVal row As TipiRefertoRow)
                Me.Rows.Add(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Overloads Function AddTipiRefertoRow(ByVal Id As System.Guid, ByVal SistemaErogante As String, ByVal SpecialitaErogante As String, ByVal Descrizione As String, ByVal Icona() As Byte, ByVal Ordinamento As Integer, ByVal AziendaErogante As String) As TipiRefertoRow
                Dim rowTipiRefertoRow As TipiRefertoRow = CType(Me.NewRow,TipiRefertoRow)
                Dim columnValuesArray() As Object = New Object() {Id, SistemaErogante, SpecialitaErogante, Descrizione, Icona, Ordinamento, AziendaErogante}
                rowTipiRefertoRow.ItemArray = columnValuesArray
                Me.Rows.Add(rowTipiRefertoRow)
                Return rowTipiRefertoRow
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function FindById(ByVal Id As System.Guid) As TipiRefertoRow
                Return CType(Me.Rows.Find(New Object() {Id}),TipiRefertoRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Overrides Function Clone() As Global.System.Data.DataTable
                Dim cln As TipiRefertoDataTable = CType(MyBase.Clone,TipiRefertoDataTable)
                cln.InitVars
                Return cln
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
                Return New TipiRefertoDataTable()
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Friend Sub InitVars()
                Me.columnId = MyBase.Columns("Id")
                Me.columnSistemaErogante = MyBase.Columns("SistemaErogante")
                Me.columnSpecialitaErogante = MyBase.Columns("SpecialitaErogante")
                Me.columnDescrizione = MyBase.Columns("Descrizione")
                Me.columnIcona = MyBase.Columns("Icona")
                Me.columnOrdinamento = MyBase.Columns("Ordinamento")
                Me.columnAziendaErogante = MyBase.Columns("AziendaErogante")
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Private Sub InitClass()
                Me.columnId = New Global.System.Data.DataColumn("Id", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnId)
                Me.columnSistemaErogante = New Global.System.Data.DataColumn("SistemaErogante", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnSistemaErogante)
                Me.columnSpecialitaErogante = New Global.System.Data.DataColumn("SpecialitaErogante", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnSpecialitaErogante)
                Me.columnDescrizione = New Global.System.Data.DataColumn("Descrizione", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnDescrizione)
                Me.columnIcona = New Global.System.Data.DataColumn("Icona", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnIcona)
                Me.columnOrdinamento = New Global.System.Data.DataColumn("Ordinamento", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnOrdinamento)
                Me.columnAziendaErogante = New Global.System.Data.DataColumn("AziendaErogante", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnAziendaErogante)
                Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnId}, true))
                Me.columnId.AllowDBNull = false
                Me.columnId.Unique = true
                Me.columnSistemaErogante.AllowDBNull = false
                Me.columnSistemaErogante.MaxLength = 16
                Me.columnSpecialitaErogante.MaxLength = 64
                Me.columnDescrizione.AllowDBNull = false
                Me.columnDescrizione.MaxLength = 128
                Me.columnIcona.ReadOnly = true
                Me.columnOrdinamento.AllowDBNull = false
                Me.columnAziendaErogante.AllowDBNull = false
                Me.columnAziendaErogante.MaxLength = 16
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function NewTipiRefertoRow() As TipiRefertoRow
                Return CType(Me.NewRow,TipiRefertoRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
                Return New TipiRefertoRow(builder)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Function GetRowType() As Global.System.Type
                Return GetType(TipiRefertoRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanged(e)
                If (Not (Me.TipiRefertoRowChangedEvent) Is Nothing) Then
                    RaiseEvent TipiRefertoRowChanged(Me, New TipiRefertoRowChangeEvent(CType(e.Row,TipiRefertoRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanging(e)
                If (Not (Me.TipiRefertoRowChangingEvent) Is Nothing) Then
                    RaiseEvent TipiRefertoRowChanging(Me, New TipiRefertoRowChangeEvent(CType(e.Row,TipiRefertoRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleted(e)
                If (Not (Me.TipiRefertoRowDeletedEvent) Is Nothing) Then
                    RaiseEvent TipiRefertoRowDeleted(Me, New TipiRefertoRowChangeEvent(CType(e.Row,TipiRefertoRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleting(e)
                If (Not (Me.TipiRefertoRowDeletingEvent) Is Nothing) Then
                    RaiseEvent TipiRefertoRowDeleting(Me, New TipiRefertoRowChangeEvent(CType(e.Row,TipiRefertoRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub RemoveTipiRefertoRow(ByVal row As TipiRefertoRow)
                Me.Rows.Remove(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
                Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
                Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
                Dim ds As BackEndDataSet = New BackEndDataSet()
                Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any1.Namespace = "http://www.w3.org/2001/XMLSchema"
                any1.MinOccurs = New Decimal(0)
                any1.MaxOccurs = Decimal.MaxValue
                any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any1)
                Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
                any2.MinOccurs = New Decimal(1)
                any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any2)
                Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute1.Name = "namespace"
                attribute1.FixedValue = ds.Namespace
                type.Attributes.Add(attribute1)
                Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute2.Name = "tableTypeName"
                attribute2.FixedValue = "TipiRefertoDataTable"
                type.Attributes.Add(attribute2)
                type.Particle = sequence
                Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
                If xs.Contains(dsSchema.TargetNamespace) Then
                    Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Try 
                        Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                        dsSchema.Write(s1)
                        Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                        Do While schemas.MoveNext
                            schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                            s2.SetLength(0)
                            schema.Write(s2)
                            If (s1.Length = s2.Length) Then
                                s1.Position = 0
                                s2.Position = 0
                                
                                Do While ((s1.Position <> s1.Length)  _
                                            AndAlso (s1.ReadByte = s2.ReadByte))
                                    
                                    
                                Loop
                                If (s1.Position = s1.Length) Then
                                    Return type
                                End If
                            End If
                            
                        Loop
                    Finally
                        If (Not (s1) Is Nothing) Then
                            s1.Close
                        End If
                        If (Not (s2) Is Nothing) Then
                            s2.Close
                        End If
                    End Try
                End If
                xs.Add(dsSchema)
                Return type
            End Function
        End Class
        
        '''<summary>
        '''Represents the strongly named DataTable class.
        '''</summary>
        <Global.System.Serializable(),  _
         Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
        Partial Public Class BevsSistemiErogantiDataTable
            Inherits Global.System.Data.TypedTableBase(Of BevsSistemiErogantiRow)
            
            Private columnId As Global.System.Data.DataColumn
            
            Private columnAziendaErogante As Global.System.Data.DataColumn
            
            Private columnSistemaErogante As Global.System.Data.DataColumn
            
            Private columnDescrizione As Global.System.Data.DataColumn
            
            Private columnRuoloVisualizzazione As Global.System.Data.DataColumn
            
            Private columnEmailControlloQualitaPassivo As Global.System.Data.DataColumn
            
            Private columnTipoReferti As Global.System.Data.DataColumn
            
            Private columnTipoRicoveri As Global.System.Data.DataColumn
            
            Private columnTipoNoteAnamnestiche As Global.System.Data.DataColumn
            
            Private columnLoginToSac As Global.System.Data.DataColumn
            
            Private columnRuoloManager As Global.System.Data.DataColumn
            
            Private columnGeneraAnteprimaReferto As Global.System.Data.DataColumn
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub New()
                MyBase.New
                Me.TableName = "BevsSistemiEroganti"
                Me.BeginInit
                Me.InitClass
                Me.EndInit
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Friend Sub New(ByVal table As Global.System.Data.DataTable)
                MyBase.New
                Me.TableName = table.TableName
                If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                    Me.CaseSensitive = table.CaseSensitive
                End If
                If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                    Me.Locale = table.Locale
                End If
                If (table.Namespace <> table.DataSet.Namespace) Then
                    Me.Namespace = table.Namespace
                End If
                Me.Prefix = table.Prefix
                Me.MinimumCapacity = table.MinimumCapacity
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
                MyBase.New(info, context)
                Me.InitVars
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property IdColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnId
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property AziendaEroganteColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnAziendaErogante
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property SistemaEroganteColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnSistemaErogante
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property DescrizioneColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnDescrizione
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property RuoloVisualizzazioneColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnRuoloVisualizzazione
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property EmailControlloQualitaPassivoColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnEmailControlloQualitaPassivo
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property TipoRefertiColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnTipoReferti
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property TipoRicoveriColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnTipoRicoveri
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property TipoNoteAnamnesticheColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnTipoNoteAnamnestiche
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property LoginToSacColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnLoginToSac
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property RuoloManagerColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnRuoloManager
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property GeneraAnteprimaRefertoColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnGeneraAnteprimaReferto
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
             Global.System.ComponentModel.Browsable(false)>  _
            Public ReadOnly Property Count() As Integer
                Get
                    Return Me.Rows.Count
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Default ReadOnly Property Item(ByVal index As Integer) As BevsSistemiErogantiRow
                Get
                    Return CType(Me.Rows(index),BevsSistemiErogantiRow)
                End Get
            End Property
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event BevsSistemiErogantiRowChanging As BevsSistemiErogantiRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event BevsSistemiErogantiRowChanged As BevsSistemiErogantiRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event BevsSistemiErogantiRowDeleting As BevsSistemiErogantiRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event BevsSistemiErogantiRowDeleted As BevsSistemiErogantiRowChangeEventHandler
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Overloads Sub AddBevsSistemiErogantiRow(ByVal row As BevsSistemiErogantiRow)
                Me.Rows.Add(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Overloads Function AddBevsSistemiErogantiRow(ByVal Id As System.Guid, ByVal AziendaErogante As String, ByVal SistemaErogante As String, ByVal Descrizione As String, ByVal RuoloVisualizzazione As String, ByVal EmailControlloQualitaPassivo As String, ByVal TipoReferti As Boolean, ByVal TipoRicoveri As Boolean, ByVal TipoNoteAnamnestiche As Boolean, ByVal LoginToSac As String, ByVal RuoloManager As String, ByVal GeneraAnteprimaReferto As Boolean) As BevsSistemiErogantiRow
                Dim rowBevsSistemiErogantiRow As BevsSistemiErogantiRow = CType(Me.NewRow,BevsSistemiErogantiRow)
                Dim columnValuesArray() As Object = New Object() {Id, AziendaErogante, SistemaErogante, Descrizione, RuoloVisualizzazione, EmailControlloQualitaPassivo, TipoReferti, TipoRicoveri, TipoNoteAnamnestiche, LoginToSac, RuoloManager, GeneraAnteprimaReferto}
                rowBevsSistemiErogantiRow.ItemArray = columnValuesArray
                Me.Rows.Add(rowBevsSistemiErogantiRow)
                Return rowBevsSistemiErogantiRow
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function FindById(ByVal Id As System.Guid) As BevsSistemiErogantiRow
                Return CType(Me.Rows.Find(New Object() {Id}),BevsSistemiErogantiRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Overrides Function Clone() As Global.System.Data.DataTable
                Dim cln As BevsSistemiErogantiDataTable = CType(MyBase.Clone,BevsSistemiErogantiDataTable)
                cln.InitVars
                Return cln
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
                Return New BevsSistemiErogantiDataTable()
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Friend Sub InitVars()
                Me.columnId = MyBase.Columns("Id")
                Me.columnAziendaErogante = MyBase.Columns("AziendaErogante")
                Me.columnSistemaErogante = MyBase.Columns("SistemaErogante")
                Me.columnDescrizione = MyBase.Columns("Descrizione")
                Me.columnRuoloVisualizzazione = MyBase.Columns("RuoloVisualizzazione")
                Me.columnEmailControlloQualitaPassivo = MyBase.Columns("EmailControlloQualitaPassivo")
                Me.columnTipoReferti = MyBase.Columns("TipoReferti")
                Me.columnTipoRicoveri = MyBase.Columns("TipoRicoveri")
                Me.columnTipoNoteAnamnestiche = MyBase.Columns("TipoNoteAnamnestiche")
                Me.columnLoginToSac = MyBase.Columns("LoginToSac")
                Me.columnRuoloManager = MyBase.Columns("RuoloManager")
                Me.columnGeneraAnteprimaReferto = MyBase.Columns("GeneraAnteprimaReferto")
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Private Sub InitClass()
                Me.columnId = New Global.System.Data.DataColumn("Id", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnId)
                Me.columnAziendaErogante = New Global.System.Data.DataColumn("AziendaErogante", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnAziendaErogante)
                Me.columnSistemaErogante = New Global.System.Data.DataColumn("SistemaErogante", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnSistemaErogante)
                Me.columnDescrizione = New Global.System.Data.DataColumn("Descrizione", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnDescrizione)
                Me.columnRuoloVisualizzazione = New Global.System.Data.DataColumn("RuoloVisualizzazione", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnRuoloVisualizzazione)
                Me.columnEmailControlloQualitaPassivo = New Global.System.Data.DataColumn("EmailControlloQualitaPassivo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnEmailControlloQualitaPassivo)
                Me.columnTipoReferti = New Global.System.Data.DataColumn("TipoReferti", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnTipoReferti)
                Me.columnTipoRicoveri = New Global.System.Data.DataColumn("TipoRicoveri", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnTipoRicoveri)
                Me.columnTipoNoteAnamnestiche = New Global.System.Data.DataColumn("TipoNoteAnamnestiche", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnTipoNoteAnamnestiche)
                Me.columnLoginToSac = New Global.System.Data.DataColumn("LoginToSac", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnLoginToSac)
                Me.columnRuoloManager = New Global.System.Data.DataColumn("RuoloManager", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnRuoloManager)
                Me.columnGeneraAnteprimaReferto = New Global.System.Data.DataColumn("GeneraAnteprimaReferto", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnGeneraAnteprimaReferto)
                Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnId}, true))
                Me.columnId.AllowDBNull = false
                Me.columnId.Unique = true
                Me.columnAziendaErogante.AllowDBNull = false
                Me.columnAziendaErogante.MaxLength = 16
                Me.columnSistemaErogante.AllowDBNull = false
                Me.columnSistemaErogante.MaxLength = 16
                Me.columnDescrizione.MaxLength = 128
                Me.columnRuoloVisualizzazione.MaxLength = 128
                Me.columnEmailControlloQualitaPassivo.MaxLength = 128
                Me.columnTipoReferti.AllowDBNull = false
                Me.columnTipoRicoveri.AllowDBNull = false
                Me.columnTipoNoteAnamnestiche.AllowDBNull = false
                Me.columnLoginToSac.MaxLength = 64
                Me.columnRuoloManager.MaxLength = 128
                Me.columnGeneraAnteprimaReferto.AllowDBNull = false
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function NewBevsSistemiErogantiRow() As BevsSistemiErogantiRow
                Return CType(Me.NewRow,BevsSistemiErogantiRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
                Return New BevsSistemiErogantiRow(builder)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Function GetRowType() As Global.System.Type
                Return GetType(BevsSistemiErogantiRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanged(e)
                If (Not (Me.BevsSistemiErogantiRowChangedEvent) Is Nothing) Then
                    RaiseEvent BevsSistemiErogantiRowChanged(Me, New BevsSistemiErogantiRowChangeEvent(CType(e.Row,BevsSistemiErogantiRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanging(e)
                If (Not (Me.BevsSistemiErogantiRowChangingEvent) Is Nothing) Then
                    RaiseEvent BevsSistemiErogantiRowChanging(Me, New BevsSistemiErogantiRowChangeEvent(CType(e.Row,BevsSistemiErogantiRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleted(e)
                If (Not (Me.BevsSistemiErogantiRowDeletedEvent) Is Nothing) Then
                    RaiseEvent BevsSistemiErogantiRowDeleted(Me, New BevsSistemiErogantiRowChangeEvent(CType(e.Row,BevsSistemiErogantiRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleting(e)
                If (Not (Me.BevsSistemiErogantiRowDeletingEvent) Is Nothing) Then
                    RaiseEvent BevsSistemiErogantiRowDeleting(Me, New BevsSistemiErogantiRowChangeEvent(CType(e.Row,BevsSistemiErogantiRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub RemoveBevsSistemiErogantiRow(ByVal row As BevsSistemiErogantiRow)
                Me.Rows.Remove(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
                Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
                Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
                Dim ds As BackEndDataSet = New BackEndDataSet()
                Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any1.Namespace = "http://www.w3.org/2001/XMLSchema"
                any1.MinOccurs = New Decimal(0)
                any1.MaxOccurs = Decimal.MaxValue
                any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any1)
                Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
                any2.MinOccurs = New Decimal(1)
                any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any2)
                Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute1.Name = "namespace"
                attribute1.FixedValue = ds.Namespace
                type.Attributes.Add(attribute1)
                Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute2.Name = "tableTypeName"
                attribute2.FixedValue = "BevsSistemiErogantiDataTable"
                type.Attributes.Add(attribute2)
                type.Particle = sequence
                Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
                If xs.Contains(dsSchema.TargetNamespace) Then
                    Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Try 
                        Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                        dsSchema.Write(s1)
                        Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                        Do While schemas.MoveNext
                            schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                            s2.SetLength(0)
                            schema.Write(s2)
                            If (s1.Length = s2.Length) Then
                                s1.Position = 0
                                s2.Position = 0
                                
                                Do While ((s1.Position <> s1.Length)  _
                                            AndAlso (s1.ReadByte = s2.ReadByte))
                                    
                                    
                                Loop
                                If (s1.Position = s1.Length) Then
                                    Return type
                                End If
                            End If
                            
                        Loop
                    Finally
                        If (Not (s1) Is Nothing) Then
                            s1.Close
                        End If
                        If (Not (s2) Is Nothing) Then
                            s2.Close
                        End If
                    End Try
                End If
                xs.Add(dsSchema)
                Return type
            End Function
        End Class
        
        '''<summary>
        '''Represents the strongly named DataTable class.
        '''</summary>
        <Global.System.Serializable(),  _
         Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
        Partial Public Class MMGSistemiAbilitatiCercaDataTable
            Inherits Global.System.Data.TypedTableBase(Of MMGSistemiAbilitatiCercaRow)
            
            Private columnId As Global.System.Data.DataColumn
            
            Private columnSistemaErogante As Global.System.Data.DataColumn
            
            Private columnSpecialitaErogante As Global.System.Data.DataColumn
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub New()
                MyBase.New
                Me.TableName = "MMGSistemiAbilitatiCerca"
                Me.BeginInit
                Me.InitClass
                Me.EndInit
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Friend Sub New(ByVal table As Global.System.Data.DataTable)
                MyBase.New
                Me.TableName = table.TableName
                If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                    Me.CaseSensitive = table.CaseSensitive
                End If
                If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                    Me.Locale = table.Locale
                End If
                If (table.Namespace <> table.DataSet.Namespace) Then
                    Me.Namespace = table.Namespace
                End If
                Me.Prefix = table.Prefix
                Me.MinimumCapacity = table.MinimumCapacity
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
                MyBase.New(info, context)
                Me.InitVars
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property IdColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnId
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property SistemaEroganteColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnSistemaErogante
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property SpecialitaEroganteColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnSpecialitaErogante
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
             Global.System.ComponentModel.Browsable(false)>  _
            Public ReadOnly Property Count() As Integer
                Get
                    Return Me.Rows.Count
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Default ReadOnly Property Item(ByVal index As Integer) As MMGSistemiAbilitatiCercaRow
                Get
                    Return CType(Me.Rows(index),MMGSistemiAbilitatiCercaRow)
                End Get
            End Property
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event MMGSistemiAbilitatiCercaRowChanging As MMGSistemiAbilitatiCercaRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event MMGSistemiAbilitatiCercaRowChanged As MMGSistemiAbilitatiCercaRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event MMGSistemiAbilitatiCercaRowDeleting As MMGSistemiAbilitatiCercaRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event MMGSistemiAbilitatiCercaRowDeleted As MMGSistemiAbilitatiCercaRowChangeEventHandler
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Overloads Sub AddMMGSistemiAbilitatiCercaRow(ByVal row As MMGSistemiAbilitatiCercaRow)
                Me.Rows.Add(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Overloads Function AddMMGSistemiAbilitatiCercaRow(ByVal Id As System.Guid, ByVal SistemaErogante As String, ByVal SpecialitaErogante As String) As MMGSistemiAbilitatiCercaRow
                Dim rowMMGSistemiAbilitatiCercaRow As MMGSistemiAbilitatiCercaRow = CType(Me.NewRow,MMGSistemiAbilitatiCercaRow)
                Dim columnValuesArray() As Object = New Object() {Id, SistemaErogante, SpecialitaErogante}
                rowMMGSistemiAbilitatiCercaRow.ItemArray = columnValuesArray
                Me.Rows.Add(rowMMGSistemiAbilitatiCercaRow)
                Return rowMMGSistemiAbilitatiCercaRow
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function FindById(ByVal Id As System.Guid) As MMGSistemiAbilitatiCercaRow
                Return CType(Me.Rows.Find(New Object() {Id}),MMGSistemiAbilitatiCercaRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Overrides Function Clone() As Global.System.Data.DataTable
                Dim cln As MMGSistemiAbilitatiCercaDataTable = CType(MyBase.Clone,MMGSistemiAbilitatiCercaDataTable)
                cln.InitVars
                Return cln
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
                Return New MMGSistemiAbilitatiCercaDataTable()
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Friend Sub InitVars()
                Me.columnId = MyBase.Columns("Id")
                Me.columnSistemaErogante = MyBase.Columns("SistemaErogante")
                Me.columnSpecialitaErogante = MyBase.Columns("SpecialitaErogante")
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Private Sub InitClass()
                Me.columnId = New Global.System.Data.DataColumn("Id", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnId)
                Me.columnSistemaErogante = New Global.System.Data.DataColumn("SistemaErogante", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnSistemaErogante)
                Me.columnSpecialitaErogante = New Global.System.Data.DataColumn("SpecialitaErogante", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnSpecialitaErogante)
                Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnId}, true))
                Me.columnId.AllowDBNull = false
                Me.columnId.Unique = true
                Me.columnSistemaErogante.AllowDBNull = false
                Me.columnSistemaErogante.MaxLength = 16
                Me.columnSpecialitaErogante.MaxLength = 64
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function NewMMGSistemiAbilitatiCercaRow() As MMGSistemiAbilitatiCercaRow
                Return CType(Me.NewRow,MMGSistemiAbilitatiCercaRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
                Return New MMGSistemiAbilitatiCercaRow(builder)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Function GetRowType() As Global.System.Type
                Return GetType(MMGSistemiAbilitatiCercaRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanged(e)
                If (Not (Me.MMGSistemiAbilitatiCercaRowChangedEvent) Is Nothing) Then
                    RaiseEvent MMGSistemiAbilitatiCercaRowChanged(Me, New MMGSistemiAbilitatiCercaRowChangeEvent(CType(e.Row,MMGSistemiAbilitatiCercaRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanging(e)
                If (Not (Me.MMGSistemiAbilitatiCercaRowChangingEvent) Is Nothing) Then
                    RaiseEvent MMGSistemiAbilitatiCercaRowChanging(Me, New MMGSistemiAbilitatiCercaRowChangeEvent(CType(e.Row,MMGSistemiAbilitatiCercaRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleted(e)
                If (Not (Me.MMGSistemiAbilitatiCercaRowDeletedEvent) Is Nothing) Then
                    RaiseEvent MMGSistemiAbilitatiCercaRowDeleted(Me, New MMGSistemiAbilitatiCercaRowChangeEvent(CType(e.Row,MMGSistemiAbilitatiCercaRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleting(e)
                If (Not (Me.MMGSistemiAbilitatiCercaRowDeletingEvent) Is Nothing) Then
                    RaiseEvent MMGSistemiAbilitatiCercaRowDeleting(Me, New MMGSistemiAbilitatiCercaRowChangeEvent(CType(e.Row,MMGSistemiAbilitatiCercaRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub RemoveMMGSistemiAbilitatiCercaRow(ByVal row As MMGSistemiAbilitatiCercaRow)
                Me.Rows.Remove(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
                Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
                Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
                Dim ds As BackEndDataSet = New BackEndDataSet()
                Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any1.Namespace = "http://www.w3.org/2001/XMLSchema"
                any1.MinOccurs = New Decimal(0)
                any1.MaxOccurs = Decimal.MaxValue
                any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any1)
                Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
                any2.MinOccurs = New Decimal(1)
                any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any2)
                Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute1.Name = "namespace"
                attribute1.FixedValue = ds.Namespace
                type.Attributes.Add(attribute1)
                Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute2.Name = "tableTypeName"
                attribute2.FixedValue = "MMGSistemiAbilitatiCercaDataTable"
                type.Attributes.Add(attribute2)
                type.Particle = sequence
                Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
                If xs.Contains(dsSchema.TargetNamespace) Then
                    Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Try 
                        Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                        dsSchema.Write(s1)
                        Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                        Do While schemas.MoveNext
                            schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                            s2.SetLength(0)
                            schema.Write(s2)
                            If (s1.Length = s2.Length) Then
                                s1.Position = 0
                                s2.Position = 0
                                
                                Do While ((s1.Position <> s1.Length)  _
                                            AndAlso (s1.ReadByte = s2.ReadByte))
                                    
                                    
                                Loop
                                If (s1.Position = s1.Length) Then
                                    Return type
                                End If
                            End If
                            
                        Loop
                    Finally
                        If (Not (s1) Is Nothing) Then
                            s1.Close
                        End If
                        If (Not (s2) Is Nothing) Then
                            s2.Close
                        End If
                    End Try
                End If
                xs.Add(dsSchema)
                Return type
            End Function
        End Class
        
        '''<summary>
        '''Represents the strongly named DataTable class.
        '''</summary>
        <Global.System.Serializable(),  _
         Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
        Partial Public Class BevsSistemiErogantiCodiciComboDataTable
            Inherits Global.System.Data.TypedTableBase(Of BevsSistemiErogantiCodiciComboRow)
            
            Private columnCodice As Global.System.Data.DataColumn
            
            Private columnDescrizione As Global.System.Data.DataColumn
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub New()
                MyBase.New
                Me.TableName = "BevsSistemiErogantiCodiciCombo"
                Me.BeginInit
                Me.InitClass
                Me.EndInit
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Friend Sub New(ByVal table As Global.System.Data.DataTable)
                MyBase.New
                Me.TableName = table.TableName
                If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                    Me.CaseSensitive = table.CaseSensitive
                End If
                If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                    Me.Locale = table.Locale
                End If
                If (table.Namespace <> table.DataSet.Namespace) Then
                    Me.Namespace = table.Namespace
                End If
                Me.Prefix = table.Prefix
                Me.MinimumCapacity = table.MinimumCapacity
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
                MyBase.New(info, context)
                Me.InitVars
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property CodiceColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnCodice
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property DescrizioneColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnDescrizione
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
             Global.System.ComponentModel.Browsable(false)>  _
            Public ReadOnly Property Count() As Integer
                Get
                    Return Me.Rows.Count
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Default ReadOnly Property Item(ByVal index As Integer) As BevsSistemiErogantiCodiciComboRow
                Get
                    Return CType(Me.Rows(index),BevsSistemiErogantiCodiciComboRow)
                End Get
            End Property
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event BevsSistemiErogantiCodiciComboRowChanging As BevsSistemiErogantiCodiciComboRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event BevsSistemiErogantiCodiciComboRowChanged As BevsSistemiErogantiCodiciComboRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event BevsSistemiErogantiCodiciComboRowDeleting As BevsSistemiErogantiCodiciComboRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event BevsSistemiErogantiCodiciComboRowDeleted As BevsSistemiErogantiCodiciComboRowChangeEventHandler
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Overloads Sub AddBevsSistemiErogantiCodiciComboRow(ByVal row As BevsSistemiErogantiCodiciComboRow)
                Me.Rows.Add(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Overloads Function AddBevsSistemiErogantiCodiciComboRow(ByVal Codice As String, ByVal Descrizione As String) As BevsSistemiErogantiCodiciComboRow
                Dim rowBevsSistemiErogantiCodiciComboRow As BevsSistemiErogantiCodiciComboRow = CType(Me.NewRow,BevsSistemiErogantiCodiciComboRow)
                Dim columnValuesArray() As Object = New Object() {Codice, Descrizione}
                rowBevsSistemiErogantiCodiciComboRow.ItemArray = columnValuesArray
                Me.Rows.Add(rowBevsSistemiErogantiCodiciComboRow)
                Return rowBevsSistemiErogantiCodiciComboRow
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Overrides Function Clone() As Global.System.Data.DataTable
                Dim cln As BevsSistemiErogantiCodiciComboDataTable = CType(MyBase.Clone,BevsSistemiErogantiCodiciComboDataTable)
                cln.InitVars
                Return cln
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
                Return New BevsSistemiErogantiCodiciComboDataTable()
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Friend Sub InitVars()
                Me.columnCodice = MyBase.Columns("Codice")
                Me.columnDescrizione = MyBase.Columns("Descrizione")
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Private Sub InitClass()
                Me.columnCodice = New Global.System.Data.DataColumn("Codice", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnCodice)
                Me.columnDescrizione = New Global.System.Data.DataColumn("Descrizione", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnDescrizione)
                Me.columnCodice.AllowDBNull = false
                Me.columnCodice.MaxLength = 16
                Me.columnDescrizione.AllowDBNull = false
                Me.columnDescrizione.MaxLength = 16
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function NewBevsSistemiErogantiCodiciComboRow() As BevsSistemiErogantiCodiciComboRow
                Return CType(Me.NewRow,BevsSistemiErogantiCodiciComboRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
                Return New BevsSistemiErogantiCodiciComboRow(builder)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Function GetRowType() As Global.System.Type
                Return GetType(BevsSistemiErogantiCodiciComboRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanged(e)
                If (Not (Me.BevsSistemiErogantiCodiciComboRowChangedEvent) Is Nothing) Then
                    RaiseEvent BevsSistemiErogantiCodiciComboRowChanged(Me, New BevsSistemiErogantiCodiciComboRowChangeEvent(CType(e.Row,BevsSistemiErogantiCodiciComboRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanging(e)
                If (Not (Me.BevsSistemiErogantiCodiciComboRowChangingEvent) Is Nothing) Then
                    RaiseEvent BevsSistemiErogantiCodiciComboRowChanging(Me, New BevsSistemiErogantiCodiciComboRowChangeEvent(CType(e.Row,BevsSistemiErogantiCodiciComboRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleted(e)
                If (Not (Me.BevsSistemiErogantiCodiciComboRowDeletedEvent) Is Nothing) Then
                    RaiseEvent BevsSistemiErogantiCodiciComboRowDeleted(Me, New BevsSistemiErogantiCodiciComboRowChangeEvent(CType(e.Row,BevsSistemiErogantiCodiciComboRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleting(e)
                If (Not (Me.BevsSistemiErogantiCodiciComboRowDeletingEvent) Is Nothing) Then
                    RaiseEvent BevsSistemiErogantiCodiciComboRowDeleting(Me, New BevsSistemiErogantiCodiciComboRowChangeEvent(CType(e.Row,BevsSistemiErogantiCodiciComboRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub RemoveBevsSistemiErogantiCodiciComboRow(ByVal row As BevsSistemiErogantiCodiciComboRow)
                Me.Rows.Remove(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
                Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
                Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
                Dim ds As BackEndDataSet = New BackEndDataSet()
                Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any1.Namespace = "http://www.w3.org/2001/XMLSchema"
                any1.MinOccurs = New Decimal(0)
                any1.MaxOccurs = Decimal.MaxValue
                any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any1)
                Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
                any2.MinOccurs = New Decimal(1)
                any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any2)
                Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute1.Name = "namespace"
                attribute1.FixedValue = ds.Namespace
                type.Attributes.Add(attribute1)
                Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute2.Name = "tableTypeName"
                attribute2.FixedValue = "BevsSistemiErogantiCodiciComboDataTable"
                type.Attributes.Add(attribute2)
                type.Particle = sequence
                Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
                If xs.Contains(dsSchema.TargetNamespace) Then
                    Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Try 
                        Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                        dsSchema.Write(s1)
                        Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                        Do While schemas.MoveNext
                            schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                            s2.SetLength(0)
                            schema.Write(s2)
                            If (s1.Length = s2.Length) Then
                                s1.Position = 0
                                s2.Position = 0
                                
                                Do While ((s1.Position <> s1.Length)  _
                                            AndAlso (s1.ReadByte = s2.ReadByte))
                                    
                                    
                                Loop
                                If (s1.Position = s1.Length) Then
                                    Return type
                                End If
                            End If
                            
                        Loop
                    Finally
                        If (Not (s1) Is Nothing) Then
                            s1.Close
                        End If
                        If (Not (s2) Is Nothing) Then
                            s2.Close
                        End If
                    End Try
                End If
                xs.Add(dsSchema)
                Return type
            End Function
        End Class
        
        '''<summary>
        '''Represents the strongly named DataTable class.
        '''</summary>
        <Global.System.Serializable(),  _
         Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
        Partial Public Class BeRicoveriListaDataTable
            Inherits Global.System.Data.TypedTableBase(Of BeRicoveriListaRow)
            
            Private columnID As Global.System.Data.DataColumn
            
            Private columnIdPaziente As Global.System.Data.DataColumn
            
            Private columnDataInserimento As Global.System.Data.DataColumn
            
            Private columnDataModifica As Global.System.Data.DataColumn
            
            Private columnAziendaErogante As Global.System.Data.DataColumn
            
            Private columnSistemaErogante As Global.System.Data.DataColumn
            
            Private columnRepartoErogante As Global.System.Data.DataColumn
            
            Private columnNumeroNosologico As Global.System.Data.DataColumn
            
            Private columnCognome As Global.System.Data.DataColumn
            
            Private columnNome As Global.System.Data.DataColumn
            
            Private columnCodiceFiscale As Global.System.Data.DataColumn
            
            Private columnDataNascita As Global.System.Data.DataColumn
            
            Private columnComuneNascita As Global.System.Data.DataColumn
            
            Private columnCodiceSanitario As Global.System.Data.DataColumn
            
            Private columnRepartoErogante1 As Global.System.Data.DataColumn
            
            Private columnStatoCodice As Global.System.Data.DataColumn
            
            Private columnCodiceOscuramento As Global.System.Data.DataColumn
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub New()
                MyBase.New
                Me.TableName = "BeRicoveriLista"
                Me.BeginInit
                Me.InitClass
                Me.EndInit
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Friend Sub New(ByVal table As Global.System.Data.DataTable)
                MyBase.New
                Me.TableName = table.TableName
                If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                    Me.CaseSensitive = table.CaseSensitive
                End If
                If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                    Me.Locale = table.Locale
                End If
                If (table.Namespace <> table.DataSet.Namespace) Then
                    Me.Namespace = table.Namespace
                End If
                Me.Prefix = table.Prefix
                Me.MinimumCapacity = table.MinimumCapacity
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
                MyBase.New(info, context)
                Me.InitVars
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property IDColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnID
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property IdPazienteColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnIdPaziente
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property DataInserimentoColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnDataInserimento
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property DataModificaColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnDataModifica
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property AziendaEroganteColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnAziendaErogante
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property SistemaEroganteColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnSistemaErogante
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property RepartoEroganteColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnRepartoErogante
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property NumeroNosologicoColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnNumeroNosologico
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property CognomeColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnCognome
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property NomeColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnNome
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property CodiceFiscaleColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnCodiceFiscale
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property DataNascitaColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnDataNascita
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property ComuneNascitaColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnComuneNascita
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property CodiceSanitarioColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnCodiceSanitario
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property RepartoErogante1Column() As Global.System.Data.DataColumn
                Get
                    Return Me.columnRepartoErogante1
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property StatoCodiceColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnStatoCodice
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property CodiceOscuramentoColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnCodiceOscuramento
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
             Global.System.ComponentModel.Browsable(false)>  _
            Public ReadOnly Property Count() As Integer
                Get
                    Return Me.Rows.Count
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Default ReadOnly Property Item(ByVal index As Integer) As BeRicoveriListaRow
                Get
                    Return CType(Me.Rows(index),BeRicoveriListaRow)
                End Get
            End Property
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event BeRicoveriListaRowChanging As BeRicoveriListaRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event BeRicoveriListaRowChanged As BeRicoveriListaRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event BeRicoveriListaRowDeleting As BeRicoveriListaRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event BeRicoveriListaRowDeleted As BeRicoveriListaRowChangeEventHandler
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Overloads Sub AddBeRicoveriListaRow(ByVal row As BeRicoveriListaRow)
                Me.Rows.Add(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Overloads Function AddBeRicoveriListaRow( _
                        ByVal ID As System.Guid,  _
                        ByVal IdPaziente As System.Guid,  _
                        ByVal DataInserimento As Date,  _
                        ByVal DataModifica As Date,  _
                        ByVal AziendaErogante As String,  _
                        ByVal SistemaErogante As String,  _
                        ByVal RepartoErogante As String,  _
                        ByVal NumeroNosologico As String,  _
                        ByVal Cognome As String,  _
                        ByVal Nome As String,  _
                        ByVal CodiceFiscale As String,  _
                        ByVal DataNascita As Date,  _
                        ByVal ComuneNascita As String,  _
                        ByVal CodiceSanitario As String,  _
                        ByVal RepartoErogante1 As String,  _
                        ByVal StatoCodice As Byte,  _
                        ByVal CodiceOscuramento As String) As BeRicoveriListaRow
                Dim rowBeRicoveriListaRow As BeRicoveriListaRow = CType(Me.NewRow,BeRicoveriListaRow)
                Dim columnValuesArray() As Object = New Object() {ID, IdPaziente, DataInserimento, DataModifica, AziendaErogante, SistemaErogante, RepartoErogante, NumeroNosologico, Cognome, Nome, CodiceFiscale, DataNascita, ComuneNascita, CodiceSanitario, RepartoErogante1, StatoCodice, CodiceOscuramento}
                rowBeRicoveriListaRow.ItemArray = columnValuesArray
                Me.Rows.Add(rowBeRicoveriListaRow)
                Return rowBeRicoveriListaRow
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Overrides Function Clone() As Global.System.Data.DataTable
                Dim cln As BeRicoveriListaDataTable = CType(MyBase.Clone,BeRicoveriListaDataTable)
                cln.InitVars
                Return cln
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
                Return New BeRicoveriListaDataTable()
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Friend Sub InitVars()
                Me.columnID = MyBase.Columns("ID")
                Me.columnIdPaziente = MyBase.Columns("IdPaziente")
                Me.columnDataInserimento = MyBase.Columns("DataInserimento")
                Me.columnDataModifica = MyBase.Columns("DataModifica")
                Me.columnAziendaErogante = MyBase.Columns("AziendaErogante")
                Me.columnSistemaErogante = MyBase.Columns("SistemaErogante")
                Me.columnRepartoErogante = MyBase.Columns("RepartoErogante")
                Me.columnNumeroNosologico = MyBase.Columns("NumeroNosologico")
                Me.columnCognome = MyBase.Columns("Cognome")
                Me.columnNome = MyBase.Columns("Nome")
                Me.columnCodiceFiscale = MyBase.Columns("CodiceFiscale")
                Me.columnDataNascita = MyBase.Columns("DataNascita")
                Me.columnComuneNascita = MyBase.Columns("ComuneNascita")
                Me.columnCodiceSanitario = MyBase.Columns("CodiceSanitario")
                Me.columnRepartoErogante1 = MyBase.Columns("RepartoErogante1")
                Me.columnStatoCodice = MyBase.Columns("StatoCodice")
                Me.columnCodiceOscuramento = MyBase.Columns("CodiceOscuramento")
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Private Sub InitClass()
                Me.columnID = New Global.System.Data.DataColumn("ID", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnID)
                Me.columnIdPaziente = New Global.System.Data.DataColumn("IdPaziente", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnIdPaziente)
                Me.columnDataInserimento = New Global.System.Data.DataColumn("DataInserimento", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnDataInserimento)
                Me.columnDataModifica = New Global.System.Data.DataColumn("DataModifica", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnDataModifica)
                Me.columnAziendaErogante = New Global.System.Data.DataColumn("AziendaErogante", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnAziendaErogante)
                Me.columnSistemaErogante = New Global.System.Data.DataColumn("SistemaErogante", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnSistemaErogante)
                Me.columnRepartoErogante = New Global.System.Data.DataColumn("RepartoErogante", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnRepartoErogante)
                Me.columnNumeroNosologico = New Global.System.Data.DataColumn("NumeroNosologico", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnNumeroNosologico)
                Me.columnCognome = New Global.System.Data.DataColumn("Cognome", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnCognome)
                Me.columnNome = New Global.System.Data.DataColumn("Nome", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnNome)
                Me.columnCodiceFiscale = New Global.System.Data.DataColumn("CodiceFiscale", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnCodiceFiscale)
                Me.columnDataNascita = New Global.System.Data.DataColumn("DataNascita", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnDataNascita)
                Me.columnComuneNascita = New Global.System.Data.DataColumn("ComuneNascita", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnComuneNascita)
                Me.columnCodiceSanitario = New Global.System.Data.DataColumn("CodiceSanitario", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnCodiceSanitario)
                Me.columnRepartoErogante1 = New Global.System.Data.DataColumn("RepartoErogante1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnRepartoErogante1)
                Me.columnStatoCodice = New Global.System.Data.DataColumn("StatoCodice", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnStatoCodice)
                Me.columnCodiceOscuramento = New Global.System.Data.DataColumn("CodiceOscuramento", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnCodiceOscuramento)
                Me.columnID.AllowDBNull = false
                Me.columnDataInserimento.AllowDBNull = false
                Me.columnDataModifica.AllowDBNull = false
                Me.columnAziendaErogante.AllowDBNull = false
                Me.columnAziendaErogante.MaxLength = 16
                Me.columnSistemaErogante.AllowDBNull = false
                Me.columnSistemaErogante.MaxLength = 16
                Me.columnRepartoErogante.MaxLength = 64
                Me.columnNumeroNosologico.AllowDBNull = false
                Me.columnNumeroNosologico.MaxLength = 64
                Me.columnCognome.MaxLength = 64
                Me.columnNome.MaxLength = 64
                Me.columnCodiceFiscale.MaxLength = 16
                Me.columnComuneNascita.ReadOnly = true
                Me.columnComuneNascita.MaxLength = 128
                Me.columnCodiceSanitario.MaxLength = 16
                Me.columnRepartoErogante1.MaxLength = 64
                Me.columnStatoCodice.AllowDBNull = false
                Me.columnCodiceOscuramento.ReadOnly = true
                Me.columnCodiceOscuramento.MaxLength = 1000
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function NewBeRicoveriListaRow() As BeRicoveriListaRow
                Return CType(Me.NewRow,BeRicoveriListaRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
                Return New BeRicoveriListaRow(builder)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Function GetRowType() As Global.System.Type
                Return GetType(BeRicoveriListaRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanged(e)
                If (Not (Me.BeRicoveriListaRowChangedEvent) Is Nothing) Then
                    RaiseEvent BeRicoveriListaRowChanged(Me, New BeRicoveriListaRowChangeEvent(CType(e.Row,BeRicoveriListaRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanging(e)
                If (Not (Me.BeRicoveriListaRowChangingEvent) Is Nothing) Then
                    RaiseEvent BeRicoveriListaRowChanging(Me, New BeRicoveriListaRowChangeEvent(CType(e.Row,BeRicoveriListaRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleted(e)
                If (Not (Me.BeRicoveriListaRowDeletedEvent) Is Nothing) Then
                    RaiseEvent BeRicoveriListaRowDeleted(Me, New BeRicoveriListaRowChangeEvent(CType(e.Row,BeRicoveriListaRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleting(e)
                If (Not (Me.BeRicoveriListaRowDeletingEvent) Is Nothing) Then
                    RaiseEvent BeRicoveriListaRowDeleting(Me, New BeRicoveriListaRowChangeEvent(CType(e.Row,BeRicoveriListaRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub RemoveBeRicoveriListaRow(ByVal row As BeRicoveriListaRow)
                Me.Rows.Remove(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
                Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
                Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
                Dim ds As BackEndDataSet = New BackEndDataSet()
                Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any1.Namespace = "http://www.w3.org/2001/XMLSchema"
                any1.MinOccurs = New Decimal(0)
                any1.MaxOccurs = Decimal.MaxValue
                any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any1)
                Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
                any2.MinOccurs = New Decimal(1)
                any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any2)
                Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute1.Name = "namespace"
                attribute1.FixedValue = ds.Namespace
                type.Attributes.Add(attribute1)
                Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute2.Name = "tableTypeName"
                attribute2.FixedValue = "BeRicoveriListaDataTable"
                type.Attributes.Add(attribute2)
                type.Particle = sequence
                Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
                If xs.Contains(dsSchema.TargetNamespace) Then
                    Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Try 
                        Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                        dsSchema.Write(s1)
                        Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                        Do While schemas.MoveNext
                            schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                            s2.SetLength(0)
                            schema.Write(s2)
                            If (s1.Length = s2.Length) Then
                                s1.Position = 0
                                s2.Position = 0
                                
                                Do While ((s1.Position <> s1.Length)  _
                                            AndAlso (s1.ReadByte = s2.ReadByte))
                                    
                                    
                                Loop
                                If (s1.Position = s1.Length) Then
                                    Return type
                                End If
                            End If
                            
                        Loop
                    Finally
                        If (Not (s1) Is Nothing) Then
                            s1.Close
                        End If
                        If (Not (s2) Is Nothing) Then
                            s2.Close
                        End If
                    End Try
                End If
                xs.Add(dsSchema)
                Return type
            End Function
        End Class
        
        '''<summary>
        '''Represents the strongly named DataTable class.
        '''</summary>
        <Global.System.Serializable(),  _
         Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
        Partial Public Class BevsAttributiRicoveroOttieniDataTable
            Inherits Global.System.Data.TypedTableBase(Of BevsAttributiRicoveroOttieniRow)
            
            Private columnIdRicoveriBase As Global.System.Data.DataColumn
            
            Private columnNome As Global.System.Data.DataColumn
            
            Private columnValore As Global.System.Data.DataColumn
            
            Private columnDataPartizione As Global.System.Data.DataColumn
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub New()
                MyBase.New
                Me.TableName = "BevsAttributiRicoveroOttieni"
                Me.BeginInit
                Me.InitClass
                Me.EndInit
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Friend Sub New(ByVal table As Global.System.Data.DataTable)
                MyBase.New
                Me.TableName = table.TableName
                If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                    Me.CaseSensitive = table.CaseSensitive
                End If
                If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                    Me.Locale = table.Locale
                End If
                If (table.Namespace <> table.DataSet.Namespace) Then
                    Me.Namespace = table.Namespace
                End If
                Me.Prefix = table.Prefix
                Me.MinimumCapacity = table.MinimumCapacity
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
                MyBase.New(info, context)
                Me.InitVars
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property IdRicoveriBaseColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnIdRicoveriBase
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property NomeColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnNome
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property ValoreColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnValore
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property DataPartizioneColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnDataPartizione
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
             Global.System.ComponentModel.Browsable(false)>  _
            Public ReadOnly Property Count() As Integer
                Get
                    Return Me.Rows.Count
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Default ReadOnly Property Item(ByVal index As Integer) As BevsAttributiRicoveroOttieniRow
                Get
                    Return CType(Me.Rows(index),BevsAttributiRicoveroOttieniRow)
                End Get
            End Property
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event BevsAttributiRicoveroOttieniRowChanging As BevsAttributiRicoveroOttieniRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event BevsAttributiRicoveroOttieniRowChanged As BevsAttributiRicoveroOttieniRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event BevsAttributiRicoveroOttieniRowDeleting As BevsAttributiRicoveroOttieniRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event BevsAttributiRicoveroOttieniRowDeleted As BevsAttributiRicoveroOttieniRowChangeEventHandler
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Overloads Sub AddBevsAttributiRicoveroOttieniRow(ByVal row As BevsAttributiRicoveroOttieniRow)
                Me.Rows.Add(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Overloads Function AddBevsAttributiRicoveroOttieniRow(ByVal IdRicoveriBase As System.Guid, ByVal Nome As String, ByVal Valore As Object, ByVal DataPartizione As Date) As BevsAttributiRicoveroOttieniRow
                Dim rowBevsAttributiRicoveroOttieniRow As BevsAttributiRicoveroOttieniRow = CType(Me.NewRow,BevsAttributiRicoveroOttieniRow)
                Dim columnValuesArray() As Object = New Object() {IdRicoveriBase, Nome, Valore, DataPartizione}
                rowBevsAttributiRicoveroOttieniRow.ItemArray = columnValuesArray
                Me.Rows.Add(rowBevsAttributiRicoveroOttieniRow)
                Return rowBevsAttributiRicoveroOttieniRow
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Overrides Function Clone() As Global.System.Data.DataTable
                Dim cln As BevsAttributiRicoveroOttieniDataTable = CType(MyBase.Clone,BevsAttributiRicoveroOttieniDataTable)
                cln.InitVars
                Return cln
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
                Return New BevsAttributiRicoveroOttieniDataTable()
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Friend Sub InitVars()
                Me.columnIdRicoveriBase = MyBase.Columns("IdRicoveriBase")
                Me.columnNome = MyBase.Columns("Nome")
                Me.columnValore = MyBase.Columns("Valore")
                Me.columnDataPartizione = MyBase.Columns("DataPartizione")
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Private Sub InitClass()
                Me.columnIdRicoveriBase = New Global.System.Data.DataColumn("IdRicoveriBase", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnIdRicoveriBase)
                Me.columnNome = New Global.System.Data.DataColumn("Nome", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnNome)
                Me.columnValore = New Global.System.Data.DataColumn("Valore", GetType(Object), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnValore)
                Me.columnDataPartizione = New Global.System.Data.DataColumn("DataPartizione", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnDataPartizione)
                Me.columnIdRicoveriBase.AllowDBNull = false
                Me.columnNome.AllowDBNull = false
                Me.columnNome.MaxLength = 64
                Me.columnDataPartizione.AllowDBNull = false
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function NewBevsAttributiRicoveroOttieniRow() As BevsAttributiRicoveroOttieniRow
                Return CType(Me.NewRow,BevsAttributiRicoveroOttieniRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
                Return New BevsAttributiRicoveroOttieniRow(builder)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Function GetRowType() As Global.System.Type
                Return GetType(BevsAttributiRicoveroOttieniRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanged(e)
                If (Not (Me.BevsAttributiRicoveroOttieniRowChangedEvent) Is Nothing) Then
                    RaiseEvent BevsAttributiRicoveroOttieniRowChanged(Me, New BevsAttributiRicoveroOttieniRowChangeEvent(CType(e.Row,BevsAttributiRicoveroOttieniRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanging(e)
                If (Not (Me.BevsAttributiRicoveroOttieniRowChangingEvent) Is Nothing) Then
                    RaiseEvent BevsAttributiRicoveroOttieniRowChanging(Me, New BevsAttributiRicoveroOttieniRowChangeEvent(CType(e.Row,BevsAttributiRicoveroOttieniRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleted(e)
                If (Not (Me.BevsAttributiRicoveroOttieniRowDeletedEvent) Is Nothing) Then
                    RaiseEvent BevsAttributiRicoveroOttieniRowDeleted(Me, New BevsAttributiRicoveroOttieniRowChangeEvent(CType(e.Row,BevsAttributiRicoveroOttieniRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleting(e)
                If (Not (Me.BevsAttributiRicoveroOttieniRowDeletingEvent) Is Nothing) Then
                    RaiseEvent BevsAttributiRicoveroOttieniRowDeleting(Me, New BevsAttributiRicoveroOttieniRowChangeEvent(CType(e.Row,BevsAttributiRicoveroOttieniRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub RemoveBevsAttributiRicoveroOttieniRow(ByVal row As BevsAttributiRicoveroOttieniRow)
                Me.Rows.Remove(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
                Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
                Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
                Dim ds As BackEndDataSet = New BackEndDataSet()
                Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any1.Namespace = "http://www.w3.org/2001/XMLSchema"
                any1.MinOccurs = New Decimal(0)
                any1.MaxOccurs = Decimal.MaxValue
                any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any1)
                Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
                any2.MinOccurs = New Decimal(1)
                any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any2)
                Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute1.Name = "namespace"
                attribute1.FixedValue = ds.Namespace
                type.Attributes.Add(attribute1)
                Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute2.Name = "tableTypeName"
                attribute2.FixedValue = "BevsAttributiRicoveroOttieniDataTable"
                type.Attributes.Add(attribute2)
                type.Particle = sequence
                Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
                If xs.Contains(dsSchema.TargetNamespace) Then
                    Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Try 
                        Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                        dsSchema.Write(s1)
                        Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                        Do While schemas.MoveNext
                            schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                            s2.SetLength(0)
                            schema.Write(s2)
                            If (s1.Length = s2.Length) Then
                                s1.Position = 0
                                s2.Position = 0
                                
                                Do While ((s1.Position <> s1.Length)  _
                                            AndAlso (s1.ReadByte = s2.ReadByte))
                                    
                                    
                                Loop
                                If (s1.Position = s1.Length) Then
                                    Return type
                                End If
                            End If
                            
                        Loop
                    Finally
                        If (Not (s1) Is Nothing) Then
                            s1.Close
                        End If
                        If (Not (s2) Is Nothing) Then
                            s2.Close
                        End If
                    End Try
                End If
                xs.Add(dsSchema)
                Return type
            End Function
        End Class
        
        '''<summary>
        '''Represents the strongly named DataTable class.
        '''</summary>
        <Global.System.Serializable(),  _
         Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
        Partial Public Class BevsEventiRicoveroOttieniDataTable
            Inherits Global.System.Data.TypedTableBase(Of BevsEventiRicoveroOttieniRow)
            
            Private columnid As Global.System.Data.DataColumn
            
            Private columnIdPaziente As Global.System.Data.DataColumn
            
            Private columnDataInserimento As Global.System.Data.DataColumn
            
            Private columnDataModifica As Global.System.Data.DataColumn
            
            Private columnAziendaErogante As Global.System.Data.DataColumn
            
            Private columnSistemaErogante As Global.System.Data.DataColumn
            
            Private columnRepartoErogante As Global.System.Data.DataColumn
            
            Private columnDataEvento As Global.System.Data.DataColumn
            
            Private columnStatoCodice As Global.System.Data.DataColumn
            
            Private columnTipoEventoCodice As Global.System.Data.DataColumn
            
            Private columnTipoEventoDescr As Global.System.Data.DataColumn
            
            Private columnTipoEpisodio As Global.System.Data.DataColumn
            
            Private columnTipoEpisodioDescr As Global.System.Data.DataColumn
            
            Private columnNumeroNosologico As Global.System.Data.DataColumn
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub New()
                MyBase.New
                Me.TableName = "BevsEventiRicoveroOttieni"
                Me.BeginInit
                Me.InitClass
                Me.EndInit
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Friend Sub New(ByVal table As Global.System.Data.DataTable)
                MyBase.New
                Me.TableName = table.TableName
                If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                    Me.CaseSensitive = table.CaseSensitive
                End If
                If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                    Me.Locale = table.Locale
                End If
                If (table.Namespace <> table.DataSet.Namespace) Then
                    Me.Namespace = table.Namespace
                End If
                Me.Prefix = table.Prefix
                Me.MinimumCapacity = table.MinimumCapacity
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
                MyBase.New(info, context)
                Me.InitVars
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property idColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnid
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property IdPazienteColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnIdPaziente
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property DataInserimentoColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnDataInserimento
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property DataModificaColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnDataModifica
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property AziendaEroganteColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnAziendaErogante
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property SistemaEroganteColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnSistemaErogante
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property RepartoEroganteColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnRepartoErogante
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property DataEventoColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnDataEvento
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property StatoCodiceColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnStatoCodice
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property TipoEventoCodiceColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnTipoEventoCodice
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property TipoEventoDescrColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnTipoEventoDescr
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property TipoEpisodioColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnTipoEpisodio
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property TipoEpisodioDescrColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnTipoEpisodioDescr
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property NumeroNosologicoColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnNumeroNosologico
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
             Global.System.ComponentModel.Browsable(false)>  _
            Public ReadOnly Property Count() As Integer
                Get
                    Return Me.Rows.Count
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Default ReadOnly Property Item(ByVal index As Integer) As BevsEventiRicoveroOttieniRow
                Get
                    Return CType(Me.Rows(index),BevsEventiRicoveroOttieniRow)
                End Get
            End Property
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event BevsEventiRicoveroOttieniRowChanging As BevsEventiRicoveroOttieniRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event BevsEventiRicoveroOttieniRowChanged As BevsEventiRicoveroOttieniRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event BevsEventiRicoveroOttieniRowDeleting As BevsEventiRicoveroOttieniRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event BevsEventiRicoveroOttieniRowDeleted As BevsEventiRicoveroOttieniRowChangeEventHandler
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Overloads Sub AddBevsEventiRicoveroOttieniRow(ByVal row As BevsEventiRicoveroOttieniRow)
                Me.Rows.Add(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Overloads Function AddBevsEventiRicoveroOttieniRow(ByVal id As System.Guid, ByVal IdPaziente As System.Guid, ByVal DataInserimento As Date, ByVal DataModifica As Date, ByVal AziendaErogante As String, ByVal SistemaErogante As String, ByVal RepartoErogante As String, ByVal DataEvento As Date, ByVal StatoCodice As Integer, ByVal TipoEventoCodice As String, ByVal TipoEventoDescr As String, ByVal TipoEpisodio As String, ByVal TipoEpisodioDescr As String, ByVal NumeroNosologico As String) As BevsEventiRicoveroOttieniRow
                Dim rowBevsEventiRicoveroOttieniRow As BevsEventiRicoveroOttieniRow = CType(Me.NewRow,BevsEventiRicoveroOttieniRow)
                Dim columnValuesArray() As Object = New Object() {id, IdPaziente, DataInserimento, DataModifica, AziendaErogante, SistemaErogante, RepartoErogante, DataEvento, StatoCodice, TipoEventoCodice, TipoEventoDescr, TipoEpisodio, TipoEpisodioDescr, NumeroNosologico}
                rowBevsEventiRicoveroOttieniRow.ItemArray = columnValuesArray
                Me.Rows.Add(rowBevsEventiRicoveroOttieniRow)
                Return rowBevsEventiRicoveroOttieniRow
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Overrides Function Clone() As Global.System.Data.DataTable
                Dim cln As BevsEventiRicoveroOttieniDataTable = CType(MyBase.Clone,BevsEventiRicoveroOttieniDataTable)
                cln.InitVars
                Return cln
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
                Return New BevsEventiRicoveroOttieniDataTable()
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Friend Sub InitVars()
                Me.columnid = MyBase.Columns("id")
                Me.columnIdPaziente = MyBase.Columns("IdPaziente")
                Me.columnDataInserimento = MyBase.Columns("DataInserimento")
                Me.columnDataModifica = MyBase.Columns("DataModifica")
                Me.columnAziendaErogante = MyBase.Columns("AziendaErogante")
                Me.columnSistemaErogante = MyBase.Columns("SistemaErogante")
                Me.columnRepartoErogante = MyBase.Columns("RepartoErogante")
                Me.columnDataEvento = MyBase.Columns("DataEvento")
                Me.columnStatoCodice = MyBase.Columns("StatoCodice")
                Me.columnTipoEventoCodice = MyBase.Columns("TipoEventoCodice")
                Me.columnTipoEventoDescr = MyBase.Columns("TipoEventoDescr")
                Me.columnTipoEpisodio = MyBase.Columns("TipoEpisodio")
                Me.columnTipoEpisodioDescr = MyBase.Columns("TipoEpisodioDescr")
                Me.columnNumeroNosologico = MyBase.Columns("NumeroNosologico")
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Private Sub InitClass()
                Me.columnid = New Global.System.Data.DataColumn("id", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnid)
                Me.columnIdPaziente = New Global.System.Data.DataColumn("IdPaziente", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnIdPaziente)
                Me.columnDataInserimento = New Global.System.Data.DataColumn("DataInserimento", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnDataInserimento)
                Me.columnDataModifica = New Global.System.Data.DataColumn("DataModifica", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnDataModifica)
                Me.columnAziendaErogante = New Global.System.Data.DataColumn("AziendaErogante", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnAziendaErogante)
                Me.columnSistemaErogante = New Global.System.Data.DataColumn("SistemaErogante", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnSistemaErogante)
                Me.columnRepartoErogante = New Global.System.Data.DataColumn("RepartoErogante", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnRepartoErogante)
                Me.columnDataEvento = New Global.System.Data.DataColumn("DataEvento", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnDataEvento)
                Me.columnStatoCodice = New Global.System.Data.DataColumn("StatoCodice", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnStatoCodice)
                Me.columnTipoEventoCodice = New Global.System.Data.DataColumn("TipoEventoCodice", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnTipoEventoCodice)
                Me.columnTipoEventoDescr = New Global.System.Data.DataColumn("TipoEventoDescr", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnTipoEventoDescr)
                Me.columnTipoEpisodio = New Global.System.Data.DataColumn("TipoEpisodio", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnTipoEpisodio)
                Me.columnTipoEpisodioDescr = New Global.System.Data.DataColumn("TipoEpisodioDescr", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnTipoEpisodioDescr)
                Me.columnNumeroNosologico = New Global.System.Data.DataColumn("NumeroNosologico", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnNumeroNosologico)
                Me.columnid.AllowDBNull = false
                Me.columnDataInserimento.AllowDBNull = false
                Me.columnDataModifica.AllowDBNull = false
                Me.columnAziendaErogante.AllowDBNull = false
                Me.columnAziendaErogante.MaxLength = 16
                Me.columnSistemaErogante.AllowDBNull = false
                Me.columnSistemaErogante.MaxLength = 16
                Me.columnRepartoErogante.MaxLength = 64
                Me.columnDataEvento.AllowDBNull = false
                Me.columnStatoCodice.AllowDBNull = false
                Me.columnTipoEventoCodice.AllowDBNull = false
                Me.columnTipoEventoCodice.MaxLength = 16
                Me.columnTipoEventoDescr.AllowDBNull = false
                Me.columnTipoEventoDescr.MaxLength = 64
                Me.columnTipoEpisodio.MaxLength = 16
                Me.columnTipoEpisodioDescr.MaxLength = 128
                Me.columnNumeroNosologico.AllowDBNull = false
                Me.columnNumeroNosologico.MaxLength = 64
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function NewBevsEventiRicoveroOttieniRow() As BevsEventiRicoveroOttieniRow
                Return CType(Me.NewRow,BevsEventiRicoveroOttieniRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
                Return New BevsEventiRicoveroOttieniRow(builder)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Function GetRowType() As Global.System.Type
                Return GetType(BevsEventiRicoveroOttieniRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanged(e)
                If (Not (Me.BevsEventiRicoveroOttieniRowChangedEvent) Is Nothing) Then
                    RaiseEvent BevsEventiRicoveroOttieniRowChanged(Me, New BevsEventiRicoveroOttieniRowChangeEvent(CType(e.Row,BevsEventiRicoveroOttieniRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanging(e)
                If (Not (Me.BevsEventiRicoveroOttieniRowChangingEvent) Is Nothing) Then
                    RaiseEvent BevsEventiRicoveroOttieniRowChanging(Me, New BevsEventiRicoveroOttieniRowChangeEvent(CType(e.Row,BevsEventiRicoveroOttieniRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleted(e)
                If (Not (Me.BevsEventiRicoveroOttieniRowDeletedEvent) Is Nothing) Then
                    RaiseEvent BevsEventiRicoveroOttieniRowDeleted(Me, New BevsEventiRicoveroOttieniRowChangeEvent(CType(e.Row,BevsEventiRicoveroOttieniRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleting(e)
                If (Not (Me.BevsEventiRicoveroOttieniRowDeletingEvent) Is Nothing) Then
                    RaiseEvent BevsEventiRicoveroOttieniRowDeleting(Me, New BevsEventiRicoveroOttieniRowChangeEvent(CType(e.Row,BevsEventiRicoveroOttieniRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub RemoveBevsEventiRicoveroOttieniRow(ByVal row As BevsEventiRicoveroOttieniRow)
                Me.Rows.Remove(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
                Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
                Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
                Dim ds As BackEndDataSet = New BackEndDataSet()
                Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any1.Namespace = "http://www.w3.org/2001/XMLSchema"
                any1.MinOccurs = New Decimal(0)
                any1.MaxOccurs = Decimal.MaxValue
                any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any1)
                Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
                any2.MinOccurs = New Decimal(1)
                any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any2)
                Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute1.Name = "namespace"
                attribute1.FixedValue = ds.Namespace
                type.Attributes.Add(attribute1)
                Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute2.Name = "tableTypeName"
                attribute2.FixedValue = "BevsEventiRicoveroOttieniDataTable"
                type.Attributes.Add(attribute2)
                type.Particle = sequence
                Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
                If xs.Contains(dsSchema.TargetNamespace) Then
                    Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Try 
                        Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                        dsSchema.Write(s1)
                        Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                        Do While schemas.MoveNext
                            schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                            s2.SetLength(0)
                            schema.Write(s2)
                            If (s1.Length = s2.Length) Then
                                s1.Position = 0
                                s2.Position = 0
                                
                                Do While ((s1.Position <> s1.Length)  _
                                            AndAlso (s1.ReadByte = s2.ReadByte))
                                    
                                    
                                Loop
                                If (s1.Position = s1.Length) Then
                                    Return type
                                End If
                            End If
                            
                        Loop
                    Finally
                        If (Not (s1) Is Nothing) Then
                            s1.Close
                        End If
                        If (Not (s2) Is Nothing) Then
                            s2.Close
                        End If
                    End Try
                End If
                xs.Add(dsSchema)
                Return type
            End Function
        End Class
        
        '''<summary>
        '''Represents the strongly named DataTable class.
        '''</summary>
        <Global.System.Serializable(),  _
         Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
        Partial Public Class BevsAttributiEventoOttieniDataTable
            Inherits Global.System.Data.TypedTableBase(Of BevsAttributiEventoOttieniRow)
            
            Private columnIdEventiBase As Global.System.Data.DataColumn
            
            Private columnNome As Global.System.Data.DataColumn
            
            Private columnValore As Global.System.Data.DataColumn
            
            Private columnDataPartizione As Global.System.Data.DataColumn
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub New()
                MyBase.New
                Me.TableName = "BevsAttributiEventoOttieni"
                Me.BeginInit
                Me.InitClass
                Me.EndInit
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Friend Sub New(ByVal table As Global.System.Data.DataTable)
                MyBase.New
                Me.TableName = table.TableName
                If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                    Me.CaseSensitive = table.CaseSensitive
                End If
                If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                    Me.Locale = table.Locale
                End If
                If (table.Namespace <> table.DataSet.Namespace) Then
                    Me.Namespace = table.Namespace
                End If
                Me.Prefix = table.Prefix
                Me.MinimumCapacity = table.MinimumCapacity
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
                MyBase.New(info, context)
                Me.InitVars
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property IdEventiBaseColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnIdEventiBase
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property NomeColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnNome
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property ValoreColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnValore
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property DataPartizioneColumn() As Global.System.Data.DataColumn
                Get
                    Return Me.columnDataPartizione
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
             Global.System.ComponentModel.Browsable(false)>  _
            Public ReadOnly Property Count() As Integer
                Get
                    Return Me.Rows.Count
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Default ReadOnly Property Item(ByVal index As Integer) As BevsAttributiEventoOttieniRow
                Get
                    Return CType(Me.Rows(index),BevsAttributiEventoOttieniRow)
                End Get
            End Property
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event BevsAttributiEventoOttieniRowChanging As BevsAttributiEventoOttieniRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event BevsAttributiEventoOttieniRowChanged As BevsAttributiEventoOttieniRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event BevsAttributiEventoOttieniRowDeleting As BevsAttributiEventoOttieniRowChangeEventHandler
            
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Event BevsAttributiEventoOttieniRowDeleted As BevsAttributiEventoOttieniRowChangeEventHandler
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Overloads Sub AddBevsAttributiEventoOttieniRow(ByVal row As BevsAttributiEventoOttieniRow)
                Me.Rows.Add(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Overloads Function AddBevsAttributiEventoOttieniRow(ByVal IdEventiBase As System.Guid, ByVal Nome As String, ByVal Valore As Object, ByVal DataPartizione As Date) As BevsAttributiEventoOttieniRow
                Dim rowBevsAttributiEventoOttieniRow As BevsAttributiEventoOttieniRow = CType(Me.NewRow,BevsAttributiEventoOttieniRow)
                Dim columnValuesArray() As Object = New Object() {IdEventiBase, Nome, Valore, DataPartizione}
                rowBevsAttributiEventoOttieniRow.ItemArray = columnValuesArray
                Me.Rows.Add(rowBevsAttributiEventoOttieniRow)
                Return rowBevsAttributiEventoOttieniRow
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Overrides Function Clone() As Global.System.Data.DataTable
                Dim cln As BevsAttributiEventoOttieniDataTable = CType(MyBase.Clone,BevsAttributiEventoOttieniDataTable)
                cln.InitVars
                Return cln
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
                Return New BevsAttributiEventoOttieniDataTable()
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Friend Sub InitVars()
                Me.columnIdEventiBase = MyBase.Columns("IdEventiBase")
                Me.columnNome = MyBase.Columns("Nome")
                Me.columnValore = MyBase.Columns("Valore")
                Me.columnDataPartizione = MyBase.Columns("DataPartizione")
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Private Sub InitClass()
                Me.columnIdEventiBase = New Global.System.Data.DataColumn("IdEventiBase", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnIdEventiBase)
                Me.columnNome = New Global.System.Data.DataColumn("Nome", GetType(String), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnNome)
                Me.columnValore = New Global.System.Data.DataColumn("Valore", GetType(Object), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnValore)
                Me.columnDataPartizione = New Global.System.Data.DataColumn("DataPartizione", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
                MyBase.Columns.Add(Me.columnDataPartizione)
                Me.columnIdEventiBase.AllowDBNull = false
                Me.columnNome.AllowDBNull = false
                Me.columnNome.MaxLength = 64
                Me.columnDataPartizione.AllowDBNull = false
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function NewBevsAttributiEventoOttieniRow() As BevsAttributiEventoOttieniRow
                Return CType(Me.NewRow,BevsAttributiEventoOttieniRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
                Return New BevsAttributiEventoOttieniRow(builder)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Function GetRowType() As Global.System.Type
                Return GetType(BevsAttributiEventoOttieniRow)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanged(e)
                If (Not (Me.BevsAttributiEventoOttieniRowChangedEvent) Is Nothing) Then
                    RaiseEvent BevsAttributiEventoOttieniRowChanged(Me, New BevsAttributiEventoOttieniRowChangeEvent(CType(e.Row,BevsAttributiEventoOttieniRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowChanging(e)
                If (Not (Me.BevsAttributiEventoOttieniRowChangingEvent) Is Nothing) Then
                    RaiseEvent BevsAttributiEventoOttieniRowChanging(Me, New BevsAttributiEventoOttieniRowChangeEvent(CType(e.Row,BevsAttributiEventoOttieniRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleted(e)
                If (Not (Me.BevsAttributiEventoOttieniRowDeletedEvent) Is Nothing) Then
                    RaiseEvent BevsAttributiEventoOttieniRowDeleted(Me, New BevsAttributiEventoOttieniRowChangeEvent(CType(e.Row,BevsAttributiEventoOttieniRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
                MyBase.OnRowDeleting(e)
                If (Not (Me.BevsAttributiEventoOttieniRowDeletingEvent) Is Nothing) Then
                    RaiseEvent BevsAttributiEventoOttieniRowDeleting(Me, New BevsAttributiEventoOttieniRowChangeEvent(CType(e.Row,BevsAttributiEventoOttieniRow), e.Action))
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub RemoveBevsAttributiEventoOttieniRow(ByVal row As BevsAttributiEventoOttieniRow)
                Me.Rows.Remove(row)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
                Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
                Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
                Dim ds As BackEndDataSet = New BackEndDataSet()
                Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any1.Namespace = "http://www.w3.org/2001/XMLSchema"
                any1.MinOccurs = New Decimal(0)
                any1.MaxOccurs = Decimal.MaxValue
                any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any1)
                Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
                any2.MinOccurs = New Decimal(1)
                any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
                sequence.Items.Add(any2)
                Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute1.Name = "namespace"
                attribute1.FixedValue = ds.Namespace
                type.Attributes.Add(attribute1)
                Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
                attribute2.Name = "tableTypeName"
                attribute2.FixedValue = "BevsAttributiEventoOttieniDataTable"
                type.Attributes.Add(attribute2)
                type.Particle = sequence
                Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
                If xs.Contains(dsSchema.TargetNamespace) Then
                    Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                    Try 
                        Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                        dsSchema.Write(s1)
                        Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                        Do While schemas.MoveNext
                            schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                            s2.SetLength(0)
                            schema.Write(s2)
                            If (s1.Length = s2.Length) Then
                                s1.Position = 0
                                s2.Position = 0
                                
                                Do While ((s1.Position <> s1.Length)  _
                                            AndAlso (s1.ReadByte = s2.ReadByte))
                                    
                                    
                                Loop
                                If (s1.Position = s1.Length) Then
                                    Return type
                                End If
                            End If
                            
                        Loop
                    Finally
                        If (Not (s1) Is Nothing) Then
                            s1.Close
                        End If
                        If (Not (s2) Is Nothing) Then
                            s2.Close
                        End If
                    End Try
                End If
                xs.Add(dsSchema)
                Return type
            End Function
        End Class
        
        '''<summary>
        '''Represents strongly named DataRow class.
        '''</summary>
        Partial Public Class RefertiStiliListaRow
            Inherits Global.System.Data.DataRow
            
            Private tableRefertiStiliLista As RefertiStiliListaDataTable
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
                MyBase.New(rb)
                Me.tableRefertiStiliLista = CType(Me.Table,RefertiStiliListaDataTable)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property Id() As System.Guid
                Get
                    Return CType(Me(Me.tableRefertiStiliLista.IdColumn),Global.System.Guid)
                End Get
                Set
                    Me(Me.tableRefertiStiliLista.IdColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property Nome() As String
                Get
                    Return CType(Me(Me.tableRefertiStiliLista.NomeColumn),String)
                End Get
                Set
                    Me(Me.tableRefertiStiliLista.NomeColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property Descrizione() As String
                Get
                    Return CType(Me(Me.tableRefertiStiliLista.DescrizioneColumn),String)
                End Get
                Set
                    Me(Me.tableRefertiStiliLista.DescrizioneColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property Abilitato() As Boolean
                Get
                    Return CType(Me(Me.tableRefertiStiliLista.AbilitatoColumn),Boolean)
                End Get
                Set
                    Me(Me.tableRefertiStiliLista.AbilitatoColumn) = value
                End Set
            End Property
        End Class
        
        '''<summary>
        '''Represents strongly named DataRow class.
        '''</summary>
        Partial Public Class RefertiNoteListaRow
            Inherits Global.System.Data.DataRow
            
            Private tableRefertiNoteLista As RefertiNoteListaDataTable
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
                MyBase.New(rb)
                Me.tableRefertiNoteLista = CType(Me.Table,RefertiNoteListaDataTable)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property NumeroReferto() As String
                Get
                    Try 
                        Return CType(Me(Me.tableRefertiNoteLista.NumeroRefertoColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'NumeroReferto' in table 'RefertiNoteLista' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableRefertiNoteLista.NumeroRefertoColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property NumeroNosologico() As String
                Get
                    Try 
                        Return CType(Me(Me.tableRefertiNoteLista.NumeroNosologicoColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'NumeroNosologico' in table 'RefertiNoteLista' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableRefertiNoteLista.NumeroNosologicoColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property Utente() As String
                Get
                    Return CType(Me(Me.tableRefertiNoteLista.UtenteColumn),String)
                End Get
                Set
                    Me(Me.tableRefertiNoteLista.UtenteColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property DataInserimento() As Date
                Get
                    Return CType(Me(Me.tableRefertiNoteLista.DataInserimentoColumn),Date)
                End Get
                Set
                    Me(Me.tableRefertiNoteLista.DataInserimentoColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property Nota() As String
                Get
                    Try 
                        Return CType(Me(Me.tableRefertiNoteLista.NotaColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'Nota' in table 'RefertiNoteLista' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableRefertiNoteLista.NotaColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property IdRefertiNote() As System.Guid
                Get
                    Return CType(Me(Me.tableRefertiNoteLista.IdRefertiNoteColumn),Global.System.Guid)
                End Get
                Set
                    Me(Me.tableRefertiNoteLista.IdRefertiNoteColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property IdReferti() As System.Guid
                Get
                    Return CType(Me(Me.tableRefertiNoteLista.IdRefertiColumn),Global.System.Guid)
                End Get
                Set
                    Me(Me.tableRefertiNoteLista.IdRefertiColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property Cancellata() As Boolean
                Get
                    Return CType(Me(Me.tableRefertiNoteLista.CancellataColumn),Boolean)
                End Get
                Set
                    Me(Me.tableRefertiNoteLista.CancellataColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function IsNumeroRefertoNull() As Boolean
                Return Me.IsNull(Me.tableRefertiNoteLista.NumeroRefertoColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub SetNumeroRefertoNull()
                Me(Me.tableRefertiNoteLista.NumeroRefertoColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function IsNumeroNosologicoNull() As Boolean
                Return Me.IsNull(Me.tableRefertiNoteLista.NumeroNosologicoColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub SetNumeroNosologicoNull()
                Me(Me.tableRefertiNoteLista.NumeroNosologicoColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function IsNotaNull() As Boolean
                Return Me.IsNull(Me.tableRefertiNoteLista.NotaColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub SetNotaNull()
                Me(Me.tableRefertiNoteLista.NotaColumn) = Global.System.Convert.DBNull
            End Sub
        End Class
        
        '''<summary>
        '''Represents strongly named DataRow class.
        '''</summary>
        Partial Public Class RefertiNoteDettaglioRow
            Inherits Global.System.Data.DataRow
            
            Private tableRefertiNoteDettaglio As RefertiNoteDettaglioDataTable
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
                MyBase.New(rb)
                Me.tableRefertiNoteDettaglio = CType(Me.Table,RefertiNoteDettaglioDataTable)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property IdReferti() As System.Guid
                Get
                    Return CType(Me(Me.tableRefertiNoteDettaglio.IdRefertiColumn),Global.System.Guid)
                End Get
                Set
                    Me(Me.tableRefertiNoteDettaglio.IdRefertiColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property Utente() As String
                Get
                    Return CType(Me(Me.tableRefertiNoteDettaglio.UtenteColumn),String)
                End Get
                Set
                    Me(Me.tableRefertiNoteDettaglio.UtenteColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property DataInserimento() As Date
                Get
                    Return CType(Me(Me.tableRefertiNoteDettaglio.DataInserimentoColumn),Date)
                End Get
                Set
                    Me(Me.tableRefertiNoteDettaglio.DataInserimentoColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property Nota() As String
                Get
                    Return CType(Me(Me.tableRefertiNoteDettaglio.NotaColumn),String)
                End Get
                Set
                    Me(Me.tableRefertiNoteDettaglio.NotaColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property Id() As System.Guid
                Get
                    Return CType(Me(Me.tableRefertiNoteDettaglio.IdColumn),Global.System.Guid)
                End Get
                Set
                    Me(Me.tableRefertiNoteDettaglio.IdColumn) = value
                End Set
            End Property
        End Class
        
        '''<summary>
        '''Represents strongly named DataRow class.
        '''</summary>
        Partial Public Class SistemiErogantiComboRow
            Inherits Global.System.Data.DataRow
            
            Private tableSistemiErogantiCombo As SistemiErogantiComboDataTable
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
                MyBase.New(rb)
                Me.tableSistemiErogantiCombo = CType(Me.Table,SistemiErogantiComboDataTable)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property Id() As String
                Get
                    Try 
                        Return CType(Me(Me.tableSistemiErogantiCombo.IdColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'Id' in table 'SistemiErogantiCombo' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableSistemiErogantiCombo.IdColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property Descrizione() As String
                Get
                    Try 
                        Return CType(Me(Me.tableSistemiErogantiCombo.DescrizioneColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'Descrizione' in table 'SistemiErogantiCombo' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableSistemiErogantiCombo.DescrizioneColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property Codice() As String
                Get
                    Try 
                        Return CType(Me(Me.tableSistemiErogantiCombo.CodiceColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'Codice' in table 'SistemiErogantiCombo' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableSistemiErogantiCombo.CodiceColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function IsIdNull() As Boolean
                Return Me.IsNull(Me.tableSistemiErogantiCombo.IdColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub SetIdNull()
                Me(Me.tableSistemiErogantiCombo.IdColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function IsDescrizioneNull() As Boolean
                Return Me.IsNull(Me.tableSistemiErogantiCombo.DescrizioneColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub SetDescrizioneNull()
                Me(Me.tableSistemiErogantiCombo.DescrizioneColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function IsCodiceNull() As Boolean
                Return Me.IsNull(Me.tableSistemiErogantiCombo.CodiceColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub SetCodiceNull()
                Me(Me.tableSistemiErogantiCombo.CodiceColumn) = Global.System.Convert.DBNull
            End Sub
        End Class
        
        '''<summary>
        '''Represents strongly named DataRow class.
        '''</summary>
        Partial Public Class SistemiErogantiDocumentiListaRow
            Inherits Global.System.Data.DataRow
            
            Private tableSistemiErogantiDocumentiLista As SistemiErogantiDocumentiListaDataTable
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
                MyBase.New(rb)
                Me.tableSistemiErogantiDocumentiLista = CType(Me.Table,SistemiErogantiDocumentiListaDataTable)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property Id() As System.Guid
                Get
                    Return CType(Me(Me.tableSistemiErogantiDocumentiLista.IdColumn),Global.System.Guid)
                End Get
                Set
                    Me(Me.tableSistemiErogantiDocumentiLista.IdColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property Nome() As String
                Get
                    Try 
                        Return CType(Me(Me.tableSistemiErogantiDocumentiLista.NomeColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'Nome' in table 'SistemiErogantiDocumentiLista' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableSistemiErogantiDocumentiLista.NomeColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property Dimensione() As Integer
                Get
                    Return CType(Me(Me.tableSistemiErogantiDocumentiLista.DimensioneColumn),Integer)
                End Get
                Set
                    Me(Me.tableSistemiErogantiDocumentiLista.DimensioneColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property ContentType() As String
                Get
                    Return CType(Me(Me.tableSistemiErogantiDocumentiLista.ContentTypeColumn),String)
                End Get
                Set
                    Me(Me.tableSistemiErogantiDocumentiLista.ContentTypeColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property AziendaErogante() As String
                Get
                    Return CType(Me(Me.tableSistemiErogantiDocumentiLista.AziendaEroganteColumn),String)
                End Get
                Set
                    Me(Me.tableSistemiErogantiDocumentiLista.AziendaEroganteColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property SistemaErogante() As String
                Get
                    Return CType(Me(Me.tableSistemiErogantiDocumentiLista.SistemaEroganteColumn),String)
                End Get
                Set
                    Me(Me.tableSistemiErogantiDocumentiLista.SistemaEroganteColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function IsNomeNull() As Boolean
                Return Me.IsNull(Me.tableSistemiErogantiDocumentiLista.NomeColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub SetNomeNull()
                Me(Me.tableSistemiErogantiDocumentiLista.NomeColumn) = Global.System.Convert.DBNull
            End Sub
        End Class
        
        '''<summary>
        '''Represents strongly named DataRow class.
        '''</summary>
        Partial Public Class SistemiErogantiDocumentiDettaglioRow
            Inherits Global.System.Data.DataRow
            
            Private tableSistemiErogantiDocumentiDettaglio As SistemiErogantiDocumentiDettaglioDataTable
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
                MyBase.New(rb)
                Me.tableSistemiErogantiDocumentiDettaglio = CType(Me.Table,SistemiErogantiDocumentiDettaglioDataTable)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property Contenuto() As Byte()
                Get
                    Try 
                        Return CType(Me(Me.tableSistemiErogantiDocumentiDettaglio.ContenutoColumn),Byte())
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'Contenuto' in table 'SistemiErogantiDocumentiDettaglio' is "& _ 
                                "DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableSistemiErogantiDocumentiDettaglio.ContenutoColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property Id() As System.Guid
                Get
                    Return CType(Me(Me.tableSistemiErogantiDocumentiDettaglio.IdColumn),Global.System.Guid)
                End Get
                Set
                    Me(Me.tableSistemiErogantiDocumentiDettaglio.IdColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property Nome() As String
                Get
                    Return CType(Me(Me.tableSistemiErogantiDocumentiDettaglio.NomeColumn),String)
                End Get
                Set
                    Me(Me.tableSistemiErogantiDocumentiDettaglio.NomeColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property Estensione() As String
                Get
                    Return CType(Me(Me.tableSistemiErogantiDocumentiDettaglio.EstensioneColumn),String)
                End Get
                Set
                    Me(Me.tableSistemiErogantiDocumentiDettaglio.EstensioneColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property Dimensione() As Integer
                Get
                    Return CType(Me(Me.tableSistemiErogantiDocumentiDettaglio.DimensioneColumn),Integer)
                End Get
                Set
                    Me(Me.tableSistemiErogantiDocumentiDettaglio.DimensioneColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property ContentType() As String
                Get
                    Return CType(Me(Me.tableSistemiErogantiDocumentiDettaglio.ContentTypeColumn),String)
                End Get
                Set
                    Me(Me.tableSistemiErogantiDocumentiDettaglio.ContentTypeColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property IdSistemaErogante() As System.Guid
                Get
                    Return CType(Me(Me.tableSistemiErogantiDocumentiDettaglio.IdSistemaEroganteColumn),Global.System.Guid)
                End Get
                Set
                    Me(Me.tableSistemiErogantiDocumentiDettaglio.IdSistemaEroganteColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function IsContenutoNull() As Boolean
                Return Me.IsNull(Me.tableSistemiErogantiDocumentiDettaglio.ContenutoColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub SetContenutoNull()
                Me(Me.tableSistemiErogantiDocumentiDettaglio.ContenutoColumn) = Global.System.Convert.DBNull
            End Sub
        End Class
        
        '''<summary>
        '''Represents strongly named DataRow class.
        '''</summary>
        Partial Public Class BevsSistemiErogantiDocumentiListaRow
            Inherits Global.System.Data.DataRow
            
            Private tableBevsSistemiErogantiDocumentiLista As BevsSistemiErogantiDocumentiListaDataTable
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
                MyBase.New(rb)
                Me.tableBevsSistemiErogantiDocumentiLista = CType(Me.Table,BevsSistemiErogantiDocumentiListaDataTable)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property Id() As System.Guid
                Get
                    Return CType(Me(Me.tableBevsSistemiErogantiDocumentiLista.IdColumn),Global.System.Guid)
                End Get
                Set
                    Me(Me.tableBevsSistemiErogantiDocumentiLista.IdColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property Nome() As String
                Get
                    Try 
                        Return CType(Me(Me.tableBevsSistemiErogantiDocumentiLista.NomeColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'Nome' in table 'BevsSistemiErogantiDocumentiLista' is DBNul"& _ 
                                "l.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableBevsSistemiErogantiDocumentiLista.NomeColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property Dimensione() As Integer
                Get
                    Return CType(Me(Me.tableBevsSistemiErogantiDocumentiLista.DimensioneColumn),Integer)
                End Get
                Set
                    Me(Me.tableBevsSistemiErogantiDocumentiLista.DimensioneColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property ContentType() As String
                Get
                    Return CType(Me(Me.tableBevsSistemiErogantiDocumentiLista.ContentTypeColumn),String)
                End Get
                Set
                    Me(Me.tableBevsSistemiErogantiDocumentiLista.ContentTypeColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property AziendaErogante() As String
                Get
                    Return CType(Me(Me.tableBevsSistemiErogantiDocumentiLista.AziendaEroganteColumn),String)
                End Get
                Set
                    Me(Me.tableBevsSistemiErogantiDocumentiLista.AziendaEroganteColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property SistemaErogante() As String
                Get
                    Return CType(Me(Me.tableBevsSistemiErogantiDocumentiLista.SistemaEroganteColumn),String)
                End Get
                Set
                    Me(Me.tableBevsSistemiErogantiDocumentiLista.SistemaEroganteColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function IsNomeNull() As Boolean
                Return Me.IsNull(Me.tableBevsSistemiErogantiDocumentiLista.NomeColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub SetNomeNull()
                Me(Me.tableBevsSistemiErogantiDocumentiLista.NomeColumn) = Global.System.Convert.DBNull
            End Sub
        End Class
        
        '''<summary>
        '''Represents strongly named DataRow class.
        '''</summary>
        Partial Public Class BeRefertiListaRow
            Inherits Global.System.Data.DataRow
            
            Private tableBeRefertiLista As BeRefertiListaDataTable
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
                MyBase.New(rb)
                Me.tableBeRefertiLista = CType(Me.Table,BeRefertiListaDataTable)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property ID() As System.Guid
                Get
                    Return CType(Me(Me.tableBeRefertiLista.IDColumn),Global.System.Guid)
                End Get
                Set
                    Me(Me.tableBeRefertiLista.IDColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property IdEsterno() As String
                Get
                    Return CType(Me(Me.tableBeRefertiLista.IdEsternoColumn),String)
                End Get
                Set
                    Me(Me.tableBeRefertiLista.IdEsternoColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property IdPaziente() As System.Guid
                Get
                    Try 
                        Return CType(Me(Me.tableBeRefertiLista.IdPazienteColumn),Global.System.Guid)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'IdPaziente' in table 'BeRefertiLista' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableBeRefertiLista.IdPazienteColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property DataInserimento() As Date
                Get
                    Return CType(Me(Me.tableBeRefertiLista.DataInserimentoColumn),Date)
                End Get
                Set
                    Me(Me.tableBeRefertiLista.DataInserimentoColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property DataModifica() As Date
                Get
                    Return CType(Me(Me.tableBeRefertiLista.DataModificaColumn),Date)
                End Get
                Set
                    Me(Me.tableBeRefertiLista.DataModificaColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property AziendaErogante() As String
                Get
                    Return CType(Me(Me.tableBeRefertiLista.AziendaEroganteColumn),String)
                End Get
                Set
                    Me(Me.tableBeRefertiLista.AziendaEroganteColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property SistemaErogante() As String
                Get
                    Return CType(Me(Me.tableBeRefertiLista.SistemaEroganteColumn),String)
                End Get
                Set
                    Me(Me.tableBeRefertiLista.SistemaEroganteColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property RepartoErogante() As String
                Get
                    Try 
                        Return CType(Me(Me.tableBeRefertiLista.RepartoEroganteColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'RepartoErogante' in table 'BeRefertiLista' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableBeRefertiLista.RepartoEroganteColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property DataReferto() As Date
                Get
                    Return CType(Me(Me.tableBeRefertiLista.DataRefertoColumn),Date)
                End Get
                Set
                    Me(Me.tableBeRefertiLista.DataRefertoColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property NumeroReferto() As String
                Get
                    Return CType(Me(Me.tableBeRefertiLista.NumeroRefertoColumn),String)
                End Get
                Set
                    Me(Me.tableBeRefertiLista.NumeroRefertoColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property NumeroNosologico() As String
                Get
                    Try 
                        Return CType(Me(Me.tableBeRefertiLista.NumeroNosologicoColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'NumeroNosologico' in table 'BeRefertiLista' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableBeRefertiLista.NumeroNosologicoColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property NumeroPrenotazione() As String
                Get
                    Try 
                        Return CType(Me(Me.tableBeRefertiLista.NumeroPrenotazioneColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'NumeroPrenotazione' in table 'BeRefertiLista' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableBeRefertiLista.NumeroPrenotazioneColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property Cognome() As String
                Get
                    Try 
                        Return CType(Me(Me.tableBeRefertiLista.CognomeColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'Cognome' in table 'BeRefertiLista' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableBeRefertiLista.CognomeColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property Nome() As String
                Get
                    Try 
                        Return CType(Me(Me.tableBeRefertiLista.NomeColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'Nome' in table 'BeRefertiLista' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableBeRefertiLista.NomeColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property CodiceFiscale() As String
                Get
                    Try 
                        Return CType(Me(Me.tableBeRefertiLista.CodiceFiscaleColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'CodiceFiscale' in table 'BeRefertiLista' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableBeRefertiLista.CodiceFiscaleColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property DataNascita() As Date
                Get
                    Try 
                        Return CType(Me(Me.tableBeRefertiLista.DataNascitaColumn),Date)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'DataNascita' in table 'BeRefertiLista' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableBeRefertiLista.DataNascitaColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property ComuneNascita() As String
                Get
                    Try 
                        Return CType(Me(Me.tableBeRefertiLista.ComuneNascitaColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'ComuneNascita' in table 'BeRefertiLista' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableBeRefertiLista.ComuneNascitaColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property CodiceSanitario() As String
                Get
                    Try 
                        Return CType(Me(Me.tableBeRefertiLista.CodiceSanitarioColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'CodiceSanitario' in table 'BeRefertiLista' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableBeRefertiLista.CodiceSanitarioColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property RepartoRichiedenteCodice() As String
                Get
                    Try 
                        Return CType(Me(Me.tableBeRefertiLista.RepartoRichiedenteCodiceColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'RepartoRichiedenteCodice' in table 'BeRefertiLista' is DBNu"& _ 
                                "ll.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableBeRefertiLista.RepartoRichiedenteCodiceColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property RepartoRichiedenteDescr() As String
                Get
                    Try 
                        Return CType(Me(Me.tableBeRefertiLista.RepartoRichiedenteDescrColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'RepartoRichiedenteDescr' in table 'BeRefertiLista' is DBNul"& _ 
                                "l.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableBeRefertiLista.RepartoRichiedenteDescrColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property StatoRichiestaCodice() As String
                Get
                    Try 
                        Return CType(Me(Me.tableBeRefertiLista.StatoRichiestaCodiceColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'StatoRichiestaCodice' in table 'BeRefertiLista' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableBeRefertiLista.StatoRichiestaCodiceColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property StatoRichiestaDescr() As String
                Get
                    Try 
                        Return CType(Me(Me.tableBeRefertiLista.StatoRichiestaDescrColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'StatoRichiestaDescr' in table 'BeRefertiLista' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableBeRefertiLista.StatoRichiestaDescrColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property CodiceOscuramento() As String
                Get
                    Try 
                        Return CType(Me(Me.tableBeRefertiLista.CodiceOscuramentoColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'CodiceOscuramento' in table 'BeRefertiLista' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableBeRefertiLista.CodiceOscuramentoColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function IsIdPazienteNull() As Boolean
                Return Me.IsNull(Me.tableBeRefertiLista.IdPazienteColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub SetIdPazienteNull()
                Me(Me.tableBeRefertiLista.IdPazienteColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function IsRepartoEroganteNull() As Boolean
                Return Me.IsNull(Me.tableBeRefertiLista.RepartoEroganteColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub SetRepartoEroganteNull()
                Me(Me.tableBeRefertiLista.RepartoEroganteColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function IsNumeroNosologicoNull() As Boolean
                Return Me.IsNull(Me.tableBeRefertiLista.NumeroNosologicoColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub SetNumeroNosologicoNull()
                Me(Me.tableBeRefertiLista.NumeroNosologicoColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function IsNumeroPrenotazioneNull() As Boolean
                Return Me.IsNull(Me.tableBeRefertiLista.NumeroPrenotazioneColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub SetNumeroPrenotazioneNull()
                Me(Me.tableBeRefertiLista.NumeroPrenotazioneColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function IsCognomeNull() As Boolean
                Return Me.IsNull(Me.tableBeRefertiLista.CognomeColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub SetCognomeNull()
                Me(Me.tableBeRefertiLista.CognomeColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function IsNomeNull() As Boolean
                Return Me.IsNull(Me.tableBeRefertiLista.NomeColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub SetNomeNull()
                Me(Me.tableBeRefertiLista.NomeColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function IsCodiceFiscaleNull() As Boolean
                Return Me.IsNull(Me.tableBeRefertiLista.CodiceFiscaleColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub SetCodiceFiscaleNull()
                Me(Me.tableBeRefertiLista.CodiceFiscaleColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function IsDataNascitaNull() As Boolean
                Return Me.IsNull(Me.tableBeRefertiLista.DataNascitaColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub SetDataNascitaNull()
                Me(Me.tableBeRefertiLista.DataNascitaColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function IsComuneNascitaNull() As Boolean
                Return Me.IsNull(Me.tableBeRefertiLista.ComuneNascitaColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub SetComuneNascitaNull()
                Me(Me.tableBeRefertiLista.ComuneNascitaColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function IsCodiceSanitarioNull() As Boolean
                Return Me.IsNull(Me.tableBeRefertiLista.CodiceSanitarioColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub SetCodiceSanitarioNull()
                Me(Me.tableBeRefertiLista.CodiceSanitarioColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function IsRepartoRichiedenteCodiceNull() As Boolean
                Return Me.IsNull(Me.tableBeRefertiLista.RepartoRichiedenteCodiceColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub SetRepartoRichiedenteCodiceNull()
                Me(Me.tableBeRefertiLista.RepartoRichiedenteCodiceColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function IsRepartoRichiedenteDescrNull() As Boolean
                Return Me.IsNull(Me.tableBeRefertiLista.RepartoRichiedenteDescrColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub SetRepartoRichiedenteDescrNull()
                Me(Me.tableBeRefertiLista.RepartoRichiedenteDescrColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function IsStatoRichiestaCodiceNull() As Boolean
                Return Me.IsNull(Me.tableBeRefertiLista.StatoRichiestaCodiceColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub SetStatoRichiestaCodiceNull()
                Me(Me.tableBeRefertiLista.StatoRichiestaCodiceColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function IsStatoRichiestaDescrNull() As Boolean
                Return Me.IsNull(Me.tableBeRefertiLista.StatoRichiestaDescrColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub SetStatoRichiestaDescrNull()
                Me(Me.tableBeRefertiLista.StatoRichiestaDescrColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function IsCodiceOscuramentoNull() As Boolean
                Return Me.IsNull(Me.tableBeRefertiLista.CodiceOscuramentoColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub SetCodiceOscuramentoNull()
                Me(Me.tableBeRefertiLista.CodiceOscuramentoColumn) = Global.System.Convert.DBNull
            End Sub
        End Class
        
        '''<summary>
        '''Represents strongly named DataRow class.
        '''</summary>
        Partial Public Class StampeSottoscrizioniStatiListaRow
            Inherits Global.System.Data.DataRow
            
            Private tableStampeSottoscrizioniStatiLista As StampeSottoscrizioniStatiListaDataTable
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
                MyBase.New(rb)
                Me.tableStampeSottoscrizioniStatiLista = CType(Me.Table,StampeSottoscrizioniStatiListaDataTable)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property Id() As Integer
                Get
                    Return CType(Me(Me.tableStampeSottoscrizioniStatiLista.IdColumn),Integer)
                End Get
                Set
                    Me(Me.tableStampeSottoscrizioniStatiLista.IdColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property Descrizione() As String
                Get
                    Try 
                        Return CType(Me(Me.tableStampeSottoscrizioniStatiLista.DescrizioneColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'Descrizione' in table 'StampeSottoscrizioniStatiLista' is D"& _ 
                                "BNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableStampeSottoscrizioniStatiLista.DescrizioneColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function IsDescrizioneNull() As Boolean
                Return Me.IsNull(Me.tableStampeSottoscrizioniStatiLista.DescrizioneColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub SetDescrizioneNull()
                Me(Me.tableStampeSottoscrizioniStatiLista.DescrizioneColumn) = Global.System.Convert.DBNull
            End Sub
        End Class
        
        '''<summary>
        '''Represents strongly named DataRow class.
        '''</summary>
        Partial Public Class StampeSottoscrizioniTipoRefertiListaRow
            Inherits Global.System.Data.DataRow
            
            Private tableStampeSottoscrizioniTipoRefertiLista As StampeSottoscrizioniTipoRefertiListaDataTable
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
                MyBase.New(rb)
                Me.tableStampeSottoscrizioniTipoRefertiLista = CType(Me.Table,StampeSottoscrizioniTipoRefertiListaDataTable)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property Id() As Integer
                Get
                    Return CType(Me(Me.tableStampeSottoscrizioniTipoRefertiLista.IdColumn),Integer)
                End Get
                Set
                    Me(Me.tableStampeSottoscrizioniTipoRefertiLista.IdColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property Descrizione() As String
                Get
                    Try 
                        Return CType(Me(Me.tableStampeSottoscrizioniTipoRefertiLista.DescrizioneColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'Descrizione' in table 'StampeSottoscrizioniTipoRefertiLista"& _ 
                                "' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableStampeSottoscrizioniTipoRefertiLista.DescrizioneColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function IsDescrizioneNull() As Boolean
                Return Me.IsNull(Me.tableStampeSottoscrizioniTipoRefertiLista.DescrizioneColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub SetDescrizioneNull()
                Me(Me.tableStampeSottoscrizioniTipoRefertiLista.DescrizioneColumn) = Global.System.Convert.DBNull
            End Sub
        End Class
        
        '''<summary>
        '''Represents strongly named DataRow class.
        '''</summary>
        Partial Public Class StampeSottoscrizioniTipoSottoscrizioniListaRow
            Inherits Global.System.Data.DataRow
            
            Private tableStampeSottoscrizioniTipoSottoscrizioniLista As StampeSottoscrizioniTipoSottoscrizioniListaDataTable
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
                MyBase.New(rb)
                Me.tableStampeSottoscrizioniTipoSottoscrizioniLista = CType(Me.Table,StampeSottoscrizioniTipoSottoscrizioniListaDataTable)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property Id() As Integer
                Get
                    Return CType(Me(Me.tableStampeSottoscrizioniTipoSottoscrizioniLista.IdColumn),Integer)
                End Get
                Set
                    Me(Me.tableStampeSottoscrizioniTipoSottoscrizioniLista.IdColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property Descrizione() As String
                Get
                    Try 
                        Return CType(Me(Me.tableStampeSottoscrizioniTipoSottoscrizioniLista.DescrizioneColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'Descrizione' in table 'StampeSottoscrizioniTipoSottoscrizio"& _ 
                                "niLista' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableStampeSottoscrizioniTipoSottoscrizioniLista.DescrizioneColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function IsDescrizioneNull() As Boolean
                Return Me.IsNull(Me.tableStampeSottoscrizioniTipoSottoscrizioniLista.DescrizioneColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub SetDescrizioneNull()
                Me(Me.tableStampeSottoscrizioniTipoSottoscrizioniLista.DescrizioneColumn) = Global.System.Convert.DBNull
            End Sub
        End Class
        
        '''<summary>
        '''Represents strongly named DataRow class.
        '''</summary>
        Partial Public Class StampeSottoscrizioniSistemiErogantiListaRow
            Inherits Global.System.Data.DataRow
            
            Private tableStampeSottoscrizioniSistemiErogantiLista As StampeSottoscrizioniSistemiErogantiListaDataTable
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
                MyBase.New(rb)
                Me.tableStampeSottoscrizioniSistemiErogantiLista = CType(Me.Table,StampeSottoscrizioniSistemiErogantiListaDataTable)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property Codice() As String
                Get
                    Return CType(Me(Me.tableStampeSottoscrizioniSistemiErogantiLista.CodiceColumn),String)
                End Get
                Set
                    Me(Me.tableStampeSottoscrizioniSistemiErogantiLista.CodiceColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property Descrizione() As String
                Get
                    Try 
                        Return CType(Me(Me.tableStampeSottoscrizioniSistemiErogantiLista.DescrizioneColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'Descrizione' in table 'StampeSottoscrizioniSistemiErogantiL"& _ 
                                "ista' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableStampeSottoscrizioniSistemiErogantiLista.DescrizioneColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function IsDescrizioneNull() As Boolean
                Return Me.IsNull(Me.tableStampeSottoscrizioniSistemiErogantiLista.DescrizioneColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub SetDescrizioneNull()
                Me(Me.tableStampeSottoscrizioniSistemiErogantiLista.DescrizioneColumn) = Global.System.Convert.DBNull
            End Sub
        End Class
        
        '''<summary>
        '''Represents strongly named DataRow class.
        '''</summary>
        Partial Public Class StampeSottoscrizioniRepartiRichiedentiListaRow
            Inherits Global.System.Data.DataRow
            
            Private tableStampeSottoscrizioniRepartiRichiedentiLista As StampeSottoscrizioniRepartiRichiedentiListaDataTable
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
                MyBase.New(rb)
                Me.tableStampeSottoscrizioniRepartiRichiedentiLista = CType(Me.Table,StampeSottoscrizioniRepartiRichiedentiListaDataTable)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property Id() As System.Guid
                Get
                    Return CType(Me(Me.tableStampeSottoscrizioniRepartiRichiedentiLista.IdColumn),Global.System.Guid)
                End Get
                Set
                    Me(Me.tableStampeSottoscrizioniRepartiRichiedentiLista.IdColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property RepartoRichiedenteCodice() As String
                Get
                    Try 
                        Return CType(Me(Me.tableStampeSottoscrizioniRepartiRichiedentiLista.RepartoRichiedenteCodiceColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'RepartoRichiedenteCodice' in table 'StampeSottoscrizioniRep"& _ 
                                "artiRichiedentiLista' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableStampeSottoscrizioniRepartiRichiedentiLista.RepartoRichiedenteCodiceColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property RepartoRichiedenteDescrizione() As String
                Get
                    Try 
                        Return CType(Me(Me.tableStampeSottoscrizioniRepartiRichiedentiLista.RepartoRichiedenteDescrizioneColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'RepartoRichiedenteDescrizione' in table 'StampeSottoscrizio"& _ 
                                "niRepartiRichiedentiLista' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableStampeSottoscrizioniRepartiRichiedentiLista.RepartoRichiedenteDescrizioneColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property SistemaErogante() As String
                Get
                    Return CType(Me(Me.tableStampeSottoscrizioniRepartiRichiedentiLista.SistemaEroganteColumn),String)
                End Get
                Set
                    Me(Me.tableStampeSottoscrizioniRepartiRichiedentiLista.SistemaEroganteColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property AziendaErogante() As String
                Get
                    Return CType(Me(Me.tableStampeSottoscrizioniRepartiRichiedentiLista.AziendaEroganteColumn),String)
                End Get
                Set
                    Me(Me.tableStampeSottoscrizioniRepartiRichiedentiLista.AziendaEroganteColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property IdReparto() As System.Guid
                Get
                    Return CType(Me(Me.tableStampeSottoscrizioniRepartiRichiedentiLista.IdRepartoColumn),Global.System.Guid)
                End Get
                Set
                    Me(Me.tableStampeSottoscrizioniRepartiRichiedentiLista.IdRepartoColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function IsRepartoRichiedenteCodiceNull() As Boolean
                Return Me.IsNull(Me.tableStampeSottoscrizioniRepartiRichiedentiLista.RepartoRichiedenteCodiceColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub SetRepartoRichiedenteCodiceNull()
                Me(Me.tableStampeSottoscrizioniRepartiRichiedentiLista.RepartoRichiedenteCodiceColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function IsRepartoRichiedenteDescrizioneNull() As Boolean
                Return Me.IsNull(Me.tableStampeSottoscrizioniRepartiRichiedentiLista.RepartoRichiedenteDescrizioneColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub SetRepartoRichiedenteDescrizioneNull()
                Me(Me.tableStampeSottoscrizioniRepartiRichiedentiLista.RepartoRichiedenteDescrizioneColumn) = Global.System.Convert.DBNull
            End Sub
        End Class
        
        '''<summary>
        '''Represents strongly named DataRow class.
        '''</summary>
        Partial Public Class StampeSottoscrizioniListaRow
            Inherits Global.System.Data.DataRow
            
            Private tableStampeSottoscrizioniLista As StampeSottoscrizioniListaDataTable
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
                MyBase.New(rb)
                Me.tableStampeSottoscrizioniLista = CType(Me.Table,StampeSottoscrizioniListaDataTable)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property Id() As System.Guid
                Get
                    Return CType(Me(Me.tableStampeSottoscrizioniLista.IdColumn),Global.System.Guid)
                End Get
                Set
                    Me(Me.tableStampeSottoscrizioniLista.IdColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property DataInserimento() As Date
                Get
                    Return CType(Me(Me.tableStampeSottoscrizioniLista.DataInserimentoColumn),Date)
                End Get
                Set
                    Me(Me.tableStampeSottoscrizioniLista.DataInserimentoColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property DataModifica() As Date
                Get
                    Return CType(Me(Me.tableStampeSottoscrizioniLista.DataModificaColumn),Date)
                End Get
                Set
                    Me(Me.tableStampeSottoscrizioniLista.DataModificaColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property Account() As String
                Get
                    Return CType(Me(Me.tableStampeSottoscrizioniLista.AccountColumn),String)
                End Get
                Set
                    Me(Me.tableStampeSottoscrizioniLista.AccountColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property DataInizio() As Date
                Get
                    Return CType(Me(Me.tableStampeSottoscrizioniLista.DataInizioColumn),Date)
                End Get
                Set
                    Me(Me.tableStampeSottoscrizioniLista.DataInizioColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property DataFine() As Date
                Get
                    Return CType(Me(Me.tableStampeSottoscrizioniLista.DataFineColumn),Date)
                End Get
                Set
                    Me(Me.tableStampeSottoscrizioniLista.DataFineColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property IdTipoReferti() As Integer
                Get
                    Return CType(Me(Me.tableStampeSottoscrizioniLista.IdTipoRefertiColumn),Integer)
                End Get
                Set
                    Me(Me.tableStampeSottoscrizioniLista.IdTipoRefertiColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property TipoReferti() As String
                Get
                    Try 
                        Return CType(Me(Me.tableStampeSottoscrizioniLista.TipoRefertiColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'TipoReferti' in table 'StampeSottoscrizioniLista' is DBNull"& _ 
                                ".", e)
                    End Try
                End Get
                Set
                    Me(Me.tableStampeSottoscrizioniLista.TipoRefertiColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property ServerDiStampa() As String
                Get
                    Try 
                        Return CType(Me(Me.tableStampeSottoscrizioniLista.ServerDiStampaColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'ServerDiStampa' in table 'StampeSottoscrizioniLista' is DBN"& _ 
                                "ull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableStampeSottoscrizioniLista.ServerDiStampaColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property Stampante() As String
                Get
                    Try 
                        Return CType(Me(Me.tableStampeSottoscrizioniLista.StampanteColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'Stampante' in table 'StampeSottoscrizioniLista' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableStampeSottoscrizioniLista.StampanteColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property IdStato() As Integer
                Get
                    Return CType(Me(Me.tableStampeSottoscrizioniLista.IdStatoColumn),Integer)
                End Get
                Set
                    Me(Me.tableStampeSottoscrizioniLista.IdStatoColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property Stato() As String
                Get
                    Try 
                        Return CType(Me(Me.tableStampeSottoscrizioniLista.StatoColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'Stato' in table 'StampeSottoscrizioniLista' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableStampeSottoscrizioniLista.StatoColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property TipoSottoscrizione() As String
                Get
                    Try 
                        Return CType(Me(Me.tableStampeSottoscrizioniLista.TipoSottoscrizioneColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'TipoSottoscrizione' in table 'StampeSottoscrizioniLista' is"& _ 
                                " DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableStampeSottoscrizioniLista.TipoSottoscrizioneColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property Ts() As Byte()
                Get
                    Try 
                        Return CType(Me(Me.tableStampeSottoscrizioniLista.TsColumn),Byte())
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'Ts' in table 'StampeSottoscrizioniLista' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableStampeSottoscrizioniLista.TsColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property Nome() As String
                Get
                    Return CType(Me(Me.tableStampeSottoscrizioniLista.NomeColumn),String)
                End Get
                Set
                    Me(Me.tableStampeSottoscrizioniLista.NomeColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property Descrizione() As String
                Get
                    Try 
                        Return CType(Me(Me.tableStampeSottoscrizioniLista.DescrizioneColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'Descrizione' in table 'StampeSottoscrizioniLista' is DBNull"& _ 
                                ".", e)
                    End Try
                End Get
                Set
                    Me(Me.tableStampeSottoscrizioniLista.DescrizioneColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property StampaConfidenziali() As Boolean
                Get
                    Return CType(Me(Me.tableStampeSottoscrizioniLista.StampaConfidenzialiColumn),Boolean)
                End Get
                Set
                    Me(Me.tableStampeSottoscrizioniLista.StampaConfidenzialiColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property StampaOscurati() As Boolean
                Get
                    Return CType(Me(Me.tableStampeSottoscrizioniLista.StampaOscuratiColumn),Boolean)
                End Get
                Set
                    Me(Me.tableStampeSottoscrizioniLista.StampaOscuratiColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property NumeroCopie() As Byte
                Get
                    Return CType(Me(Me.tableStampeSottoscrizioniLista.NumeroCopieColumn),Byte)
                End Get
                Set
                    Me(Me.tableStampeSottoscrizioniLista.NumeroCopieColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function IsTipoRefertiNull() As Boolean
                Return Me.IsNull(Me.tableStampeSottoscrizioniLista.TipoRefertiColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub SetTipoRefertiNull()
                Me(Me.tableStampeSottoscrizioniLista.TipoRefertiColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function IsServerDiStampaNull() As Boolean
                Return Me.IsNull(Me.tableStampeSottoscrizioniLista.ServerDiStampaColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub SetServerDiStampaNull()
                Me(Me.tableStampeSottoscrizioniLista.ServerDiStampaColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function IsStampanteNull() As Boolean
                Return Me.IsNull(Me.tableStampeSottoscrizioniLista.StampanteColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub SetStampanteNull()
                Me(Me.tableStampeSottoscrizioniLista.StampanteColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function IsStatoNull() As Boolean
                Return Me.IsNull(Me.tableStampeSottoscrizioniLista.StatoColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub SetStatoNull()
                Me(Me.tableStampeSottoscrizioniLista.StatoColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function IsTipoSottoscrizioneNull() As Boolean
                Return Me.IsNull(Me.tableStampeSottoscrizioniLista.TipoSottoscrizioneColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub SetTipoSottoscrizioneNull()
                Me(Me.tableStampeSottoscrizioniLista.TipoSottoscrizioneColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function IsTsNull() As Boolean
                Return Me.IsNull(Me.tableStampeSottoscrizioniLista.TsColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub SetTsNull()
                Me(Me.tableStampeSottoscrizioniLista.TsColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function IsDescrizioneNull() As Boolean
                Return Me.IsNull(Me.tableStampeSottoscrizioniLista.DescrizioneColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub SetDescrizioneNull()
                Me(Me.tableStampeSottoscrizioniLista.DescrizioneColumn) = Global.System.Convert.DBNull
            End Sub
        End Class
        
        '''<summary>
        '''Represents strongly named DataRow class.
        '''</summary>
        Partial Public Class StampeSottoscrizioniDettaglioRow
            Inherits Global.System.Data.DataRow
            
            Private tableStampeSottoscrizioniDettaglio As StampeSottoscrizioniDettaglioDataTable
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
                MyBase.New(rb)
                Me.tableStampeSottoscrizioniDettaglio = CType(Me.Table,StampeSottoscrizioniDettaglioDataTable)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property Id() As System.Guid
                Get
                    Return CType(Me(Me.tableStampeSottoscrizioniDettaglio.IdColumn),Global.System.Guid)
                End Get
                Set
                    Me(Me.tableStampeSottoscrizioniDettaglio.IdColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property Account() As String
                Get
                    Return CType(Me(Me.tableStampeSottoscrizioniDettaglio.AccountColumn),String)
                End Get
                Set
                    Me(Me.tableStampeSottoscrizioniDettaglio.AccountColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property DataFine() As Date
                Get
                    Return CType(Me(Me.tableStampeSottoscrizioniDettaglio.DataFineColumn),Date)
                End Get
                Set
                    Me(Me.tableStampeSottoscrizioniDettaglio.DataFineColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property IdTipoReferti() As Integer
                Get
                    Return CType(Me(Me.tableStampeSottoscrizioniDettaglio.IdTipoRefertiColumn),Integer)
                End Get
                Set
                    Me(Me.tableStampeSottoscrizioniDettaglio.IdTipoRefertiColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property ServerDiStampa() As String
                Get
                    Try 
                        Return CType(Me(Me.tableStampeSottoscrizioniDettaglio.ServerDiStampaColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'ServerDiStampa' in table 'StampeSottoscrizioniDettaglio' is"& _ 
                                " DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableStampeSottoscrizioniDettaglio.ServerDiStampaColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property Stampante() As String
                Get
                    Try 
                        Return CType(Me(Me.tableStampeSottoscrizioniDettaglio.StampanteColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'Stampante' in table 'StampeSottoscrizioniDettaglio' is DBNu"& _ 
                                "ll.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableStampeSottoscrizioniDettaglio.StampanteColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property IdStato() As Integer
                Get
                    Return CType(Me(Me.tableStampeSottoscrizioniDettaglio.IdStatoColumn),Integer)
                End Get
                Set
                    Me(Me.tableStampeSottoscrizioniDettaglio.IdStatoColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property IdTipoSottoscrizione() As Integer
                Get
                    Return CType(Me(Me.tableStampeSottoscrizioniDettaglio.IdTipoSottoscrizioneColumn),Integer)
                End Get
                Set
                    Me(Me.tableStampeSottoscrizioniDettaglio.IdTipoSottoscrizioneColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property Ts() As Byte()
                Get
                    Try 
                        Return CType(Me(Me.tableStampeSottoscrizioniDettaglio.TsColumn),Byte())
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'Ts' in table 'StampeSottoscrizioniDettaglio' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableStampeSottoscrizioniDettaglio.TsColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property Nome() As String
                Get
                    Return CType(Me(Me.tableStampeSottoscrizioniDettaglio.NomeColumn),String)
                End Get
                Set
                    Me(Me.tableStampeSottoscrizioniDettaglio.NomeColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property Descrizione() As String
                Get
                    Try 
                        Return CType(Me(Me.tableStampeSottoscrizioniDettaglio.DescrizioneColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'Descrizione' in table 'StampeSottoscrizioniDettaglio' is DB"& _ 
                                "Null.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableStampeSottoscrizioniDettaglio.DescrizioneColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property Stato() As String
                Get
                    Try 
                        Return CType(Me(Me.tableStampeSottoscrizioniDettaglio.StatoColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'Stato' in table 'StampeSottoscrizioniDettaglio' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableStampeSottoscrizioniDettaglio.StatoColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property StampaConfidenziali() As Boolean
                Get
                    Return CType(Me(Me.tableStampeSottoscrizioniDettaglio.StampaConfidenzialiColumn),Boolean)
                End Get
                Set
                    Me(Me.tableStampeSottoscrizioniDettaglio.StampaConfidenzialiColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property StampaOscurati() As Boolean
                Get
                    Return CType(Me(Me.tableStampeSottoscrizioniDettaglio.StampaOscuratiColumn),Boolean)
                End Get
                Set
                    Me(Me.tableStampeSottoscrizioniDettaglio.StampaOscuratiColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property NumeroCopie() As Byte
                Get
                    Return CType(Me(Me.tableStampeSottoscrizioniDettaglio.NumeroCopieColumn),Byte)
                End Get
                Set
                    Me(Me.tableStampeSottoscrizioniDettaglio.NumeroCopieColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function IsServerDiStampaNull() As Boolean
                Return Me.IsNull(Me.tableStampeSottoscrizioniDettaglio.ServerDiStampaColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub SetServerDiStampaNull()
                Me(Me.tableStampeSottoscrizioniDettaglio.ServerDiStampaColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function IsStampanteNull() As Boolean
                Return Me.IsNull(Me.tableStampeSottoscrizioniDettaglio.StampanteColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub SetStampanteNull()
                Me(Me.tableStampeSottoscrizioniDettaglio.StampanteColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function IsTsNull() As Boolean
                Return Me.IsNull(Me.tableStampeSottoscrizioniDettaglio.TsColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub SetTsNull()
                Me(Me.tableStampeSottoscrizioniDettaglio.TsColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function IsDescrizioneNull() As Boolean
                Return Me.IsNull(Me.tableStampeSottoscrizioniDettaglio.DescrizioneColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub SetDescrizioneNull()
                Me(Me.tableStampeSottoscrizioniDettaglio.DescrizioneColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function IsStatoNull() As Boolean
                Return Me.IsNull(Me.tableStampeSottoscrizioniDettaglio.StatoColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub SetStatoNull()
                Me(Me.tableStampeSottoscrizioniDettaglio.StatoColumn) = Global.System.Convert.DBNull
            End Sub
        End Class
        
        '''<summary>
        '''Represents strongly named DataRow class.
        '''</summary>
        Partial Public Class StampeSottoscrizioniRepartiRichiedentiSelezionabiliRow
            Inherits Global.System.Data.DataRow
            
            Private tableStampeSottoscrizioniRepartiRichiedentiSelezionabili As StampeSottoscrizioniRepartiRichiedentiSelezionabiliDataTable
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
                MyBase.New(rb)
                Me.tableStampeSottoscrizioniRepartiRichiedentiSelezionabili = CType(Me.Table,StampeSottoscrizioniRepartiRichiedentiSelezionabiliDataTable)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property Id() As System.Guid
                Get
                    Return CType(Me(Me.tableStampeSottoscrizioniRepartiRichiedentiSelezionabili.IdColumn),Global.System.Guid)
                End Get
                Set
                    Me(Me.tableStampeSottoscrizioniRepartiRichiedentiSelezionabili.IdColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property RepartoRichiedenteDescrizione() As String
                Get
                    Try 
                        Return CType(Me(Me.tableStampeSottoscrizioniRepartiRichiedentiSelezionabili.RepartoRichiedenteDescrizioneColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'RepartoRichiedenteDescrizione' in table 'StampeSottoscrizio"& _ 
                                "niRepartiRichiedentiSelezionabili' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableStampeSottoscrizioniRepartiRichiedentiSelezionabili.RepartoRichiedenteDescrizioneColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property RepartoRichiedenteCodice() As String
                Get
                    Try 
                        Return CType(Me(Me.tableStampeSottoscrizioniRepartiRichiedentiSelezionabili.RepartoRichiedenteCodiceColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'RepartoRichiedenteCodice' in table 'StampeSottoscrizioniRep"& _ 
                                "artiRichiedentiSelezionabili' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableStampeSottoscrizioniRepartiRichiedentiSelezionabili.RepartoRichiedenteCodiceColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property AziendaErogante() As String
                Get
                    Return CType(Me(Me.tableStampeSottoscrizioniRepartiRichiedentiSelezionabili.AziendaEroganteColumn),String)
                End Get
                Set
                    Me(Me.tableStampeSottoscrizioniRepartiRichiedentiSelezionabili.AziendaEroganteColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property SistemaErogante() As String
                Get
                    Return CType(Me(Me.tableStampeSottoscrizioniRepartiRichiedentiSelezionabili.SistemaEroganteColumn),String)
                End Get
                Set
                    Me(Me.tableStampeSottoscrizioniRepartiRichiedentiSelezionabili.SistemaEroganteColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function IsRepartoRichiedenteDescrizioneNull() As Boolean
                Return Me.IsNull(Me.tableStampeSottoscrizioniRepartiRichiedentiSelezionabili.RepartoRichiedenteDescrizioneColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub SetRepartoRichiedenteDescrizioneNull()
                Me(Me.tableStampeSottoscrizioniRepartiRichiedentiSelezionabili.RepartoRichiedenteDescrizioneColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function IsRepartoRichiedenteCodiceNull() As Boolean
                Return Me.IsNull(Me.tableStampeSottoscrizioniRepartiRichiedentiSelezionabili.RepartoRichiedenteCodiceColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub SetRepartoRichiedenteCodiceNull()
                Me(Me.tableStampeSottoscrizioniRepartiRichiedentiSelezionabili.RepartoRichiedenteCodiceColumn) = Global.System.Convert.DBNull
            End Sub
        End Class
        
        '''<summary>
        '''Represents strongly named DataRow class.
        '''</summary>
        Partial Public Class SistemiErogantiListaRow
            Inherits Global.System.Data.DataRow
            
            Private tableSistemiErogantiLista As SistemiErogantiListaDataTable
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
                MyBase.New(rb)
                Me.tableSistemiErogantiLista = CType(Me.Table,SistemiErogantiListaDataTable)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property Codice() As String
                Get
                    Return CType(Me(Me.tableSistemiErogantiLista.CodiceColumn),String)
                End Get
                Set
                    Me(Me.tableSistemiErogantiLista.CodiceColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property Descrizione() As String
                Get
                    Try 
                        Return CType(Me(Me.tableSistemiErogantiLista.DescrizioneColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'Descrizione' in table 'SistemiErogantiLista' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableSistemiErogantiLista.DescrizioneColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function IsDescrizioneNull() As Boolean
                Return Me.IsNull(Me.tableSistemiErogantiLista.DescrizioneColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub SetDescrizioneNull()
                Me(Me.tableSistemiErogantiLista.DescrizioneColumn) = Global.System.Convert.DBNull
            End Sub
        End Class
        
        '''<summary>
        '''Represents strongly named DataRow class.
        '''</summary>
        Partial Public Class AziendeErogantiListaRow
            Inherits Global.System.Data.DataRow
            
            Private tableAziendeErogantiLista As AziendeErogantiListaDataTable
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
                MyBase.New(rb)
                Me.tableAziendeErogantiLista = CType(Me.Table,AziendeErogantiListaDataTable)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property Codice() As String
                Get
                    Return CType(Me(Me.tableAziendeErogantiLista.CodiceColumn),String)
                End Get
                Set
                    Me(Me.tableAziendeErogantiLista.CodiceColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property Descrizione() As String
                Get
                    Return CType(Me(Me.tableAziendeErogantiLista.DescrizioneColumn),String)
                End Get
                Set
                    Me(Me.tableAziendeErogantiLista.DescrizioneColumn) = value
                End Set
            End Property
        End Class
        
        '''<summary>
        '''Represents strongly named DataRow class.
        '''</summary>
        Partial Public Class GetDocumentoSistemiErogantiRow
            Inherits Global.System.Data.DataRow
            
            Private tableGetDocumentoSistemiEroganti As GetDocumentoSistemiErogantiDataTable
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
                MyBase.New(rb)
                Me.tableGetDocumentoSistemiEroganti = CType(Me.Table,GetDocumentoSistemiErogantiDataTable)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property Id() As System.Guid
                Get
                    Return CType(Me(Me.tableGetDocumentoSistemiEroganti.IdColumn),Global.System.Guid)
                End Get
                Set
                    Me(Me.tableGetDocumentoSistemiEroganti.IdColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property Nome() As String
                Get
                    Return CType(Me(Me.tableGetDocumentoSistemiEroganti.NomeColumn),String)
                End Get
                Set
                    Me(Me.tableGetDocumentoSistemiEroganti.NomeColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property Estensione() As String
                Get
                    Return CType(Me(Me.tableGetDocumentoSistemiEroganti.EstensioneColumn),String)
                End Get
                Set
                    Me(Me.tableGetDocumentoSistemiEroganti.EstensioneColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property Dimensione() As Integer
                Get
                    Return CType(Me(Me.tableGetDocumentoSistemiEroganti.DimensioneColumn),Integer)
                End Get
                Set
                    Me(Me.tableGetDocumentoSistemiEroganti.DimensioneColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property ContentType() As String
                Get
                    Return CType(Me(Me.tableGetDocumentoSistemiEroganti.ContentTypeColumn),String)
                End Get
                Set
                    Me(Me.tableGetDocumentoSistemiEroganti.ContentTypeColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property Contenuto() As Byte()
                Get
                    Return CType(Me(Me.tableGetDocumentoSistemiEroganti.ContenutoColumn),Byte())
                End Get
                Set
                    Me(Me.tableGetDocumentoSistemiEroganti.ContenutoColumn) = value
                End Set
            End Property
        End Class
        
        '''<summary>
        '''Represents strongly named DataRow class.
        '''</summary>
        Partial Public Class UtentiRow
            Inherits Global.System.Data.DataRow
            
            Private tableUtenti As UtentiDataTable
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
                MyBase.New(rb)
                Me.tableUtenti = CType(Me.Table,UtentiDataTable)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property Id() As System.Guid
                Get
                    Return CType(Me(Me.tableUtenti.IdColumn),Global.System.Guid)
                End Get
                Set
                    Me(Me.tableUtenti.IdColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property IdRuolo() As System.Guid
                Get
                    Try 
                        Return CType(Me(Me.tableUtenti.IdRuoloColumn),Global.System.Guid)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'IdRuolo' in table 'Utenti' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableUtenti.IdRuoloColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property Utente() As String
                Get
                    Try 
                        Return CType(Me(Me.tableUtenti.UtenteColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'Utente' in table 'Utenti' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableUtenti.UtenteColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property Descrizione() As String
                Get
                    Try 
                        Return CType(Me(Me.tableUtenti.DescrizioneColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'Descrizione' in table 'Utenti' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableUtenti.DescrizioneColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property Ruolo() As String
                Get
                    Try 
                        Return CType(Me(Me.tableUtenti.RuoloColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'Ruolo' in table 'Utenti' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableUtenti.RuoloColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function IsIdRuoloNull() As Boolean
                Return Me.IsNull(Me.tableUtenti.IdRuoloColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub SetIdRuoloNull()
                Me(Me.tableUtenti.IdRuoloColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function IsUtenteNull() As Boolean
                Return Me.IsNull(Me.tableUtenti.UtenteColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub SetUtenteNull()
                Me(Me.tableUtenti.UtenteColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function IsDescrizioneNull() As Boolean
                Return Me.IsNull(Me.tableUtenti.DescrizioneColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub SetDescrizioneNull()
                Me(Me.tableUtenti.DescrizioneColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function IsRuoloNull() As Boolean
                Return Me.IsNull(Me.tableUtenti.RuoloColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub SetRuoloNull()
                Me(Me.tableUtenti.RuoloColumn) = Global.System.Convert.DBNull
            End Sub
        End Class
        
        '''<summary>
        '''Represents strongly named DataRow class.
        '''</summary>
        Partial Public Class RuoliRow
            Inherits Global.System.Data.DataRow
            
            Private tableRuoli As RuoliDataTable
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
                MyBase.New(rb)
                Me.tableRuoli = CType(Me.Table,RuoliDataTable)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property Id() As System.Guid
                Get
                    Return CType(Me(Me.tableRuoli.IdColumn),Global.System.Guid)
                End Get
                Set
                    Me(Me.tableRuoli.IdColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property Codice() As String
                Get
                    Return CType(Me(Me.tableRuoli.CodiceColumn),String)
                End Get
                Set
                    Me(Me.tableRuoli.CodiceColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property Descrizione() As String
                Get
                    Try 
                        Return CType(Me(Me.tableRuoli.DescrizioneColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'Descrizione' in table 'Ruoli' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableRuoli.DescrizioneColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function IsDescrizioneNull() As Boolean
                Return Me.IsNull(Me.tableRuoli.DescrizioneColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub SetDescrizioneNull()
                Me(Me.tableRuoli.DescrizioneColumn) = Global.System.Convert.DBNull
            End Sub
        End Class
        
        '''<summary>
        '''Represents strongly named DataRow class.
        '''</summary>
        Partial Public Class SACUtentiRow
            Inherits Global.System.Data.DataRow
            
            Private tableSACUtenti As SACUtentiDataTable
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
                MyBase.New(rb)
                Me.tableSACUtenti = CType(Me.Table,SACUtentiDataTable)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property Id() As System.Guid
                Get
                    Return CType(Me(Me.tableSACUtenti.IdColumn),Global.System.Guid)
                End Get
                Set
                    Me(Me.tableSACUtenti.IdColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property Utente() As String
                Get
                    Return CType(Me(Me.tableSACUtenti.UtenteColumn),String)
                End Get
                Set
                    Me(Me.tableSACUtenti.UtenteColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property Descrizione() As String
                Get
                    Try 
                        Return CType(Me(Me.tableSACUtenti.DescrizioneColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'Descrizione' in table 'SACUtenti' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableSACUtenti.DescrizioneColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property Cognome() As String
                Get
                    Try 
                        Return CType(Me(Me.tableSACUtenti.CognomeColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'Cognome' in table 'SACUtenti' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableSACUtenti.CognomeColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property Nome() As String
                Get
                    Try 
                        Return CType(Me(Me.tableSACUtenti.NomeColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'Nome' in table 'SACUtenti' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableSACUtenti.NomeColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property CodiceFiscale() As String
                Get
                    Try 
                        Return CType(Me(Me.tableSACUtenti.CodiceFiscaleColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'CodiceFiscale' in table 'SACUtenti' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableSACUtenti.CodiceFiscaleColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property Matricola() As String
                Get
                    Try 
                        Return CType(Me(Me.tableSACUtenti.MatricolaColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'Matricola' in table 'SACUtenti' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableSACUtenti.MatricolaColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property Email() As String
                Get
                    Try 
                        Return CType(Me(Me.tableSACUtenti.EmailColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'Email' in table 'SACUtenti' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableSACUtenti.EmailColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property Attivo() As Boolean
                Get
                    Return CType(Me(Me.tableSACUtenti.AttivoColumn),Boolean)
                End Get
                Set
                    Me(Me.tableSACUtenti.AttivoColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function IsDescrizioneNull() As Boolean
                Return Me.IsNull(Me.tableSACUtenti.DescrizioneColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub SetDescrizioneNull()
                Me(Me.tableSACUtenti.DescrizioneColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function IsCognomeNull() As Boolean
                Return Me.IsNull(Me.tableSACUtenti.CognomeColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub SetCognomeNull()
                Me(Me.tableSACUtenti.CognomeColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function IsNomeNull() As Boolean
                Return Me.IsNull(Me.tableSACUtenti.NomeColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub SetNomeNull()
                Me(Me.tableSACUtenti.NomeColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function IsCodiceFiscaleNull() As Boolean
                Return Me.IsNull(Me.tableSACUtenti.CodiceFiscaleColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub SetCodiceFiscaleNull()
                Me(Me.tableSACUtenti.CodiceFiscaleColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function IsMatricolaNull() As Boolean
                Return Me.IsNull(Me.tableSACUtenti.MatricolaColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub SetMatricolaNull()
                Me(Me.tableSACUtenti.MatricolaColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function IsEmailNull() As Boolean
                Return Me.IsNull(Me.tableSACUtenti.EmailColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub SetEmailNull()
                Me(Me.tableSACUtenti.EmailColumn) = Global.System.Convert.DBNull
            End Sub
        End Class
        
        '''<summary>
        '''Represents strongly named DataRow class.
        '''</summary>
        Partial Public Class TipiRefertoRow
            Inherits Global.System.Data.DataRow
            
            Private tableTipiReferto As TipiRefertoDataTable
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
                MyBase.New(rb)
                Me.tableTipiReferto = CType(Me.Table,TipiRefertoDataTable)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property Id() As System.Guid
                Get
                    Return CType(Me(Me.tableTipiReferto.IdColumn),Global.System.Guid)
                End Get
                Set
                    Me(Me.tableTipiReferto.IdColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property SistemaErogante() As String
                Get
                    Return CType(Me(Me.tableTipiReferto.SistemaEroganteColumn),String)
                End Get
                Set
                    Me(Me.tableTipiReferto.SistemaEroganteColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property SpecialitaErogante() As String
                Get
                    Try 
                        Return CType(Me(Me.tableTipiReferto.SpecialitaEroganteColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'SpecialitaErogante' in table 'TipiReferto' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTipiReferto.SpecialitaEroganteColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property Descrizione() As String
                Get
                    Return CType(Me(Me.tableTipiReferto.DescrizioneColumn),String)
                End Get
                Set
                    Me(Me.tableTipiReferto.DescrizioneColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property Icona() As Byte()
                Get
                    Try 
                        Return CType(Me(Me.tableTipiReferto.IconaColumn),Byte())
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'Icona' in table 'TipiReferto' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableTipiReferto.IconaColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property Ordinamento() As Integer
                Get
                    Return CType(Me(Me.tableTipiReferto.OrdinamentoColumn),Integer)
                End Get
                Set
                    Me(Me.tableTipiReferto.OrdinamentoColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property AziendaErogante() As String
                Get
                    Return CType(Me(Me.tableTipiReferto.AziendaEroganteColumn),String)
                End Get
                Set
                    Me(Me.tableTipiReferto.AziendaEroganteColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function IsSpecialitaEroganteNull() As Boolean
                Return Me.IsNull(Me.tableTipiReferto.SpecialitaEroganteColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub SetSpecialitaEroganteNull()
                Me(Me.tableTipiReferto.SpecialitaEroganteColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function IsIconaNull() As Boolean
                Return Me.IsNull(Me.tableTipiReferto.IconaColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub SetIconaNull()
                Me(Me.tableTipiReferto.IconaColumn) = Global.System.Convert.DBNull
            End Sub
        End Class
        
        '''<summary>
        '''Represents strongly named DataRow class.
        '''</summary>
        Partial Public Class BevsSistemiErogantiRow
            Inherits Global.System.Data.DataRow
            
            Private tableBevsSistemiEroganti As BevsSistemiErogantiDataTable
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
                MyBase.New(rb)
                Me.tableBevsSistemiEroganti = CType(Me.Table,BevsSistemiErogantiDataTable)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property Id() As System.Guid
                Get
                    Return CType(Me(Me.tableBevsSistemiEroganti.IdColumn),Global.System.Guid)
                End Get
                Set
                    Me(Me.tableBevsSistemiEroganti.IdColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property AziendaErogante() As String
                Get
                    Return CType(Me(Me.tableBevsSistemiEroganti.AziendaEroganteColumn),String)
                End Get
                Set
                    Me(Me.tableBevsSistemiEroganti.AziendaEroganteColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property SistemaErogante() As String
                Get
                    Return CType(Me(Me.tableBevsSistemiEroganti.SistemaEroganteColumn),String)
                End Get
                Set
                    Me(Me.tableBevsSistemiEroganti.SistemaEroganteColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property Descrizione() As String
                Get
                    Try 
                        Return CType(Me(Me.tableBevsSistemiEroganti.DescrizioneColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'Descrizione' in table 'BevsSistemiEroganti' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableBevsSistemiEroganti.DescrizioneColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property RuoloVisualizzazione() As String
                Get
                    Try 
                        Return CType(Me(Me.tableBevsSistemiEroganti.RuoloVisualizzazioneColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'RuoloVisualizzazione' in table 'BevsSistemiEroganti' is DBN"& _ 
                                "ull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableBevsSistemiEroganti.RuoloVisualizzazioneColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property EmailControlloQualitaPassivo() As String
                Get
                    Try 
                        Return CType(Me(Me.tableBevsSistemiEroganti.EmailControlloQualitaPassivoColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'EmailControlloQualitaPassivo' in table 'BevsSistemiEroganti"& _ 
                                "' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableBevsSistemiEroganti.EmailControlloQualitaPassivoColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property TipoReferti() As Boolean
                Get
                    Return CType(Me(Me.tableBevsSistemiEroganti.TipoRefertiColumn),Boolean)
                End Get
                Set
                    Me(Me.tableBevsSistemiEroganti.TipoRefertiColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property TipoRicoveri() As Boolean
                Get
                    Return CType(Me(Me.tableBevsSistemiEroganti.TipoRicoveriColumn),Boolean)
                End Get
                Set
                    Me(Me.tableBevsSistemiEroganti.TipoRicoveriColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property TipoNoteAnamnestiche() As Boolean
                Get
                    Return CType(Me(Me.tableBevsSistemiEroganti.TipoNoteAnamnesticheColumn),Boolean)
                End Get
                Set
                    Me(Me.tableBevsSistemiEroganti.TipoNoteAnamnesticheColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property LoginToSac() As String
                Get
                    Try 
                        Return CType(Me(Me.tableBevsSistemiEroganti.LoginToSacColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'LoginToSac' in table 'BevsSistemiEroganti' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableBevsSistemiEroganti.LoginToSacColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property RuoloManager() As String
                Get
                    Try 
                        Return CType(Me(Me.tableBevsSistemiEroganti.RuoloManagerColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'RuoloManager' in table 'BevsSistemiEroganti' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableBevsSistemiEroganti.RuoloManagerColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property GeneraAnteprimaReferto() As Boolean
                Get
                    Return CType(Me(Me.tableBevsSistemiEroganti.GeneraAnteprimaRefertoColumn),Boolean)
                End Get
                Set
                    Me(Me.tableBevsSistemiEroganti.GeneraAnteprimaRefertoColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function IsDescrizioneNull() As Boolean
                Return Me.IsNull(Me.tableBevsSistemiEroganti.DescrizioneColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub SetDescrizioneNull()
                Me(Me.tableBevsSistemiEroganti.DescrizioneColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function IsRuoloVisualizzazioneNull() As Boolean
                Return Me.IsNull(Me.tableBevsSistemiEroganti.RuoloVisualizzazioneColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub SetRuoloVisualizzazioneNull()
                Me(Me.tableBevsSistemiEroganti.RuoloVisualizzazioneColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function IsEmailControlloQualitaPassivoNull() As Boolean
                Return Me.IsNull(Me.tableBevsSistemiEroganti.EmailControlloQualitaPassivoColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub SetEmailControlloQualitaPassivoNull()
                Me(Me.tableBevsSistemiEroganti.EmailControlloQualitaPassivoColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function IsLoginToSacNull() As Boolean
                Return Me.IsNull(Me.tableBevsSistemiEroganti.LoginToSacColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub SetLoginToSacNull()
                Me(Me.tableBevsSistemiEroganti.LoginToSacColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function IsRuoloManagerNull() As Boolean
                Return Me.IsNull(Me.tableBevsSistemiEroganti.RuoloManagerColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub SetRuoloManagerNull()
                Me(Me.tableBevsSistemiEroganti.RuoloManagerColumn) = Global.System.Convert.DBNull
            End Sub
        End Class
        
        '''<summary>
        '''Represents strongly named DataRow class.
        '''</summary>
        Partial Public Class MMGSistemiAbilitatiCercaRow
            Inherits Global.System.Data.DataRow
            
            Private tableMMGSistemiAbilitatiCerca As MMGSistemiAbilitatiCercaDataTable
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
                MyBase.New(rb)
                Me.tableMMGSistemiAbilitatiCerca = CType(Me.Table,MMGSistemiAbilitatiCercaDataTable)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property Id() As System.Guid
                Get
                    Return CType(Me(Me.tableMMGSistemiAbilitatiCerca.IdColumn),Global.System.Guid)
                End Get
                Set
                    Me(Me.tableMMGSistemiAbilitatiCerca.IdColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property SistemaErogante() As String
                Get
                    Return CType(Me(Me.tableMMGSistemiAbilitatiCerca.SistemaEroganteColumn),String)
                End Get
                Set
                    Me(Me.tableMMGSistemiAbilitatiCerca.SistemaEroganteColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property SpecialitaErogante() As String
                Get
                    Try 
                        Return CType(Me(Me.tableMMGSistemiAbilitatiCerca.SpecialitaEroganteColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'SpecialitaErogante' in table 'MMGSistemiAbilitatiCerca' is "& _ 
                                "DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableMMGSistemiAbilitatiCerca.SpecialitaEroganteColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function IsSpecialitaEroganteNull() As Boolean
                Return Me.IsNull(Me.tableMMGSistemiAbilitatiCerca.SpecialitaEroganteColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub SetSpecialitaEroganteNull()
                Me(Me.tableMMGSistemiAbilitatiCerca.SpecialitaEroganteColumn) = Global.System.Convert.DBNull
            End Sub
        End Class
        
        '''<summary>
        '''Represents strongly named DataRow class.
        '''</summary>
        Partial Public Class BevsSistemiErogantiCodiciComboRow
            Inherits Global.System.Data.DataRow
            
            Private tableBevsSistemiErogantiCodiciCombo As BevsSistemiErogantiCodiciComboDataTable
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
                MyBase.New(rb)
                Me.tableBevsSistemiErogantiCodiciCombo = CType(Me.Table,BevsSistemiErogantiCodiciComboDataTable)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property Codice() As String
                Get
                    Return CType(Me(Me.tableBevsSistemiErogantiCodiciCombo.CodiceColumn),String)
                End Get
                Set
                    Me(Me.tableBevsSistemiErogantiCodiciCombo.CodiceColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property Descrizione() As String
                Get
                    Return CType(Me(Me.tableBevsSistemiErogantiCodiciCombo.DescrizioneColumn),String)
                End Get
                Set
                    Me(Me.tableBevsSistemiErogantiCodiciCombo.DescrizioneColumn) = value
                End Set
            End Property
        End Class
        
        '''<summary>
        '''Represents strongly named DataRow class.
        '''</summary>
        Partial Public Class BeRicoveriListaRow
            Inherits Global.System.Data.DataRow
            
            Private tableBeRicoveriLista As BeRicoveriListaDataTable
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
                MyBase.New(rb)
                Me.tableBeRicoveriLista = CType(Me.Table,BeRicoveriListaDataTable)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property ID() As System.Guid
                Get
                    Return CType(Me(Me.tableBeRicoveriLista.IDColumn),Global.System.Guid)
                End Get
                Set
                    Me(Me.tableBeRicoveriLista.IDColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property IdPaziente() As System.Guid
                Get
                    Try 
                        Return CType(Me(Me.tableBeRicoveriLista.IdPazienteColumn),Global.System.Guid)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'IdPaziente' in table 'BeRicoveriLista' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableBeRicoveriLista.IdPazienteColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property DataInserimento() As Date
                Get
                    Return CType(Me(Me.tableBeRicoveriLista.DataInserimentoColumn),Date)
                End Get
                Set
                    Me(Me.tableBeRicoveriLista.DataInserimentoColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property DataModifica() As Date
                Get
                    Return CType(Me(Me.tableBeRicoveriLista.DataModificaColumn),Date)
                End Get
                Set
                    Me(Me.tableBeRicoveriLista.DataModificaColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property AziendaErogante() As String
                Get
                    Return CType(Me(Me.tableBeRicoveriLista.AziendaEroganteColumn),String)
                End Get
                Set
                    Me(Me.tableBeRicoveriLista.AziendaEroganteColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property SistemaErogante() As String
                Get
                    Return CType(Me(Me.tableBeRicoveriLista.SistemaEroganteColumn),String)
                End Get
                Set
                    Me(Me.tableBeRicoveriLista.SistemaEroganteColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property RepartoErogante() As String
                Get
                    Try 
                        Return CType(Me(Me.tableBeRicoveriLista.RepartoEroganteColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'RepartoErogante' in table 'BeRicoveriLista' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableBeRicoveriLista.RepartoEroganteColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property NumeroNosologico() As String
                Get
                    Return CType(Me(Me.tableBeRicoveriLista.NumeroNosologicoColumn),String)
                End Get
                Set
                    Me(Me.tableBeRicoveriLista.NumeroNosologicoColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property Cognome() As String
                Get
                    Try 
                        Return CType(Me(Me.tableBeRicoveriLista.CognomeColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'Cognome' in table 'BeRicoveriLista' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableBeRicoveriLista.CognomeColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property Nome() As String
                Get
                    Try 
                        Return CType(Me(Me.tableBeRicoveriLista.NomeColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'Nome' in table 'BeRicoveriLista' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableBeRicoveriLista.NomeColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property CodiceFiscale() As String
                Get
                    Try 
                        Return CType(Me(Me.tableBeRicoveriLista.CodiceFiscaleColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'CodiceFiscale' in table 'BeRicoveriLista' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableBeRicoveriLista.CodiceFiscaleColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property DataNascita() As Date
                Get
                    Try 
                        Return CType(Me(Me.tableBeRicoveriLista.DataNascitaColumn),Date)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'DataNascita' in table 'BeRicoveriLista' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableBeRicoveriLista.DataNascitaColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property ComuneNascita() As String
                Get
                    Try 
                        Return CType(Me(Me.tableBeRicoveriLista.ComuneNascitaColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'ComuneNascita' in table 'BeRicoveriLista' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableBeRicoveriLista.ComuneNascitaColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property CodiceSanitario() As String
                Get
                    Try 
                        Return CType(Me(Me.tableBeRicoveriLista.CodiceSanitarioColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'CodiceSanitario' in table 'BeRicoveriLista' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableBeRicoveriLista.CodiceSanitarioColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property RepartoErogante1() As String
                Get
                    Try 
                        Return CType(Me(Me.tableBeRicoveriLista.RepartoErogante1Column),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'RepartoErogante1' in table 'BeRicoveriLista' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableBeRicoveriLista.RepartoErogante1Column) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property StatoCodice() As Byte
                Get
                    Return CType(Me(Me.tableBeRicoveriLista.StatoCodiceColumn),Byte)
                End Get
                Set
                    Me(Me.tableBeRicoveriLista.StatoCodiceColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property CodiceOscuramento() As String
                Get
                    Try 
                        Return CType(Me(Me.tableBeRicoveriLista.CodiceOscuramentoColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'CodiceOscuramento' in table 'BeRicoveriLista' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableBeRicoveriLista.CodiceOscuramentoColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function IsIdPazienteNull() As Boolean
                Return Me.IsNull(Me.tableBeRicoveriLista.IdPazienteColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub SetIdPazienteNull()
                Me(Me.tableBeRicoveriLista.IdPazienteColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function IsRepartoEroganteNull() As Boolean
                Return Me.IsNull(Me.tableBeRicoveriLista.RepartoEroganteColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub SetRepartoEroganteNull()
                Me(Me.tableBeRicoveriLista.RepartoEroganteColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function IsCognomeNull() As Boolean
                Return Me.IsNull(Me.tableBeRicoveriLista.CognomeColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub SetCognomeNull()
                Me(Me.tableBeRicoveriLista.CognomeColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function IsNomeNull() As Boolean
                Return Me.IsNull(Me.tableBeRicoveriLista.NomeColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub SetNomeNull()
                Me(Me.tableBeRicoveriLista.NomeColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function IsCodiceFiscaleNull() As Boolean
                Return Me.IsNull(Me.tableBeRicoveriLista.CodiceFiscaleColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub SetCodiceFiscaleNull()
                Me(Me.tableBeRicoveriLista.CodiceFiscaleColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function IsDataNascitaNull() As Boolean
                Return Me.IsNull(Me.tableBeRicoveriLista.DataNascitaColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub SetDataNascitaNull()
                Me(Me.tableBeRicoveriLista.DataNascitaColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function IsComuneNascitaNull() As Boolean
                Return Me.IsNull(Me.tableBeRicoveriLista.ComuneNascitaColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub SetComuneNascitaNull()
                Me(Me.tableBeRicoveriLista.ComuneNascitaColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function IsCodiceSanitarioNull() As Boolean
                Return Me.IsNull(Me.tableBeRicoveriLista.CodiceSanitarioColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub SetCodiceSanitarioNull()
                Me(Me.tableBeRicoveriLista.CodiceSanitarioColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function IsRepartoErogante1Null() As Boolean
                Return Me.IsNull(Me.tableBeRicoveriLista.RepartoErogante1Column)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub SetRepartoErogante1Null()
                Me(Me.tableBeRicoveriLista.RepartoErogante1Column) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function IsCodiceOscuramentoNull() As Boolean
                Return Me.IsNull(Me.tableBeRicoveriLista.CodiceOscuramentoColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub SetCodiceOscuramentoNull()
                Me(Me.tableBeRicoveriLista.CodiceOscuramentoColumn) = Global.System.Convert.DBNull
            End Sub
        End Class
        
        '''<summary>
        '''Represents strongly named DataRow class.
        '''</summary>
        Partial Public Class BevsAttributiRicoveroOttieniRow
            Inherits Global.System.Data.DataRow
            
            Private tableBevsAttributiRicoveroOttieni As BevsAttributiRicoveroOttieniDataTable
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
                MyBase.New(rb)
                Me.tableBevsAttributiRicoveroOttieni = CType(Me.Table,BevsAttributiRicoveroOttieniDataTable)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property IdRicoveriBase() As System.Guid
                Get
                    Return CType(Me(Me.tableBevsAttributiRicoveroOttieni.IdRicoveriBaseColumn),Global.System.Guid)
                End Get
                Set
                    Me(Me.tableBevsAttributiRicoveroOttieni.IdRicoveriBaseColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property Nome() As String
                Get
                    Return CType(Me(Me.tableBevsAttributiRicoveroOttieni.NomeColumn),String)
                End Get
                Set
                    Me(Me.tableBevsAttributiRicoveroOttieni.NomeColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property Valore() As Object
                Get
                    Try 
                        Return CType(Me(Me.tableBevsAttributiRicoveroOttieni.ValoreColumn),Object)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'Valore' in table 'BevsAttributiRicoveroOttieni' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableBevsAttributiRicoveroOttieni.ValoreColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property DataPartizione() As Date
                Get
                    Return CType(Me(Me.tableBevsAttributiRicoveroOttieni.DataPartizioneColumn),Date)
                End Get
                Set
                    Me(Me.tableBevsAttributiRicoveroOttieni.DataPartizioneColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function IsValoreNull() As Boolean
                Return Me.IsNull(Me.tableBevsAttributiRicoveroOttieni.ValoreColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub SetValoreNull()
                Me(Me.tableBevsAttributiRicoveroOttieni.ValoreColumn) = Global.System.Convert.DBNull
            End Sub
        End Class
        
        '''<summary>
        '''Represents strongly named DataRow class.
        '''</summary>
        Partial Public Class BevsEventiRicoveroOttieniRow
            Inherits Global.System.Data.DataRow
            
            Private tableBevsEventiRicoveroOttieni As BevsEventiRicoveroOttieniDataTable
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
                MyBase.New(rb)
                Me.tableBevsEventiRicoveroOttieni = CType(Me.Table,BevsEventiRicoveroOttieniDataTable)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property id() As System.Guid
                Get
                    Return CType(Me(Me.tableBevsEventiRicoveroOttieni.idColumn),Global.System.Guid)
                End Get
                Set
                    Me(Me.tableBevsEventiRicoveroOttieni.idColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property IdPaziente() As System.Guid
                Get
                    Try 
                        Return CType(Me(Me.tableBevsEventiRicoveroOttieni.IdPazienteColumn),Global.System.Guid)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'IdPaziente' in table 'BevsEventiRicoveroOttieni' is DBNull."& _ 
                                "", e)
                    End Try
                End Get
                Set
                    Me(Me.tableBevsEventiRicoveroOttieni.IdPazienteColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property DataInserimento() As Date
                Get
                    Return CType(Me(Me.tableBevsEventiRicoveroOttieni.DataInserimentoColumn),Date)
                End Get
                Set
                    Me(Me.tableBevsEventiRicoveroOttieni.DataInserimentoColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property DataModifica() As Date
                Get
                    Return CType(Me(Me.tableBevsEventiRicoveroOttieni.DataModificaColumn),Date)
                End Get
                Set
                    Me(Me.tableBevsEventiRicoveroOttieni.DataModificaColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property AziendaErogante() As String
                Get
                    Return CType(Me(Me.tableBevsEventiRicoveroOttieni.AziendaEroganteColumn),String)
                End Get
                Set
                    Me(Me.tableBevsEventiRicoveroOttieni.AziendaEroganteColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property SistemaErogante() As String
                Get
                    Return CType(Me(Me.tableBevsEventiRicoveroOttieni.SistemaEroganteColumn),String)
                End Get
                Set
                    Me(Me.tableBevsEventiRicoveroOttieni.SistemaEroganteColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property RepartoErogante() As String
                Get
                    Try 
                        Return CType(Me(Me.tableBevsEventiRicoveroOttieni.RepartoEroganteColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'RepartoErogante' in table 'BevsEventiRicoveroOttieni' is DB"& _ 
                                "Null.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableBevsEventiRicoveroOttieni.RepartoEroganteColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property DataEvento() As Date
                Get
                    Return CType(Me(Me.tableBevsEventiRicoveroOttieni.DataEventoColumn),Date)
                End Get
                Set
                    Me(Me.tableBevsEventiRicoveroOttieni.DataEventoColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property StatoCodice() As Integer
                Get
                    Return CType(Me(Me.tableBevsEventiRicoveroOttieni.StatoCodiceColumn),Integer)
                End Get
                Set
                    Me(Me.tableBevsEventiRicoveroOttieni.StatoCodiceColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property TipoEventoCodice() As String
                Get
                    Return CType(Me(Me.tableBevsEventiRicoveroOttieni.TipoEventoCodiceColumn),String)
                End Get
                Set
                    Me(Me.tableBevsEventiRicoveroOttieni.TipoEventoCodiceColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property TipoEventoDescr() As String
                Get
                    Return CType(Me(Me.tableBevsEventiRicoveroOttieni.TipoEventoDescrColumn),String)
                End Get
                Set
                    Me(Me.tableBevsEventiRicoveroOttieni.TipoEventoDescrColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property TipoEpisodio() As String
                Get
                    Try 
                        Return CType(Me(Me.tableBevsEventiRicoveroOttieni.TipoEpisodioColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'TipoEpisodio' in table 'BevsEventiRicoveroOttieni' is DBNul"& _ 
                                "l.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableBevsEventiRicoveroOttieni.TipoEpisodioColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property TipoEpisodioDescr() As String
                Get
                    Try 
                        Return CType(Me(Me.tableBevsEventiRicoveroOttieni.TipoEpisodioDescrColumn),String)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'TipoEpisodioDescr' in table 'BevsEventiRicoveroOttieni' is "& _ 
                                "DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableBevsEventiRicoveroOttieni.TipoEpisodioDescrColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property NumeroNosologico() As String
                Get
                    Return CType(Me(Me.tableBevsEventiRicoveroOttieni.NumeroNosologicoColumn),String)
                End Get
                Set
                    Me(Me.tableBevsEventiRicoveroOttieni.NumeroNosologicoColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function IsIdPazienteNull() As Boolean
                Return Me.IsNull(Me.tableBevsEventiRicoveroOttieni.IdPazienteColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub SetIdPazienteNull()
                Me(Me.tableBevsEventiRicoveroOttieni.IdPazienteColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function IsRepartoEroganteNull() As Boolean
                Return Me.IsNull(Me.tableBevsEventiRicoveroOttieni.RepartoEroganteColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub SetRepartoEroganteNull()
                Me(Me.tableBevsEventiRicoveroOttieni.RepartoEroganteColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function IsTipoEpisodioNull() As Boolean
                Return Me.IsNull(Me.tableBevsEventiRicoveroOttieni.TipoEpisodioColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub SetTipoEpisodioNull()
                Me(Me.tableBevsEventiRicoveroOttieni.TipoEpisodioColumn) = Global.System.Convert.DBNull
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function IsTipoEpisodioDescrNull() As Boolean
                Return Me.IsNull(Me.tableBevsEventiRicoveroOttieni.TipoEpisodioDescrColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub SetTipoEpisodioDescrNull()
                Me(Me.tableBevsEventiRicoveroOttieni.TipoEpisodioDescrColumn) = Global.System.Convert.DBNull
            End Sub
        End Class
        
        '''<summary>
        '''Represents strongly named DataRow class.
        '''</summary>
        Partial Public Class BevsAttributiEventoOttieniRow
            Inherits Global.System.Data.DataRow
            
            Private tableBevsAttributiEventoOttieni As BevsAttributiEventoOttieniDataTable
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
                MyBase.New(rb)
                Me.tableBevsAttributiEventoOttieni = CType(Me.Table,BevsAttributiEventoOttieniDataTable)
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property IdEventiBase() As System.Guid
                Get
                    Return CType(Me(Me.tableBevsAttributiEventoOttieni.IdEventiBaseColumn),Global.System.Guid)
                End Get
                Set
                    Me(Me.tableBevsAttributiEventoOttieni.IdEventiBaseColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property Nome() As String
                Get
                    Return CType(Me(Me.tableBevsAttributiEventoOttieni.NomeColumn),String)
                End Get
                Set
                    Me(Me.tableBevsAttributiEventoOttieni.NomeColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property Valore() As Object
                Get
                    Try 
                        Return CType(Me(Me.tableBevsAttributiEventoOttieni.ValoreColumn),Object)
                    Catch e As Global.System.InvalidCastException
                        Throw New Global.System.Data.StrongTypingException("The value for column 'Valore' in table 'BevsAttributiEventoOttieni' is DBNull.", e)
                    End Try
                End Get
                Set
                    Me(Me.tableBevsAttributiEventoOttieni.ValoreColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Property DataPartizione() As Date
                Get
                    Return CType(Me(Me.tableBevsAttributiEventoOttieni.DataPartizioneColumn),Date)
                End Get
                Set
                    Me(Me.tableBevsAttributiEventoOttieni.DataPartizioneColumn) = value
                End Set
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function IsValoreNull() As Boolean
                Return Me.IsNull(Me.tableBevsAttributiEventoOttieni.ValoreColumn)
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub SetValoreNull()
                Me(Me.tableBevsAttributiEventoOttieni.ValoreColumn) = Global.System.Convert.DBNull
            End Sub
        End Class
        
        '''<summary>
        '''Row event argument class
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Class RefertiStiliListaRowChangeEvent
            Inherits Global.System.EventArgs
            
            Private eventRow As RefertiStiliListaRow
            
            Private eventAction As Global.System.Data.DataRowAction
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub New(ByVal row As RefertiStiliListaRow, ByVal action As Global.System.Data.DataRowAction)
                MyBase.New
                Me.eventRow = row
                Me.eventAction = action
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property Row() As RefertiStiliListaRow
                Get
                    Return Me.eventRow
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property Action() As Global.System.Data.DataRowAction
                Get
                    Return Me.eventAction
                End Get
            End Property
        End Class
        
        '''<summary>
        '''Row event argument class
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Class RefertiNoteListaRowChangeEvent
            Inherits Global.System.EventArgs
            
            Private eventRow As RefertiNoteListaRow
            
            Private eventAction As Global.System.Data.DataRowAction
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub New(ByVal row As RefertiNoteListaRow, ByVal action As Global.System.Data.DataRowAction)
                MyBase.New
                Me.eventRow = row
                Me.eventAction = action
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property Row() As RefertiNoteListaRow
                Get
                    Return Me.eventRow
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property Action() As Global.System.Data.DataRowAction
                Get
                    Return Me.eventAction
                End Get
            End Property
        End Class
        
        '''<summary>
        '''Row event argument class
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Class RefertiNoteDettaglioRowChangeEvent
            Inherits Global.System.EventArgs
            
            Private eventRow As RefertiNoteDettaglioRow
            
            Private eventAction As Global.System.Data.DataRowAction
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub New(ByVal row As RefertiNoteDettaglioRow, ByVal action As Global.System.Data.DataRowAction)
                MyBase.New
                Me.eventRow = row
                Me.eventAction = action
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property Row() As RefertiNoteDettaglioRow
                Get
                    Return Me.eventRow
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property Action() As Global.System.Data.DataRowAction
                Get
                    Return Me.eventAction
                End Get
            End Property
        End Class
        
        '''<summary>
        '''Row event argument class
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Class SistemiErogantiComboRowChangeEvent
            Inherits Global.System.EventArgs
            
            Private eventRow As SistemiErogantiComboRow
            
            Private eventAction As Global.System.Data.DataRowAction
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub New(ByVal row As SistemiErogantiComboRow, ByVal action As Global.System.Data.DataRowAction)
                MyBase.New
                Me.eventRow = row
                Me.eventAction = action
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property Row() As SistemiErogantiComboRow
                Get
                    Return Me.eventRow
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property Action() As Global.System.Data.DataRowAction
                Get
                    Return Me.eventAction
                End Get
            End Property
        End Class
        
        '''<summary>
        '''Row event argument class
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Class SistemiErogantiDocumentiListaRowChangeEvent
            Inherits Global.System.EventArgs
            
            Private eventRow As SistemiErogantiDocumentiListaRow
            
            Private eventAction As Global.System.Data.DataRowAction
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub New(ByVal row As SistemiErogantiDocumentiListaRow, ByVal action As Global.System.Data.DataRowAction)
                MyBase.New
                Me.eventRow = row
                Me.eventAction = action
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property Row() As SistemiErogantiDocumentiListaRow
                Get
                    Return Me.eventRow
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property Action() As Global.System.Data.DataRowAction
                Get
                    Return Me.eventAction
                End Get
            End Property
        End Class
        
        '''<summary>
        '''Row event argument class
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Class SistemiErogantiDocumentiDettaglioRowChangeEvent
            Inherits Global.System.EventArgs
            
            Private eventRow As SistemiErogantiDocumentiDettaglioRow
            
            Private eventAction As Global.System.Data.DataRowAction
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub New(ByVal row As SistemiErogantiDocumentiDettaglioRow, ByVal action As Global.System.Data.DataRowAction)
                MyBase.New
                Me.eventRow = row
                Me.eventAction = action
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property Row() As SistemiErogantiDocumentiDettaglioRow
                Get
                    Return Me.eventRow
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property Action() As Global.System.Data.DataRowAction
                Get
                    Return Me.eventAction
                End Get
            End Property
        End Class
        
        '''<summary>
        '''Row event argument class
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Class BevsSistemiErogantiDocumentiListaRowChangeEvent
            Inherits Global.System.EventArgs
            
            Private eventRow As BevsSistemiErogantiDocumentiListaRow
            
            Private eventAction As Global.System.Data.DataRowAction
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub New(ByVal row As BevsSistemiErogantiDocumentiListaRow, ByVal action As Global.System.Data.DataRowAction)
                MyBase.New
                Me.eventRow = row
                Me.eventAction = action
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property Row() As BevsSistemiErogantiDocumentiListaRow
                Get
                    Return Me.eventRow
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property Action() As Global.System.Data.DataRowAction
                Get
                    Return Me.eventAction
                End Get
            End Property
        End Class
        
        '''<summary>
        '''Row event argument class
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Class BeRefertiListaRowChangeEvent
            Inherits Global.System.EventArgs
            
            Private eventRow As BeRefertiListaRow
            
            Private eventAction As Global.System.Data.DataRowAction
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub New(ByVal row As BeRefertiListaRow, ByVal action As Global.System.Data.DataRowAction)
                MyBase.New
                Me.eventRow = row
                Me.eventAction = action
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property Row() As BeRefertiListaRow
                Get
                    Return Me.eventRow
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property Action() As Global.System.Data.DataRowAction
                Get
                    Return Me.eventAction
                End Get
            End Property
        End Class
        
        '''<summary>
        '''Row event argument class
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Class StampeSottoscrizioniStatiListaRowChangeEvent
            Inherits Global.System.EventArgs
            
            Private eventRow As StampeSottoscrizioniStatiListaRow
            
            Private eventAction As Global.System.Data.DataRowAction
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub New(ByVal row As StampeSottoscrizioniStatiListaRow, ByVal action As Global.System.Data.DataRowAction)
                MyBase.New
                Me.eventRow = row
                Me.eventAction = action
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property Row() As StampeSottoscrizioniStatiListaRow
                Get
                    Return Me.eventRow
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property Action() As Global.System.Data.DataRowAction
                Get
                    Return Me.eventAction
                End Get
            End Property
        End Class
        
        '''<summary>
        '''Row event argument class
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Class StampeSottoscrizioniTipoRefertiListaRowChangeEvent
            Inherits Global.System.EventArgs
            
            Private eventRow As StampeSottoscrizioniTipoRefertiListaRow
            
            Private eventAction As Global.System.Data.DataRowAction
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub New(ByVal row As StampeSottoscrizioniTipoRefertiListaRow, ByVal action As Global.System.Data.DataRowAction)
                MyBase.New
                Me.eventRow = row
                Me.eventAction = action
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property Row() As StampeSottoscrizioniTipoRefertiListaRow
                Get
                    Return Me.eventRow
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property Action() As Global.System.Data.DataRowAction
                Get
                    Return Me.eventAction
                End Get
            End Property
        End Class
        
        '''<summary>
        '''Row event argument class
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Class StampeSottoscrizioniTipoSottoscrizioniListaRowChangeEvent
            Inherits Global.System.EventArgs
            
            Private eventRow As StampeSottoscrizioniTipoSottoscrizioniListaRow
            
            Private eventAction As Global.System.Data.DataRowAction
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub New(ByVal row As StampeSottoscrizioniTipoSottoscrizioniListaRow, ByVal action As Global.System.Data.DataRowAction)
                MyBase.New
                Me.eventRow = row
                Me.eventAction = action
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property Row() As StampeSottoscrizioniTipoSottoscrizioniListaRow
                Get
                    Return Me.eventRow
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property Action() As Global.System.Data.DataRowAction
                Get
                    Return Me.eventAction
                End Get
            End Property
        End Class
        
        '''<summary>
        '''Row event argument class
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Class StampeSottoscrizioniSistemiErogantiListaRowChangeEvent
            Inherits Global.System.EventArgs
            
            Private eventRow As StampeSottoscrizioniSistemiErogantiListaRow
            
            Private eventAction As Global.System.Data.DataRowAction
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub New(ByVal row As StampeSottoscrizioniSistemiErogantiListaRow, ByVal action As Global.System.Data.DataRowAction)
                MyBase.New
                Me.eventRow = row
                Me.eventAction = action
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property Row() As StampeSottoscrizioniSistemiErogantiListaRow
                Get
                    Return Me.eventRow
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property Action() As Global.System.Data.DataRowAction
                Get
                    Return Me.eventAction
                End Get
            End Property
        End Class
        
        '''<summary>
        '''Row event argument class
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Class StampeSottoscrizioniRepartiRichiedentiListaRowChangeEvent
            Inherits Global.System.EventArgs
            
            Private eventRow As StampeSottoscrizioniRepartiRichiedentiListaRow
            
            Private eventAction As Global.System.Data.DataRowAction
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub New(ByVal row As StampeSottoscrizioniRepartiRichiedentiListaRow, ByVal action As Global.System.Data.DataRowAction)
                MyBase.New
                Me.eventRow = row
                Me.eventAction = action
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property Row() As StampeSottoscrizioniRepartiRichiedentiListaRow
                Get
                    Return Me.eventRow
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property Action() As Global.System.Data.DataRowAction
                Get
                    Return Me.eventAction
                End Get
            End Property
        End Class
        
        '''<summary>
        '''Row event argument class
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Class StampeSottoscrizioniListaRowChangeEvent
            Inherits Global.System.EventArgs
            
            Private eventRow As StampeSottoscrizioniListaRow
            
            Private eventAction As Global.System.Data.DataRowAction
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub New(ByVal row As StampeSottoscrizioniListaRow, ByVal action As Global.System.Data.DataRowAction)
                MyBase.New
                Me.eventRow = row
                Me.eventAction = action
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property Row() As StampeSottoscrizioniListaRow
                Get
                    Return Me.eventRow
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property Action() As Global.System.Data.DataRowAction
                Get
                    Return Me.eventAction
                End Get
            End Property
        End Class
        
        '''<summary>
        '''Row event argument class
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Class StampeSottoscrizioniDettaglioRowChangeEvent
            Inherits Global.System.EventArgs
            
            Private eventRow As StampeSottoscrizioniDettaglioRow
            
            Private eventAction As Global.System.Data.DataRowAction
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub New(ByVal row As StampeSottoscrizioniDettaglioRow, ByVal action As Global.System.Data.DataRowAction)
                MyBase.New
                Me.eventRow = row
                Me.eventAction = action
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property Row() As StampeSottoscrizioniDettaglioRow
                Get
                    Return Me.eventRow
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property Action() As Global.System.Data.DataRowAction
                Get
                    Return Me.eventAction
                End Get
            End Property
        End Class
        
        '''<summary>
        '''Row event argument class
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Class StampeSottoscrizioniRepartiRichiedentiSelezionabiliRowChangeEvent
            Inherits Global.System.EventArgs
            
            Private eventRow As StampeSottoscrizioniRepartiRichiedentiSelezionabiliRow
            
            Private eventAction As Global.System.Data.DataRowAction
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub New(ByVal row As StampeSottoscrizioniRepartiRichiedentiSelezionabiliRow, ByVal action As Global.System.Data.DataRowAction)
                MyBase.New
                Me.eventRow = row
                Me.eventAction = action
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property Row() As StampeSottoscrizioniRepartiRichiedentiSelezionabiliRow
                Get
                    Return Me.eventRow
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property Action() As Global.System.Data.DataRowAction
                Get
                    Return Me.eventAction
                End Get
            End Property
        End Class
        
        '''<summary>
        '''Row event argument class
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Class SistemiErogantiListaRowChangeEvent
            Inherits Global.System.EventArgs
            
            Private eventRow As SistemiErogantiListaRow
            
            Private eventAction As Global.System.Data.DataRowAction
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub New(ByVal row As SistemiErogantiListaRow, ByVal action As Global.System.Data.DataRowAction)
                MyBase.New
                Me.eventRow = row
                Me.eventAction = action
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property Row() As SistemiErogantiListaRow
                Get
                    Return Me.eventRow
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property Action() As Global.System.Data.DataRowAction
                Get
                    Return Me.eventAction
                End Get
            End Property
        End Class
        
        '''<summary>
        '''Row event argument class
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Class AziendeErogantiListaRowChangeEvent
            Inherits Global.System.EventArgs
            
            Private eventRow As AziendeErogantiListaRow
            
            Private eventAction As Global.System.Data.DataRowAction
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub New(ByVal row As AziendeErogantiListaRow, ByVal action As Global.System.Data.DataRowAction)
                MyBase.New
                Me.eventRow = row
                Me.eventAction = action
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property Row() As AziendeErogantiListaRow
                Get
                    Return Me.eventRow
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property Action() As Global.System.Data.DataRowAction
                Get
                    Return Me.eventAction
                End Get
            End Property
        End Class
        
        '''<summary>
        '''Row event argument class
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Class GetDocumentoSistemiErogantiRowChangeEvent
            Inherits Global.System.EventArgs
            
            Private eventRow As GetDocumentoSistemiErogantiRow
            
            Private eventAction As Global.System.Data.DataRowAction
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub New(ByVal row As GetDocumentoSistemiErogantiRow, ByVal action As Global.System.Data.DataRowAction)
                MyBase.New
                Me.eventRow = row
                Me.eventAction = action
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property Row() As GetDocumentoSistemiErogantiRow
                Get
                    Return Me.eventRow
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property Action() As Global.System.Data.DataRowAction
                Get
                    Return Me.eventAction
                End Get
            End Property
        End Class
        
        '''<summary>
        '''Row event argument class
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Class UtentiRowChangeEvent
            Inherits Global.System.EventArgs
            
            Private eventRow As UtentiRow
            
            Private eventAction As Global.System.Data.DataRowAction
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub New(ByVal row As UtentiRow, ByVal action As Global.System.Data.DataRowAction)
                MyBase.New
                Me.eventRow = row
                Me.eventAction = action
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property Row() As UtentiRow
                Get
                    Return Me.eventRow
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property Action() As Global.System.Data.DataRowAction
                Get
                    Return Me.eventAction
                End Get
            End Property
        End Class
        
        '''<summary>
        '''Row event argument class
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Class RuoliRowChangeEvent
            Inherits Global.System.EventArgs
            
            Private eventRow As RuoliRow
            
            Private eventAction As Global.System.Data.DataRowAction
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub New(ByVal row As RuoliRow, ByVal action As Global.System.Data.DataRowAction)
                MyBase.New
                Me.eventRow = row
                Me.eventAction = action
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property Row() As RuoliRow
                Get
                    Return Me.eventRow
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property Action() As Global.System.Data.DataRowAction
                Get
                    Return Me.eventAction
                End Get
            End Property
        End Class
        
        '''<summary>
        '''Row event argument class
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Class SACUtentiRowChangeEvent
            Inherits Global.System.EventArgs
            
            Private eventRow As SACUtentiRow
            
            Private eventAction As Global.System.Data.DataRowAction
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub New(ByVal row As SACUtentiRow, ByVal action As Global.System.Data.DataRowAction)
                MyBase.New
                Me.eventRow = row
                Me.eventAction = action
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property Row() As SACUtentiRow
                Get
                    Return Me.eventRow
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property Action() As Global.System.Data.DataRowAction
                Get
                    Return Me.eventAction
                End Get
            End Property
        End Class
        
        '''<summary>
        '''Row event argument class
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Class TipiRefertoRowChangeEvent
            Inherits Global.System.EventArgs
            
            Private eventRow As TipiRefertoRow
            
            Private eventAction As Global.System.Data.DataRowAction
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub New(ByVal row As TipiRefertoRow, ByVal action As Global.System.Data.DataRowAction)
                MyBase.New
                Me.eventRow = row
                Me.eventAction = action
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property Row() As TipiRefertoRow
                Get
                    Return Me.eventRow
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property Action() As Global.System.Data.DataRowAction
                Get
                    Return Me.eventAction
                End Get
            End Property
        End Class
        
        '''<summary>
        '''Row event argument class
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Class BevsSistemiErogantiRowChangeEvent
            Inherits Global.System.EventArgs
            
            Private eventRow As BevsSistemiErogantiRow
            
            Private eventAction As Global.System.Data.DataRowAction
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub New(ByVal row As BevsSistemiErogantiRow, ByVal action As Global.System.Data.DataRowAction)
                MyBase.New
                Me.eventRow = row
                Me.eventAction = action
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property Row() As BevsSistemiErogantiRow
                Get
                    Return Me.eventRow
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property Action() As Global.System.Data.DataRowAction
                Get
                    Return Me.eventAction
                End Get
            End Property
        End Class
        
        '''<summary>
        '''Row event argument class
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Class MMGSistemiAbilitatiCercaRowChangeEvent
            Inherits Global.System.EventArgs
            
            Private eventRow As MMGSistemiAbilitatiCercaRow
            
            Private eventAction As Global.System.Data.DataRowAction
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub New(ByVal row As MMGSistemiAbilitatiCercaRow, ByVal action As Global.System.Data.DataRowAction)
                MyBase.New
                Me.eventRow = row
                Me.eventAction = action
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property Row() As MMGSistemiAbilitatiCercaRow
                Get
                    Return Me.eventRow
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property Action() As Global.System.Data.DataRowAction
                Get
                    Return Me.eventAction
                End Get
            End Property
        End Class
        
        '''<summary>
        '''Row event argument class
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Class BevsSistemiErogantiCodiciComboRowChangeEvent
            Inherits Global.System.EventArgs
            
            Private eventRow As BevsSistemiErogantiCodiciComboRow
            
            Private eventAction As Global.System.Data.DataRowAction
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub New(ByVal row As BevsSistemiErogantiCodiciComboRow, ByVal action As Global.System.Data.DataRowAction)
                MyBase.New
                Me.eventRow = row
                Me.eventAction = action
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property Row() As BevsSistemiErogantiCodiciComboRow
                Get
                    Return Me.eventRow
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property Action() As Global.System.Data.DataRowAction
                Get
                    Return Me.eventAction
                End Get
            End Property
        End Class
        
        '''<summary>
        '''Row event argument class
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Class BeRicoveriListaRowChangeEvent
            Inherits Global.System.EventArgs
            
            Private eventRow As BeRicoveriListaRow
            
            Private eventAction As Global.System.Data.DataRowAction
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub New(ByVal row As BeRicoveriListaRow, ByVal action As Global.System.Data.DataRowAction)
                MyBase.New
                Me.eventRow = row
                Me.eventAction = action
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property Row() As BeRicoveriListaRow
                Get
                    Return Me.eventRow
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property Action() As Global.System.Data.DataRowAction
                Get
                    Return Me.eventAction
                End Get
            End Property
        End Class
        
        '''<summary>
        '''Row event argument class
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Class BevsAttributiRicoveroOttieniRowChangeEvent
            Inherits Global.System.EventArgs
            
            Private eventRow As BevsAttributiRicoveroOttieniRow
            
            Private eventAction As Global.System.Data.DataRowAction
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub New(ByVal row As BevsAttributiRicoveroOttieniRow, ByVal action As Global.System.Data.DataRowAction)
                MyBase.New
                Me.eventRow = row
                Me.eventAction = action
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property Row() As BevsAttributiRicoveroOttieniRow
                Get
                    Return Me.eventRow
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property Action() As Global.System.Data.DataRowAction
                Get
                    Return Me.eventAction
                End Get
            End Property
        End Class
        
        '''<summary>
        '''Row event argument class
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Class BevsEventiRicoveroOttieniRowChangeEvent
            Inherits Global.System.EventArgs
            
            Private eventRow As BevsEventiRicoveroOttieniRow
            
            Private eventAction As Global.System.Data.DataRowAction
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub New(ByVal row As BevsEventiRicoveroOttieniRow, ByVal action As Global.System.Data.DataRowAction)
                MyBase.New
                Me.eventRow = row
                Me.eventAction = action
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property Row() As BevsEventiRicoveroOttieniRow
                Get
                    Return Me.eventRow
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property Action() As Global.System.Data.DataRowAction
                Get
                    Return Me.eventAction
                End Get
            End Property
        End Class
        
        '''<summary>
        '''Row event argument class
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Class BevsAttributiEventoOttieniRowChangeEvent
            Inherits Global.System.EventArgs
            
            Private eventRow As BevsAttributiEventoOttieniRow
            
            Private eventAction As Global.System.Data.DataRowAction
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Sub New(ByVal row As BevsAttributiEventoOttieniRow, ByVal action As Global.System.Data.DataRowAction)
                MyBase.New
                Me.eventRow = row
                Me.eventAction = action
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property Row() As BevsAttributiEventoOttieniRow
                Get
                    Return Me.eventRow
                End Get
            End Property
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public ReadOnly Property Action() As Global.System.Data.DataRowAction
                Get
                    Return Me.eventAction
                End Get
            End Property
        End Class
    End Class
End Namespace

Namespace DI.DataWarehouse.Admin.Data.BackEndDataSetTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class RefertiStiliListaTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "RefertiStiliLista"
            tableMapping.ColumnMappings.Add("Id", "Id")
            tableMapping.ColumnMappings.Add("Nome", "Nome")
            tableMapping.ColumnMappings.Add("Descrizione", "Descrizione")
            tableMapping.ColumnMappings.Add("Abilitato", "Abilitato")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings("AuslAsmnRe_DwhClinicoV3ConnectionString").ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.BevsRefertiStiliLista"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Nome", Global.System.Data.SqlDbType.VarChar, 64, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Descrizione", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As BackEndDataSet.RefertiStiliListaDataTable, ByVal Nome As String, ByVal Descrizione As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Nome Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Nome,String)
            End If
            If (Descrizione Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Descrizione,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal Nome As String, ByVal Descrizione As String) As BackEndDataSet.RefertiStiliListaDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Nome Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Nome,String)
            End If
            If (Descrizione Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Descrizione,String)
            End If
            Dim dataTable As BackEndDataSet.RefertiStiliListaDataTable = New BackEndDataSet.RefertiStiliListaDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class RefertiNoteListaTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "RefertiNoteLista"
            tableMapping.ColumnMappings.Add("NumeroReferto", "NumeroReferto")
            tableMapping.ColumnMappings.Add("NumeroNosologico", "NumeroNosologico")
            tableMapping.ColumnMappings.Add("Utente", "Utente")
            tableMapping.ColumnMappings.Add("DataInserimento", "DataInserimento")
            tableMapping.ColumnMappings.Add("Nota", "Nota")
            tableMapping.ColumnMappings.Add("IdRefertiNote", "IdRefertiNote")
            tableMapping.ColumnMappings.Add("IdReferti", "IdReferti")
            tableMapping.ColumnMappings.Add("Cancellata", "Cancellata")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings("AuslAsmnRe_DwhClinicoV3ConnectionString").ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.BevsRefertiNoteLista"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NumeroReferto", Global.System.Data.SqlDbType.VarChar, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NumeroNosologico", Global.System.Data.SqlDbType.VarChar, 64, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DataDal", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 23, 3, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DataAl", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 23, 3, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VisualizzaNoteCancellate", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As BackEndDataSet.RefertiNoteListaDataTable, ByVal NumeroReferto As String, ByVal NumeroNosologico As String, ByVal DataDal As Global.System.Nullable(Of Date), ByVal DataAl As Global.System.Nullable(Of Date), ByVal VisualizzaNoteCancellate As Global.System.Nullable(Of Boolean)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (NumeroReferto Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(NumeroReferto,String)
            End If
            If (NumeroNosologico Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(NumeroNosologico,String)
            End If
            If (DataDal.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(DataDal.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (DataAl.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(DataAl.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (VisualizzaNoteCancellate.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(VisualizzaNoteCancellate.Value,Boolean)
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal NumeroReferto As String, ByVal NumeroNosologico As String, ByVal DataDal As Global.System.Nullable(Of Date), ByVal DataAl As Global.System.Nullable(Of Date), ByVal VisualizzaNoteCancellate As Global.System.Nullable(Of Boolean)) As BackEndDataSet.RefertiNoteListaDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (NumeroReferto Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(NumeroReferto,String)
            End If
            If (NumeroNosologico Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(NumeroNosologico,String)
            End If
            If (DataDal.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(DataDal.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (DataAl.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(DataAl.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (VisualizzaNoteCancellate.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(VisualizzaNoteCancellate.Value,Boolean)
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As BackEndDataSet.RefertiNoteListaDataTable = New BackEndDataSet.RefertiNoteListaDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class RefertiNoteDettaglioTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "RefertiNoteDettaglio"
            tableMapping.ColumnMappings.Add("IdReferti", "IdReferti")
            tableMapping.ColumnMappings.Add("Utente", "Utente")
            tableMapping.ColumnMappings.Add("DataInserimento", "DataInserimento")
            tableMapping.ColumnMappings.Add("Nota", "Nota")
            tableMapping.ColumnMappings.Add("Id", "Id")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "dbo.BevsRefertiNoteRimuovi"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdRefertiNote", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, "IdRefertiNote", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings("AuslAsmnRe_DwhClinicoV3ConnectionString").ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.BevsRefertiNoteDettaglio"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdRefertiNote", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As BackEndDataSet.RefertiNoteDettaglioDataTable, ByVal IdRefertiNote As Global.System.Nullable(Of Global.System.Guid)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (IdRefertiNote.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(IdRefertiNote.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal IdRefertiNote As Global.System.Nullable(Of Global.System.Guid)) As BackEndDataSet.RefertiNoteDettaglioDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (IdRefertiNote.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(IdRefertiNote.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As BackEndDataSet.RefertiNoteDettaglioDataTable = New BackEndDataSet.RefertiNoteDettaglioDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As BackEndDataSet.RefertiNoteDettaglioDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As BackEndDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "RefertiNoteDettaglio")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal IdRefertiNote As Global.System.Nullable(Of Global.System.Guid)) As Integer
            If (IdRefertiNote.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(IdRefertiNote.Value,System.Guid)
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class SistemiErogantiComboTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "SistemiErogantiCombo"
            tableMapping.ColumnMappings.Add("Id", "Id")
            tableMapping.ColumnMappings.Add("Descrizione", "Descrizione")
            tableMapping.ColumnMappings.Add("Codice", "Codice")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings("AuslAsmnRe_DwhClinicoV3ConnectionString").ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.BevsSistemiErogantiCombo"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AziendaErogante", Global.System.Data.SqlDbType.VarChar, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As BackEndDataSet.SistemiErogantiComboDataTable, ByVal AziendaErogante As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (AziendaErogante Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(AziendaErogante,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal AziendaErogante As String) As BackEndDataSet.SistemiErogantiComboDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (AziendaErogante Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(AziendaErogante,String)
            End If
            Dim dataTable As BackEndDataSet.SistemiErogantiComboDataTable = New BackEndDataSet.SistemiErogantiComboDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class SistemiErogantiDocumentiListaTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "SistemiErogantiDocumentiLista"
            tableMapping.ColumnMappings.Add("Id", "Id")
            tableMapping.ColumnMappings.Add("Nome", "Nome")
            tableMapping.ColumnMappings.Add("Dimensione", "Dimensione")
            tableMapping.ColumnMappings.Add("ContentType", "ContentType")
            tableMapping.ColumnMappings.Add("AziendaErogante", "AziendaErogante")
            tableMapping.ColumnMappings.Add("SistemaErogante", "SistemaErogante")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings("AuslAsmnRe_DwhClinicoV3ConnectionString").ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.BevsSistemiErogantiDocumentiLista"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AziendaErogante", Global.System.Data.SqlDbType.VarChar, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As BackEndDataSet.SistemiErogantiDocumentiListaDataTable, ByVal AziendaErogante As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (AziendaErogante Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(AziendaErogante,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal AziendaErogante As String) As BackEndDataSet.SistemiErogantiDocumentiListaDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (AziendaErogante Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(AziendaErogante,String)
            End If
            Dim dataTable As BackEndDataSet.SistemiErogantiDocumentiListaDataTable = New BackEndDataSet.SistemiErogantiDocumentiListaDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class SistemiErogantiDocumentiDettaglioTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "SistemiErogantiDocumentiDettaglio"
            tableMapping.ColumnMappings.Add("Contenuto", "Contenuto")
            tableMapping.ColumnMappings.Add("Id", "Id")
            tableMapping.ColumnMappings.Add("Nome", "Nome")
            tableMapping.ColumnMappings.Add("Estensione", "Estensione")
            tableMapping.ColumnMappings.Add("Dimensione", "Dimensione")
            tableMapping.ColumnMappings.Add("ContentType", "ContentType")
            tableMapping.ColumnMappings.Add("IdSistemaErogante", "IdSistemaErogante")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "dbo.BevsSistemiErogantiDocumentiRimuovi"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Id", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, "Id", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "dbo.BevsSistemiErogantiDocumentiAggiungi"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdSistemaErogante", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, "IdSistemaErogante", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Nome", Global.System.Data.SqlDbType.VarChar, 256, Global.System.Data.ParameterDirection.Input, 0, 0, "Nome", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Estensione", Global.System.Data.SqlDbType.VarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "Estensione", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Dimensione", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, "Dimensione", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ContentType", Global.System.Data.SqlDbType.VarChar, 256, Global.System.Data.ParameterDirection.Input, 0, 0, "ContentType", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Contenuto", Global.System.Data.SqlDbType.Image, 2147483647, Global.System.Data.ParameterDirection.Input, 0, 0, "Contenuto", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "dbo.BevsSistemiErogantiDocumentiAggiorna"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Id", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, "Id", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdSistemaErogante", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, "IdSistemaErogante", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Nome", Global.System.Data.SqlDbType.VarChar, 256, Global.System.Data.ParameterDirection.Input, 0, 0, "Nome", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Estensione", Global.System.Data.SqlDbType.VarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, "Estensione", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Dimensione", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, "Dimensione", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ContentType", Global.System.Data.SqlDbType.VarChar, 256, Global.System.Data.ParameterDirection.Input, 0, 0, "ContentType", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Contenuto", Global.System.Data.SqlDbType.Image, 2147483647, Global.System.Data.ParameterDirection.Input, 0, 0, "Contenuto", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings("AuslAsmnRe_DwhClinicoV3ConnectionString").ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.BevsSistemiErogantiDocumentiDettaglio"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Id", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As BackEndDataSet.SistemiErogantiDocumentiDettaglioDataTable, ByVal Id As Global.System.Nullable(Of Global.System.Guid)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Id.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Id.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal Id As Global.System.Nullable(Of Global.System.Guid)) As BackEndDataSet.SistemiErogantiDocumentiDettaglioDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Id.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Id.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As BackEndDataSet.SistemiErogantiDocumentiDettaglioDataTable = New BackEndDataSet.SistemiErogantiDocumentiDettaglioDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As BackEndDataSet.SistemiErogantiDocumentiDettaglioDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As BackEndDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "SistemiErogantiDocumentiDettaglio")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Id As Global.System.Nullable(Of Global.System.Guid)) As Integer
            If (Id.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Id.Value,System.Guid)
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal IdSistemaErogante As Global.System.Nullable(Of Global.System.Guid), ByVal Nome As String, ByVal Estensione As String, ByVal Dimensione As Global.System.Nullable(Of Integer), ByVal ContentType As String, ByVal Contenuto() As Byte) As Integer
            If (IdSistemaErogante.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(IdSistemaErogante.Value,System.Guid)
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Nome Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(Nome,String)
            End If
            If (Estensione Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(Estensione,String)
            End If
            If (Dimensione.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(Dimensione.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (ContentType Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(ContentType,String)
            End If
            If (Contenuto Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(Contenuto,Byte())
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal Id As Global.System.Nullable(Of Global.System.Guid), ByVal IdSistemaErogante As Global.System.Nullable(Of Global.System.Guid), ByVal Nome As String, ByVal Estensione As String, ByVal Dimensione As Global.System.Nullable(Of Integer), ByVal ContentType As String, ByVal Contenuto() As Byte) As Integer
            If (Id.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(Id.Value,System.Guid)
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (IdSistemaErogante.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(IdSistemaErogante.Value,System.Guid)
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Nome Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(Nome,String)
            End If
            If (Estensione Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Estensione,String)
            End If
            If (Dimensione.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Dimensione.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (ContentType Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(ContentType,String)
            End If
            If (Contenuto Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Contenuto,Byte())
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class BevsSistemiErogantiDocumentiListaTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "BevsSistemiErogantiDocumentiLista"
            tableMapping.ColumnMappings.Add("Id", "Id")
            tableMapping.ColumnMappings.Add("Nome", "Nome")
            tableMapping.ColumnMappings.Add("Dimensione", "Dimensione")
            tableMapping.ColumnMappings.Add("ContentType", "ContentType")
            tableMapping.ColumnMappings.Add("AziendaErogante", "AziendaErogante")
            tableMapping.ColumnMappings.Add("SistemaErogante", "SistemaErogante")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings("AuslAsmnRe_DwhClinicoV3ConnectionString").ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.BevsSistemiErogantiDocumentiLista"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AziendaErogante", Global.System.Data.SqlDbType.VarChar, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As BackEndDataSet.BevsSistemiErogantiDocumentiListaDataTable, ByVal AziendaErogante As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (AziendaErogante Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(AziendaErogante,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal AziendaErogante As String) As BackEndDataSet.BevsSistemiErogantiDocumentiListaDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (AziendaErogante Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(AziendaErogante,String)
            End If
            Dim dataTable As BackEndDataSet.BevsSistemiErogantiDocumentiListaDataTable = New BackEndDataSet.BevsSistemiErogantiDocumentiListaDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class BeRefertiListaTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "BeRefertiLista"
            tableMapping.ColumnMappings.Add("ID", "ID")
            tableMapping.ColumnMappings.Add("IdEsterno", "IdEsterno")
            tableMapping.ColumnMappings.Add("IdPaziente", "IdPaziente")
            tableMapping.ColumnMappings.Add("DataInserimento", "DataInserimento")
            tableMapping.ColumnMappings.Add("DataModifica", "DataModifica")
            tableMapping.ColumnMappings.Add("AziendaErogante", "AziendaErogante")
            tableMapping.ColumnMappings.Add("SistemaErogante", "SistemaErogante")
            tableMapping.ColumnMappings.Add("RepartoErogante", "RepartoErogante")
            tableMapping.ColumnMappings.Add("DataReferto", "DataReferto")
            tableMapping.ColumnMappings.Add("NumeroReferto", "NumeroReferto")
            tableMapping.ColumnMappings.Add("NumeroNosologico", "NumeroNosologico")
            tableMapping.ColumnMappings.Add("NumeroPrenotazione", "NumeroPrenotazione")
            tableMapping.ColumnMappings.Add("Cognome", "Cognome")
            tableMapping.ColumnMappings.Add("Nome", "Nome")
            tableMapping.ColumnMappings.Add("CodiceFiscale", "CodiceFiscale")
            tableMapping.ColumnMappings.Add("DataNascita", "DataNascita")
            tableMapping.ColumnMappings.Add("ComuneNascita", "ComuneNascita")
            tableMapping.ColumnMappings.Add("CodiceSanitario", "CodiceSanitario")
            tableMapping.ColumnMappings.Add("RepartoRichiedenteCodice", "RepartoRichiedenteCodice")
            tableMapping.ColumnMappings.Add("RepartoRichiedenteDescr", "RepartoRichiedenteDescr")
            tableMapping.ColumnMappings.Add("StatoRichiestaCodice", "StatoRichiestaCodice")
            tableMapping.ColumnMappings.Add("StatoRichiestaDescr", "StatoRichiestaDescr")
            tableMapping.ColumnMappings.Add("CodiceOscuramento", "CodiceOscuramento")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "dbo.BevsCancellaReferto"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Id", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, "ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Esito", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.InputOutput, 10, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings("AuslAsmnRe_DwhClinicoV3ConnectionString").ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.BeRefertiLista"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@idReferto", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@idEsterno", Global.System.Data.SqlDbType.VarChar, 64, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@idPaziente", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@dataModificaDAL", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 23, 3, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@dataModificaAL", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 23, 3, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@aziendaErogante", Global.System.Data.SqlDbType.VarChar, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@sistemaErogante", Global.System.Data.SqlDbType.VarChar, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@repartoErogante", Global.System.Data.SqlDbType.VarChar, 64, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@dataReferto", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 23, 3, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@numeroReferto", Global.System.Data.SqlDbType.VarChar, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@numeroNosologico", Global.System.Data.SqlDbType.VarChar, 64, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@numeroPrenotazione", Global.System.Data.SqlDbType.VarChar, 32, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Cognome", Global.System.Data.SqlDbType.VarChar, 64, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Nome", Global.System.Data.SqlDbType.VarChar, 64, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CodiceFiscale", Global.System.Data.SqlDbType.VarChar, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DataNascita", Global.System.Data.SqlDbType.[Date], 3, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MaxRow", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "dbo.BevsRefertiOttieni"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdReferto", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData( _
                    ByVal idReferto As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal idEsterno As String,  _
                    ByVal idPaziente As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal dataModificaDAL As Global.System.Nullable(Of Date),  _
                    ByVal dataModificaAL As Global.System.Nullable(Of Date),  _
                    ByVal aziendaErogante As String,  _
                    ByVal sistemaErogante As String,  _
                    ByVal repartoErogante As String,  _
                    ByVal dataReferto As Global.System.Nullable(Of Date),  _
                    ByVal numeroReferto As String,  _
                    ByVal numeroNosologico As String,  _
                    ByVal numeroPrenotazione As String,  _
                    ByVal Cognome As String,  _
                    ByVal Nome As String,  _
                    ByVal CodiceFiscale As String,  _
                    ByVal DataNascita As Global.System.Nullable(Of Date),  _
                    ByVal MaxRow As Global.System.Nullable(Of Integer)) As BackEndDataSet.BeRefertiListaDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (idReferto.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(idReferto.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (idEsterno Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(idEsterno,String)
            End If
            If (idPaziente.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(idPaziente.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (dataModificaDAL.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(dataModificaDAL.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (dataModificaAL.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(dataModificaAL.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (aziendaErogante Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(6).Value = CType(aziendaErogante,String)
            End If
            If (sistemaErogante Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(7).Value = CType(sistemaErogante,String)
            End If
            If (repartoErogante Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(8).Value = CType(repartoErogante,String)
            End If
            If (dataReferto.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(9).Value = CType(dataReferto.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (numeroReferto Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(10).Value = CType(numeroReferto,String)
            End If
            If (numeroNosologico Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(11).Value = CType(numeroNosologico,String)
            End If
            If (numeroPrenotazione Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(12).Value = CType(numeroPrenotazione,String)
            End If
            If (Cognome Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(13).Value = CType(Cognome,String)
            End If
            If (Nome Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(14).Value = CType(Nome,String)
            End If
            If (CodiceFiscale Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(15).Value = CType(CodiceFiscale,String)
            End If
            If (DataNascita.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(16).Value = CType(DataNascita.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (MaxRow.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(17).Value = CType(MaxRow.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As BackEndDataSet.BeRefertiListaDataTable = New BackEndDataSet.BeRefertiListaDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy(ByVal dataTable As BackEndDataSet.BeRefertiListaDataTable, ByVal IdReferto As Global.System.Nullable(Of Global.System.Guid)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (IdReferto.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(IdReferto.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy(ByVal IdReferto As Global.System.Nullable(Of Global.System.Guid)) As BackEndDataSet.BeRefertiListaDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (IdReferto.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(IdReferto.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As BackEndDataSet.BeRefertiListaDataTable = New BackEndDataSet.BeRefertiListaDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As BackEndDataSet.BeRefertiListaDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As BackEndDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "BeRefertiLista")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Id As Global.System.Nullable(Of Global.System.Guid), ByRef Esito As Global.System.Nullable(Of Integer)) As Integer
            If (Id.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Id.Value,System.Guid)
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Esito.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Esito.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                If ((Me.Adapter.DeleteCommand.Parameters(2).Value Is Nothing)  _
                            OrElse (Me.Adapter.DeleteCommand.Parameters(2).Value.GetType Is GetType(Global.System.DBNull))) Then
                    Esito = New Global.System.Nullable(Of Integer)()
                Else
                    Esito = New Global.System.Nullable(Of Integer)(CType(Me.Adapter.DeleteCommand.Parameters(2).Value,Integer))
                End If
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class StampeSottoscrizioniStatiListaTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "StampeSottoscrizioniStatiLista"
            tableMapping.ColumnMappings.Add("Id", "Id")
            tableMapping.ColumnMappings.Add("Descrizione", "Descrizione")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings("AuslAsmnRe_DwhClinicoV3ConnectionString").ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.BevsStampeSottoscrizioniStatiLista"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As BackEndDataSet.StampeSottoscrizioniStatiListaDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As BackEndDataSet.StampeSottoscrizioniStatiListaDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As BackEndDataSet.StampeSottoscrizioniStatiListaDataTable = New BackEndDataSet.StampeSottoscrizioniStatiListaDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class StampeSottoscrizioniTipoRefertiListaTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "StampeSottoscrizioniTipoRefertiLista"
            tableMapping.ColumnMappings.Add("Id", "Id")
            tableMapping.ColumnMappings.Add("Descrizione", "Descrizione")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings("AuslAsmnRe_DwhClinicoV3ConnectionString").ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.BevsStampeSottoscrizioniTipoRefertiLista"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As BackEndDataSet.StampeSottoscrizioniTipoRefertiListaDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As BackEndDataSet.StampeSottoscrizioniTipoRefertiListaDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As BackEndDataSet.StampeSottoscrizioniTipoRefertiListaDataTable = New BackEndDataSet.StampeSottoscrizioniTipoRefertiListaDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class StampeSottoscrizioniTipoSottoscrizioniListaTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "StampeSottoscrizioniTipoSottoscrizioniLista"
            tableMapping.ColumnMappings.Add("Id", "Id")
            tableMapping.ColumnMappings.Add("Descrizione", "Descrizione")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings("AuslAsmnRe_DwhClinicoV3ConnectionString").ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.BevsStampeSottoscrizioniTipoSottoscrizioniLista"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As BackEndDataSet.StampeSottoscrizioniTipoSottoscrizioniListaDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As BackEndDataSet.StampeSottoscrizioniTipoSottoscrizioniListaDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As BackEndDataSet.StampeSottoscrizioniTipoSottoscrizioniListaDataTable = New BackEndDataSet.StampeSottoscrizioniTipoSottoscrizioniListaDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class StampeSottoscrizioniSistemiErogantiListaTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "StampeSottoscrizioniSistemiErogantiLista"
            tableMapping.ColumnMappings.Add("Codice", "Codice")
            tableMapping.ColumnMappings.Add("Descrizione", "Descrizione")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings("AuslAsmnRe_DwhClinicoV3ConnectionString").ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.BevsStampeSottoscrizioniSistemiErogantiLista"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AziendaErogante", Global.System.Data.SqlDbType.VarChar, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As BackEndDataSet.StampeSottoscrizioniSistemiErogantiListaDataTable, ByVal AziendaErogante As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (AziendaErogante Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(AziendaErogante,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal AziendaErogante As String) As BackEndDataSet.StampeSottoscrizioniSistemiErogantiListaDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (AziendaErogante Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(AziendaErogante,String)
            End If
            Dim dataTable As BackEndDataSet.StampeSottoscrizioniSistemiErogantiListaDataTable = New BackEndDataSet.StampeSottoscrizioniSistemiErogantiListaDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class StampeSottoscrizioniRepartiRichiedentiListaTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "StampeSottoscrizioniRepartiRichiedentiLista"
            tableMapping.ColumnMappings.Add("Id", "Id")
            tableMapping.ColumnMappings.Add("RepartoRichiedenteCodice", "RepartoRichiedenteCodice")
            tableMapping.ColumnMappings.Add("RepartoRichiedenteDescrizione", "RepartoRichiedenteDescrizione")
            tableMapping.ColumnMappings.Add("SistemaErogante", "SistemaErogante")
            tableMapping.ColumnMappings.Add("AziendaErogante", "AziendaErogante")
            tableMapping.ColumnMappings.Add("IdReparto", "IdReparto")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings("AuslAsmnRe_DwhClinicoV3ConnectionString").ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.BevsStampeSottoscrizioniRepartiRichiedentiLista"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdStampeSottoscrizioni", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As BackEndDataSet.StampeSottoscrizioniRepartiRichiedentiListaDataTable, ByVal IdStampeSottoscrizioni As Global.System.Nullable(Of Global.System.Guid)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (IdStampeSottoscrizioni.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(IdStampeSottoscrizioni.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal IdStampeSottoscrizioni As Global.System.Nullable(Of Global.System.Guid)) As BackEndDataSet.StampeSottoscrizioniRepartiRichiedentiListaDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (IdStampeSottoscrizioni.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(IdStampeSottoscrizioni.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As BackEndDataSet.StampeSottoscrizioniRepartiRichiedentiListaDataTable = New BackEndDataSet.StampeSottoscrizioniRepartiRichiedentiListaDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class StampeSottoscrizioniListaTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "StampeSottoscrizioniLista"
            tableMapping.ColumnMappings.Add("Id", "Id")
            tableMapping.ColumnMappings.Add("DataInserimento", "DataInserimento")
            tableMapping.ColumnMappings.Add("DataModifica", "DataModifica")
            tableMapping.ColumnMappings.Add("Account", "Account")
            tableMapping.ColumnMappings.Add("DataInizio", "DataInizio")
            tableMapping.ColumnMappings.Add("DataFine", "DataFine")
            tableMapping.ColumnMappings.Add("IdTipoReferti", "IdTipoReferti")
            tableMapping.ColumnMappings.Add("TipoReferti", "TipoReferti")
            tableMapping.ColumnMappings.Add("ServerDiStampa", "ServerDiStampa")
            tableMapping.ColumnMappings.Add("Stampante", "Stampante")
            tableMapping.ColumnMappings.Add("IdStato", "IdStato")
            tableMapping.ColumnMappings.Add("Stato", "Stato")
            tableMapping.ColumnMappings.Add("TipoSottoscrizione", "TipoSottoscrizione")
            tableMapping.ColumnMappings.Add("Ts", "Ts")
            tableMapping.ColumnMappings.Add("Nome", "Nome")
            tableMapping.ColumnMappings.Add("Descrizione", "Descrizione")
            tableMapping.ColumnMappings.Add("StampaConfidenziali", "StampaConfidenziali")
            tableMapping.ColumnMappings.Add("StampaOscurati", "StampaOscurati")
            tableMapping.ColumnMappings.Add("NumeroCopie", "NumeroCopie")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "dbo.BevsStampeSottoscrizioniCancella"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Id", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, "Id", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Ts", Global.System.Data.SqlDbType.Timestamp, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "Ts", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings("AuslAsmnRe_DwhClinicoV3ConnectionString").ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.BevsStampeSottoscrizioniLista"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Nome", Global.System.Data.SqlDbType.VarChar, 128, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Account", Global.System.Data.SqlDbType.VarChar, 128, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DataFineAl", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 23, 3, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdTipoReferti", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ServerDiStampa", Global.System.Data.SqlDbType.VarChar, 64, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Stampante", Global.System.Data.SqlDbType.VarChar, 64, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdStato", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdTipoSottoscrizione", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As BackEndDataSet.StampeSottoscrizioniListaDataTable, ByVal Nome As String, ByVal Account As String, ByVal DataFineAl As Global.System.Nullable(Of Date), ByVal IdTipoReferti As Global.System.Nullable(Of Integer), ByVal ServerDiStampa As String, ByVal Stampante As String, ByVal IdStato As Global.System.Nullable(Of Integer), ByVal IdTipoSottoscrizione As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Nome Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Nome,String)
            End If
            If (Account Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Account,String)
            End If
            If (DataFineAl.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(DataFineAl.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (IdTipoReferti.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(IdTipoReferti.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (ServerDiStampa Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(ServerDiStampa,String)
            End If
            If (Stampante Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(6).Value = CType(Stampante,String)
            End If
            If (IdStato.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(7).Value = CType(IdStato.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (IdTipoSottoscrizione.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(8).Value = CType(IdTipoSottoscrizione.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal Nome As String, ByVal Account As String, ByVal DataFineAl As Global.System.Nullable(Of Date), ByVal IdTipoReferti As Global.System.Nullable(Of Integer), ByVal ServerDiStampa As String, ByVal Stampante As String, ByVal IdStato As Global.System.Nullable(Of Integer), ByVal IdTipoSottoscrizione As Global.System.Nullable(Of Integer)) As BackEndDataSet.StampeSottoscrizioniListaDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Nome Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Nome,String)
            End If
            If (Account Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Account,String)
            End If
            If (DataFineAl.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(DataFineAl.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (IdTipoReferti.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(IdTipoReferti.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (ServerDiStampa Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(ServerDiStampa,String)
            End If
            If (Stampante Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(6).Value = CType(Stampante,String)
            End If
            If (IdStato.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(7).Value = CType(IdStato.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (IdTipoSottoscrizione.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(8).Value = CType(IdTipoSottoscrizione.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As BackEndDataSet.StampeSottoscrizioniListaDataTable = New BackEndDataSet.StampeSottoscrizioniListaDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As BackEndDataSet.StampeSottoscrizioniListaDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As BackEndDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "StampeSottoscrizioniLista")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Id As Global.System.Nullable(Of Global.System.Guid), ByVal Ts() As Byte) As Integer
            If (Id.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Id.Value,System.Guid)
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Ts Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Ts,Byte())
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class StampeSottoscrizioniDettaglioTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "StampeSottoscrizioniDettaglio"
            tableMapping.ColumnMappings.Add("Id", "Id")
            tableMapping.ColumnMappings.Add("Account", "Account")
            tableMapping.ColumnMappings.Add("DataFine", "DataFine")
            tableMapping.ColumnMappings.Add("IdTipoReferti", "IdTipoReferti")
            tableMapping.ColumnMappings.Add("ServerDiStampa", "ServerDiStampa")
            tableMapping.ColumnMappings.Add("Stampante", "Stampante")
            tableMapping.ColumnMappings.Add("IdStato", "IdStato")
            tableMapping.ColumnMappings.Add("IdTipoSottoscrizione", "IdTipoSottoscrizione")
            tableMapping.ColumnMappings.Add("Ts", "Ts")
            tableMapping.ColumnMappings.Add("Nome", "Nome")
            tableMapping.ColumnMappings.Add("Descrizione", "Descrizione")
            tableMapping.ColumnMappings.Add("Stato", "Stato")
            tableMapping.ColumnMappings.Add("StampaConfidenziali", "StampaConfidenziali")
            tableMapping.ColumnMappings.Add("StampaOscurati", "StampaOscurati")
            tableMapping.ColumnMappings.Add("NumeroCopie", "NumeroCopie")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "dbo.BevsStampeSottoscrizioniCancella"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Id", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, "Id", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Ts", Global.System.Data.SqlDbType.Timestamp, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "Ts", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "dbo.BevsStampeSottoscrizioniAggiungi2"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Id", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, "Id", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Account", Global.System.Data.SqlDbType.VarChar, 128, Global.System.Data.ParameterDirection.Input, 0, 0, "Account", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DataFine", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 23, 3, "DataFine", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdTipoReferti", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, "IdTipoReferti", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ServerDiStampa", Global.System.Data.SqlDbType.VarChar, 64, Global.System.Data.ParameterDirection.Input, 0, 0, "ServerDiStampa", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Stampante", Global.System.Data.SqlDbType.VarChar, 64, Global.System.Data.ParameterDirection.Input, 0, 0, "Stampante", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Nome", Global.System.Data.SqlDbType.VarChar, 128, Global.System.Data.ParameterDirection.Input, 0, 0, "Nome", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Descrizione", Global.System.Data.SqlDbType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, 0, 0, "Descrizione", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@StampaConfidenziali", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "StampaConfidenziali", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@StampaOscurati", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "StampaOscurati", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NumeroCopie", Global.System.Data.SqlDbType.TinyInt, 1, Global.System.Data.ParameterDirection.Input, 3, 0, "NumeroCopie", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "dbo.BevsStampeSottoscrizioniAggiorna2"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Id", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, "Id", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DataFine", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 23, 3, "DataFine", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdTipoReferti", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, "IdTipoReferti", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ServerDiStampa", Global.System.Data.SqlDbType.VarChar, 64, Global.System.Data.ParameterDirection.Input, 0, 0, "ServerDiStampa", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Stampante", Global.System.Data.SqlDbType.VarChar, 64, Global.System.Data.ParameterDirection.Input, 0, 0, "Stampante", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdStato", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, "IdStato", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Nome", Global.System.Data.SqlDbType.VarChar, 128, Global.System.Data.ParameterDirection.Input, 0, 0, "Nome", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Descrizione", Global.System.Data.SqlDbType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, 0, 0, "Descrizione", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Ts", Global.System.Data.SqlDbType.Timestamp, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "Ts", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@StampaConfidenziali", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "StampaConfidenziali", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@StampaOscurati", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "StampaOscurati", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NumeroCopie", Global.System.Data.SqlDbType.TinyInt, 1, Global.System.Data.ParameterDirection.Input, 3, 0, "NumeroCopie", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings("AuslAsmnRe_DwhClinicoV3ConnectionString").ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.BevsStampeSottoscrizioniDettaglio2"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Id", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As BackEndDataSet.StampeSottoscrizioniDettaglioDataTable, ByVal Id As Global.System.Nullable(Of Global.System.Guid)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Id.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Id.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal Id As Global.System.Nullable(Of Global.System.Guid)) As BackEndDataSet.StampeSottoscrizioniDettaglioDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Id.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Id.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As BackEndDataSet.StampeSottoscrizioniDettaglioDataTable = New BackEndDataSet.StampeSottoscrizioniDettaglioDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As BackEndDataSet.StampeSottoscrizioniDettaglioDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As BackEndDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "StampeSottoscrizioniDettaglio")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Id As Global.System.Nullable(Of Global.System.Guid), ByVal Ts() As Byte) As Integer
            If (Id.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Id.Value,System.Guid)
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Ts Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Ts,Byte())
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal Id As Global.System.Nullable(Of Global.System.Guid), ByVal Account As String, ByVal DataFine As Global.System.Nullable(Of Date), ByVal IdTipoReferti As Global.System.Nullable(Of Integer), ByVal ServerDiStampa As String, ByVal Stampante As String, ByVal Nome As String, ByVal Descrizione As String, ByVal StampaConfidenziali As Global.System.Nullable(Of Boolean), ByVal StampaOscurati As Global.System.Nullable(Of Boolean), ByVal NumeroCopie As Global.System.Nullable(Of Byte)) As Integer
            If (Id.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(Id.Value,System.Guid)
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Account Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(Account,String)
            End If
            If (DataFine.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(DataFine.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (IdTipoReferti.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(IdTipoReferti.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (ServerDiStampa Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(ServerDiStampa,String)
            End If
            If (Stampante Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(Stampante,String)
            End If
            If (Nome Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(Nome,String)
            End If
            If (Descrizione Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(Descrizione,String)
            End If
            If (StampaConfidenziali.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(StampaConfidenziali.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (StampaOscurati.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(StampaOscurati.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (NumeroCopie.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(NumeroCopie.Value,Byte)
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal Id As Global.System.Nullable(Of Global.System.Guid), ByVal DataFine As Global.System.Nullable(Of Date), ByVal IdTipoReferti As Global.System.Nullable(Of Integer), ByVal ServerDiStampa As String, ByVal Stampante As String, ByVal IdStato As Global.System.Nullable(Of Integer), ByVal Nome As String, ByVal Descrizione As String, ByVal Ts() As Byte, ByVal StampaConfidenziali As Global.System.Nullable(Of Boolean), ByVal StampaOscurati As Global.System.Nullable(Of Boolean), ByVal NumeroCopie As Global.System.Nullable(Of Byte)) As Integer
            If (Id.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(Id.Value,System.Guid)
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (DataFine.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(DataFine.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (IdTipoReferti.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(IdTipoReferti.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (ServerDiStampa Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(ServerDiStampa,String)
            End If
            If (Stampante Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Stampante,String)
            End If
            If (IdStato.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(IdStato.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Nome Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Nome,String)
            End If
            If (Descrizione Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Descrizione,String)
            End If
            If (Ts Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Ts,Byte())
            End If
            If (StampaConfidenziali.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(StampaConfidenziali.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (StampaOscurati.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(StampaOscurati.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (NumeroCopie.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(NumeroCopie.Value,Byte)
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class StampeSottoscrizioniRepartiRichiedentiSelezionabiliTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "StampeSottoscrizioniRepartiRichiedentiSelezionabili"
            tableMapping.ColumnMappings.Add("Id", "Id")
            tableMapping.ColumnMappings.Add("RepartoRichiedenteDescrizione", "RepartoRichiedenteDescrizione")
            tableMapping.ColumnMappings.Add("RepartoRichiedenteCodice", "RepartoRichiedenteCodice")
            tableMapping.ColumnMappings.Add("AziendaErogante", "AziendaErogante")
            tableMapping.ColumnMappings.Add("SistemaErogante", "SistemaErogante")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings("AuslAsmnRe_DwhClinicoV3ConnectionString").ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.BevsStampeSottoscrizioniRepartiRichiedentiSelezionabili2"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AziendaErogante", Global.System.Data.SqlDbType.VarChar, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SistemaErogante", Global.System.Data.SqlDbType.VarChar, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RepartoRichiedenteDescrizione", Global.System.Data.SqlDbType.VarChar, 64, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As BackEndDataSet.StampeSottoscrizioniRepartiRichiedentiSelezionabiliDataTable, ByVal AziendaErogante As String, ByVal SistemaErogante As String, ByVal RepartoRichiedenteDescrizione As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (AziendaErogante Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(AziendaErogante,String)
            End If
            If (SistemaErogante Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(SistemaErogante,String)
            End If
            If (RepartoRichiedenteDescrizione Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(RepartoRichiedenteDescrizione,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal AziendaErogante As String, ByVal SistemaErogante As String, ByVal RepartoRichiedenteDescrizione As String) As BackEndDataSet.StampeSottoscrizioniRepartiRichiedentiSelezionabiliDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (AziendaErogante Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(AziendaErogante,String)
            End If
            If (SistemaErogante Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(SistemaErogante,String)
            End If
            If (RepartoRichiedenteDescrizione Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(RepartoRichiedenteDescrizione,String)
            End If
            Dim dataTable As BackEndDataSet.StampeSottoscrizioniRepartiRichiedentiSelezionabiliDataTable = New BackEndDataSet.StampeSottoscrizioniRepartiRichiedentiSelezionabiliDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class SistemiErogantiListaTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "SistemiErogantiLista"
            tableMapping.ColumnMappings.Add("Codice", "Codice")
            tableMapping.ColumnMappings.Add("Descrizione", "Descrizione")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings("AuslAsmnRe_DwhClinicoV3ConnectionString").ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.BevsSistemiErogantiLista"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AziendaErogante", Global.System.Data.SqlDbType.VarChar, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Tipo", Global.System.Data.SqlDbType.VarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "dbo.BevsSistemiErogantiLista2"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AziendaErogante", Global.System.Data.SqlDbType.VarChar, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Tipo", Global.System.Data.SqlDbType.VarChar, 32, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As BackEndDataSet.SistemiErogantiListaDataTable, ByVal AziendaErogante As String, ByVal Tipo As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (AziendaErogante Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(AziendaErogante,String)
            End If
            If (Tipo Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Tipo,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal AziendaErogante As String, ByVal Tipo As String) As BackEndDataSet.SistemiErogantiListaDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (AziendaErogante Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(AziendaErogante,String)
            End If
            If (Tipo Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Tipo,String)
            End If
            Dim dataTable As BackEndDataSet.SistemiErogantiListaDataTable = New BackEndDataSet.SistemiErogantiListaDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByAziendaETipo(ByVal AziendaErogante As String, ByVal Tipo As String) As BackEndDataSet.SistemiErogantiListaDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (AziendaErogante Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(AziendaErogante,String)
            End If
            If (Tipo Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Tipo,String)
            End If
            Dim dataTable As BackEndDataSet.SistemiErogantiListaDataTable = New BackEndDataSet.SistemiErogantiListaDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class AziendeErogantiListaTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "AziendeErogantiLista"
            tableMapping.ColumnMappings.Add("Codice", "Codice")
            tableMapping.ColumnMappings.Add("Descrizione", "Descrizione")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings("AuslAsmnRe_DwhClinicoV3ConnectionString").ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.BevsAziendeErogantiLista"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As BackEndDataSet.AziendeErogantiListaDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As BackEndDataSet.AziendeErogantiListaDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As BackEndDataSet.AziendeErogantiListaDataTable = New BackEndDataSet.AziendeErogantiListaDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class GetDocumentoSistemiErogantiTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "GetDocumentoSistemiEroganti"
            tableMapping.ColumnMappings.Add("Id", "Id")
            tableMapping.ColumnMappings.Add("Nome", "Nome")
            tableMapping.ColumnMappings.Add("Estensione", "Estensione")
            tableMapping.ColumnMappings.Add("Dimensione", "Dimensione")
            tableMapping.ColumnMappings.Add("ContentType", "ContentType")
            tableMapping.ColumnMappings.Add("Contenuto", "Contenuto")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings("AuslAsmnRe_DwhClinicoV3ConnectionString").ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.BevsGetDocumentoSistemiEroganti"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Id", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal Id As Global.System.Nullable(Of Global.System.Guid)) As BackEndDataSet.GetDocumentoSistemiErogantiDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Id.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Id.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As BackEndDataSet.GetDocumentoSistemiErogantiDataTable = New BackEndDataSet.GetDocumentoSistemiErogantiDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class UtentiTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Utenti"
            tableMapping.ColumnMappings.Add("Id", "Id")
            tableMapping.ColumnMappings.Add("IdRuolo", "IdRuolo")
            tableMapping.ColumnMappings.Add("Utente", "Utente")
            tableMapping.ColumnMappings.Add("Descrizione", "Descrizione")
            tableMapping.ColumnMappings.Add("Ruolo", "Ruolo")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "dbo.BevsUtentiRimuovi"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Id", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, "Id", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "dbo.BevsUtentiInserisce"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Id", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, "Id", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Utente", Global.System.Data.SqlDbType.VarChar, 128, Global.System.Data.ParameterDirection.Input, 0, 0, "Utente", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Descrizione", Global.System.Data.SqlDbType.VarChar, 256, Global.System.Data.ParameterDirection.Input, 0, 0, "Descrizione", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdRuolo", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, "IdRuolo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "dbo.BevsUtentiModifica"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Id", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, "Id", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdRuolo", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, "Ruolo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings("AuslAsmnRe_DwhClinicoV3ConnectionString").ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.BevsUtentiCerca"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Id", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Utente", Global.System.Data.SqlDbType.VarChar, 128, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Descrizione", Global.System.Data.SqlDbType.VarChar, 128, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal Id As Global.System.Nullable(Of Global.System.Guid), ByVal Utente As String, ByVal Descrizione As String) As BackEndDataSet.UtentiDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Id.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Id.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Utente Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Utente,String)
            End If
            If (Descrizione Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(Descrizione,String)
            End If
            Dim dataTable As BackEndDataSet.UtentiDataTable = New BackEndDataSet.UtentiDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As BackEndDataSet.UtentiDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As BackEndDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "Utenti")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Id As Global.System.Nullable(Of Global.System.Guid)) As Integer
            If (Id.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Id.Value,System.Guid)
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal Id As Global.System.Nullable(Of Global.System.Guid), ByVal Utente As String, ByVal Descrizione As String, ByVal IdRuolo As Global.System.Nullable(Of Global.System.Guid)) As Integer
            If (Id.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(Id.Value,System.Guid)
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Utente Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(Utente,String)
            End If
            If (Descrizione Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(Descrizione,String)
            End If
            If (IdRuolo.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(IdRuolo.Value,System.Guid)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal Id As Global.System.Nullable(Of Global.System.Guid), ByVal IdRuolo As Global.System.Nullable(Of Global.System.Guid)) As Integer
            If (Id.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(Id.Value,System.Guid)
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (IdRuolo.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(IdRuolo.Value,System.Guid)
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class RuoliTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Ruoli"
            tableMapping.ColumnMappings.Add("Id", "Id")
            tableMapping.ColumnMappings.Add("Codice", "Codice")
            tableMapping.ColumnMappings.Add("Descrizione", "Descrizione")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings("AuslAsmnRe_DwhClinicoV3ConnectionString").ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.BevsRuoliLista"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdUtente", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal IdUtente As Global.System.Nullable(Of Global.System.Guid)) As BackEndDataSet.RuoliDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (IdUtente.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(IdUtente.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As BackEndDataSet.RuoliDataTable = New BackEndDataSet.RuoliDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class SACUtentiTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "SACUtenti"
            tableMapping.ColumnMappings.Add("Id", "Id")
            tableMapping.ColumnMappings.Add("Utente", "Utente")
            tableMapping.ColumnMappings.Add("Descrizione", "Descrizione")
            tableMapping.ColumnMappings.Add("Cognome", "Cognome")
            tableMapping.ColumnMappings.Add("Nome", "Nome")
            tableMapping.ColumnMappings.Add("CodiceFiscale", "CodiceFiscale")
            tableMapping.ColumnMappings.Add("Matricola", "Matricola")
            tableMapping.ColumnMappings.Add("Email", "Email")
            tableMapping.ColumnMappings.Add("Attivo", "Attivo")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "dbo.BevsUtentiInserisce"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Id", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, "Id", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Utente", Global.System.Data.SqlDbType.VarChar, 128, Global.System.Data.ParameterDirection.Input, 0, 0, "Utente", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Descrizione", Global.System.Data.SqlDbType.VarChar, 256, Global.System.Data.ParameterDirection.Input, 0, 0, "Descrizione", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdRuolo", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, "Id", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings("AuslAsmnRe_DwhClinicoV3ConnectionString").ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.BevsSACUtentiCerca"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Utente", Global.System.Data.SqlDbType.VarChar, 128, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Descrizione", Global.System.Data.SqlDbType.VarChar, 256, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Top", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal Utente As String, ByVal Descrizione As String, ByVal Top As Global.System.Nullable(Of Integer)) As BackEndDataSet.SACUtentiDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Utente Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Utente,String)
            End If
            If (Descrizione Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Descrizione,String)
            End If
            If (Top.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(Top.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As BackEndDataSet.SACUtentiDataTable = New BackEndDataSet.SACUtentiDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As BackEndDataSet.SACUtentiDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As BackEndDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "SACUtenti")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal Id As Global.System.Nullable(Of Global.System.Guid), ByVal Utente As String, ByVal Descrizione As String, ByVal IdRuolo As Global.System.Nullable(Of Global.System.Guid)) As Integer
            If (Id.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(Id.Value,System.Guid)
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Utente Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(Utente,String)
            End If
            If (Descrizione Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(Descrizione,String)
            End If
            If (IdRuolo.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(IdRuolo.Value,System.Guid)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class TipiRefertoTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "TipiReferto"
            tableMapping.ColumnMappings.Add("Id", "Id")
            tableMapping.ColumnMappings.Add("SistemaErogante", "SistemaErogante")
            tableMapping.ColumnMappings.Add("SpecialitaErogante", "SpecialitaErogante")
            tableMapping.ColumnMappings.Add("Descrizione", "Descrizione")
            tableMapping.ColumnMappings.Add("Icona", "Icona")
            tableMapping.ColumnMappings.Add("Ordinamento", "Ordinamento")
            tableMapping.ColumnMappings.Add("AziendaErogante", "AziendaErogante")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "dbo.BevsTipiRefertoRimuove"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, "Id", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "dbo.BevsTipiRefertoInserisce"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SistemaErogante", Global.System.Data.SqlDbType.VarChar, 16, Global.System.Data.ParameterDirection.Input, 0, 0, "SistemaErogante", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SpecialitaErogante", Global.System.Data.SqlDbType.VarChar, 64, Global.System.Data.ParameterDirection.Input, 0, 0, "SpecialitaErogante", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Descrizione", Global.System.Data.SqlDbType.VarChar, 128, Global.System.Data.ParameterDirection.Input, 0, 0, "Descrizione", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Icona", Global.System.Data.SqlDbType.VarBinary, 2147483647, Global.System.Data.ParameterDirection.Input, 0, 0, "Icona", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Ordinamento", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, "Ordinamento", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AziendaErogante", Global.System.Data.SqlDbType.VarChar, 16, Global.System.Data.ParameterDirection.Input, 0, 0, "AziendaErogante", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "dbo.BevsTipiRefertoModifica"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Id", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, "Id", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SistemaErogante", Global.System.Data.SqlDbType.VarChar, 16, Global.System.Data.ParameterDirection.Input, 0, 0, "SistemaErogante", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SpecialitaErogante", Global.System.Data.SqlDbType.VarChar, 64, Global.System.Data.ParameterDirection.Input, 0, 0, "SpecialitaErogante", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Descrizione", Global.System.Data.SqlDbType.VarChar, 128, Global.System.Data.ParameterDirection.Input, 0, 0, "Descrizione", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Icona", Global.System.Data.SqlDbType.VarBinary, 2147483647, Global.System.Data.ParameterDirection.Input, 0, 0, "Icona", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Ordinamento", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, "Ordinamento", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AziendaErogante", Global.System.Data.SqlDbType.VarChar, 16, Global.System.Data.ParameterDirection.Input, 0, 0, "AziendaErogante", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings("AuslAsmnRe_DwhClinicoV3ConnectionString").ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.BevsTipiRefertoCerca"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SistemaErogante", Global.System.Data.SqlDbType.VarChar, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AziendaErogante", Global.System.Data.SqlDbType.VarChar, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "dbo.BevsTipiRefertoOttieni"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Id", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal SistemaErogante As String, ByVal AziendaErogante As String) As BackEndDataSet.TipiRefertoDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (SistemaErogante Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(SistemaErogante,String)
            End If
            If (AziendaErogante Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(AziendaErogante,String)
            End If
            Dim dataTable As BackEndDataSet.TipiRefertoDataTable = New BackEndDataSet.TipiRefertoDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataById(ByVal Id As Global.System.Nullable(Of Global.System.Guid)) As BackEndDataSet.TipiRefertoDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (Id.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Id.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As BackEndDataSet.TipiRefertoDataTable = New BackEndDataSet.TipiRefertoDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As BackEndDataSet.TipiRefertoDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As BackEndDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "TipiReferto")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal ID As Global.System.Nullable(Of Global.System.Guid)) As Integer
            If (ID.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(ID.Value,System.Guid)
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal SistemaErogante As String, ByVal SpecialitaErogante As String, ByVal Descrizione As String, ByVal Icona() As Byte, ByVal Ordinamento As Global.System.Nullable(Of Integer), ByVal AziendaErogante As String) As Integer
            If (SistemaErogante Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(SistemaErogante,String)
            End If
            If (SpecialitaErogante Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(SpecialitaErogante,String)
            End If
            If (Descrizione Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(Descrizione,String)
            End If
            If (Icona Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(Icona,Byte())
            End If
            If (Ordinamento.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(Ordinamento.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (AziendaErogante Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(AziendaErogante,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal Id As Global.System.Nullable(Of Global.System.Guid), ByVal SistemaErogante As String, ByVal SpecialitaErogante As String, ByVal Descrizione As String, ByVal Icona() As Byte, ByVal Ordinamento As Global.System.Nullable(Of Integer), ByVal AziendaErogante As String) As Integer
            If (Id.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(Id.Value,System.Guid)
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (SistemaErogante Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(SistemaErogante,String)
            End If
            If (SpecialitaErogante Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(SpecialitaErogante,String)
            End If
            If (Descrizione Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Descrizione,String)
            End If
            If (Icona Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Icona,Byte())
            End If
            If (Ordinamento.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Ordinamento.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (AziendaErogante Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(AziendaErogante,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class BevsSistemiErogantiTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "BevsSistemiEroganti"
            tableMapping.ColumnMappings.Add("Id", "Id")
            tableMapping.ColumnMappings.Add("AziendaErogante", "AziendaErogante")
            tableMapping.ColumnMappings.Add("SistemaErogante", "SistemaErogante")
            tableMapping.ColumnMappings.Add("Descrizione", "Descrizione")
            tableMapping.ColumnMappings.Add("RuoloVisualizzazione", "RuoloVisualizzazione")
            tableMapping.ColumnMappings.Add("EmailControlloQualitaPassivo", "EmailControlloQualitaPassivo")
            tableMapping.ColumnMappings.Add("TipoReferti", "TipoReferti")
            tableMapping.ColumnMappings.Add("TipoRicoveri", "TipoRicoveri")
            tableMapping.ColumnMappings.Add("TipoNoteAnamnestiche", "TipoNoteAnamnestiche")
            tableMapping.ColumnMappings.Add("LoginToSac", "LoginToSac")
            tableMapping.ColumnMappings.Add("RuoloManager", "RuoloManager")
            tableMapping.ColumnMappings.Add("GeneraAnteprimaReferto", "GeneraAnteprimaReferto")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "dbo.BevsSistemiErogantiRimuove"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Id", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, "Id", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "dbo.BevsSistemiErogantiModifica"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Id", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, "Id", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RuoloVisualizzazione", Global.System.Data.SqlDbType.VarChar, 128, Global.System.Data.ParameterDirection.Input, 0, 0, "RuoloVisualizzazione", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EmailControlloQualitaPassivo", Global.System.Data.SqlDbType.VarChar, 128, Global.System.Data.ParameterDirection.Input, 0, 0, "EmailControlloQualitaPassivo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TipoReferti", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "TipoReferti", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TipoRicoveri", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "TipoRicoveri", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LoginToSac", Global.System.Data.SqlDbType.VarChar, 64, Global.System.Data.ParameterDirection.Input, 0, 0, "LoginToSac", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RuoloManager", Global.System.Data.SqlDbType.VarChar, 128, Global.System.Data.ParameterDirection.Input, 0, 0, "RuoloManager", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GeneraAnteprimaReferto", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "GeneraAnteprimaReferto", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TipoNoteAnamnestiche", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, "TipoNoteAnamnestiche", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings("AuslAsmnRe_DwhClinicoV3ConnectionString").ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.BevsSistemiErogantiCerca"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AziendaErogante", Global.System.Data.SqlDbType.VarChar, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SistemaErogante", Global.System.Data.SqlDbType.VarChar, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Descrizione", Global.System.Data.SqlDbType.VarChar, 128, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RuoloVisualizzazione", Global.System.Data.SqlDbType.VarChar, 128, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EmailControlloQualitaPassivo", Global.System.Data.SqlDbType.VarChar, 128, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TipoReferti", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TipoRicoveri", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LoginToSac", Global.System.Data.SqlDbType.VarChar, 64, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RuoloManager", Global.System.Data.SqlDbType.VarChar, 128, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Top", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GeneraAnteprimaReferto", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TipoNoteAnamnestiche", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "dbo.BevsSistemiErogantiOttieni"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Id", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As BackEndDataSet.BevsSistemiErogantiDataTable, ByVal AziendaErogante As String, ByVal SistemaErogante As String, ByVal Descrizione As String, ByVal RuoloVisualizzazione As String, ByVal EmailControlloQualitaPassivo As String, ByVal TipoReferti As Global.System.Nullable(Of Boolean), ByVal TipoRicoveri As Global.System.Nullable(Of Boolean), ByVal LoginToSac As String, ByVal RuoloManager As String, ByVal Top As Global.System.Nullable(Of Integer), ByVal GeneraAnteprimaReferto As Global.System.Nullable(Of Boolean), ByVal TipoNoteAnamnestiche As Global.System.Nullable(Of Boolean)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (AziendaErogante Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(AziendaErogante,String)
            End If
            If (SistemaErogante Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(SistemaErogante,String)
            End If
            If (Descrizione Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(Descrizione,String)
            End If
            If (RuoloVisualizzazione Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(RuoloVisualizzazione,String)
            End If
            If (EmailControlloQualitaPassivo Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(EmailControlloQualitaPassivo,String)
            End If
            If (TipoReferti.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(6).Value = CType(TipoReferti.Value,Boolean)
            Else
                Me.Adapter.SelectCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (TipoRicoveri.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(7).Value = CType(TipoRicoveri.Value,Boolean)
            Else
                Me.Adapter.SelectCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (LoginToSac Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(8).Value = CType(LoginToSac,String)
            End If
            If (RuoloManager Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(9).Value = CType(RuoloManager,String)
            End If
            If (Top.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(10).Value = CType(Top.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (GeneraAnteprimaReferto.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(11).Value = CType(GeneraAnteprimaReferto.Value,Boolean)
            Else
                Me.Adapter.SelectCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (TipoNoteAnamnestiche.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(12).Value = CType(TipoNoteAnamnestiche.Value,Boolean)
            Else
                Me.Adapter.SelectCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal AziendaErogante As String, ByVal SistemaErogante As String, ByVal Descrizione As String, ByVal RuoloVisualizzazione As String, ByVal EmailControlloQualitaPassivo As String, ByVal TipoReferti As Global.System.Nullable(Of Boolean), ByVal TipoRicoveri As Global.System.Nullable(Of Boolean), ByVal LoginToSac As String, ByVal RuoloManager As String, ByVal Top As Global.System.Nullable(Of Integer), ByVal GeneraAnteprimaReferto As Global.System.Nullable(Of Boolean), ByVal TipoNoteAnamnestiche As Global.System.Nullable(Of Boolean)) As BackEndDataSet.BevsSistemiErogantiDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (AziendaErogante Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(AziendaErogante,String)
            End If
            If (SistemaErogante Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(SistemaErogante,String)
            End If
            If (Descrizione Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(Descrizione,String)
            End If
            If (RuoloVisualizzazione Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(RuoloVisualizzazione,String)
            End If
            If (EmailControlloQualitaPassivo Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(EmailControlloQualitaPassivo,String)
            End If
            If (TipoReferti.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(6).Value = CType(TipoReferti.Value,Boolean)
            Else
                Me.Adapter.SelectCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (TipoRicoveri.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(7).Value = CType(TipoRicoveri.Value,Boolean)
            Else
                Me.Adapter.SelectCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (LoginToSac Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(8).Value = CType(LoginToSac,String)
            End If
            If (RuoloManager Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(9).Value = CType(RuoloManager,String)
            End If
            If (Top.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(10).Value = CType(Top.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (GeneraAnteprimaReferto.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(11).Value = CType(GeneraAnteprimaReferto.Value,Boolean)
            Else
                Me.Adapter.SelectCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (TipoNoteAnamnestiche.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(12).Value = CType(TipoNoteAnamnestiche.Value,Boolean)
            Else
                Me.Adapter.SelectCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As BackEndDataSet.BevsSistemiErogantiDataTable = New BackEndDataSet.BevsSistemiErogantiDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy(ByVal dataTable As BackEndDataSet.BevsSistemiErogantiDataTable, ByVal Id As Global.System.Nullable(Of Global.System.Guid)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (Id.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Id.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy(ByVal Id As Global.System.Nullable(Of Global.System.Guid)) As BackEndDataSet.BevsSistemiErogantiDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (Id.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Id.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As BackEndDataSet.BevsSistemiErogantiDataTable = New BackEndDataSet.BevsSistemiErogantiDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As BackEndDataSet.BevsSistemiErogantiDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As BackEndDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "BevsSistemiEroganti")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Id As Global.System.Nullable(Of Global.System.Guid)) As Integer
            If (Id.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Id.Value,System.Guid)
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal Id As Global.System.Nullable(Of Global.System.Guid), ByVal RuoloVisualizzazione As String, ByVal EmailControlloQualitaPassivo As String, ByVal TipoReferti As Global.System.Nullable(Of Boolean), ByVal TipoRicoveri As Global.System.Nullable(Of Boolean), ByVal LoginToSac As String, ByVal RuoloManager As String, ByVal GeneraAnteprimaReferto As Global.System.Nullable(Of Boolean), ByVal TipoNoteAnamnestiche As Global.System.Nullable(Of Boolean)) As Integer
            If (Id.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(Id.Value,System.Guid)
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (RuoloVisualizzazione Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(RuoloVisualizzazione,String)
            End If
            If (EmailControlloQualitaPassivo Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(EmailControlloQualitaPassivo,String)
            End If
            If (TipoReferti.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(TipoReferti.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (TipoRicoveri.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(TipoRicoveri.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (LoginToSac Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(LoginToSac,String)
            End If
            If (RuoloManager Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(RuoloManager,String)
            End If
            If (GeneraAnteprimaReferto.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(GeneraAnteprimaReferto.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (TipoNoteAnamnestiche.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(TipoNoteAnamnestiche.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class MMGSistemiAbilitatiCercaTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "MMGSistemiAbilitatiCerca"
            tableMapping.ColumnMappings.Add("Id", "Id")
            tableMapping.ColumnMappings.Add("SistemaErogante", "SistemaErogante")
            tableMapping.ColumnMappings.Add("SpecialitaErogante", "SpecialitaErogante")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "dbo.SistemiAbilitatiRimuove"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ID", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, "Id", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "dbo.SistemiAbilitatiInserisce"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SistemaErogante", Global.System.Data.SqlDbType.VarChar, 16, Global.System.Data.ParameterDirection.Input, 0, 0, "SistemaErogante", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SpecialitaErogante", Global.System.Data.SqlDbType.VarChar, 64, Global.System.Data.ParameterDirection.Input, 0, 0, "SpecialitaErogante", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "dbo.SistemiAbilitatiModifica"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Id", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, "Id", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SistemaErogante", Global.System.Data.SqlDbType.VarChar, 16, Global.System.Data.ParameterDirection.Input, 0, 0, "SistemaErogante", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SpecialitaErogante", Global.System.Data.SqlDbType.VarChar, 64, Global.System.Data.ParameterDirection.Input, 0, 0, "SpecialitaErogante", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings("AuslAsmnRe_DwhClinicoMMGConnectionString").ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.SistemiAbilitatiCerca"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SistemaErogante", Global.System.Data.SqlDbType.VarChar, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SpecialitaErogante", Global.System.Data.SqlDbType.VarChar, 64, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "dbo.SistemiAbilitatiOttieni"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Id", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As BackEndDataSet.MMGSistemiAbilitatiCercaDataTable, ByVal SistemaErogante As String, ByVal SpecialitaErogante As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (SistemaErogante Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(SistemaErogante,String)
            End If
            If (SpecialitaErogante Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(SpecialitaErogante,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal SistemaErogante As String, ByVal SpecialitaErogante As String) As BackEndDataSet.MMGSistemiAbilitatiCercaDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (SistemaErogante Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(SistemaErogante,String)
            End If
            If (SpecialitaErogante Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(SpecialitaErogante,String)
            End If
            Dim dataTable As BackEndDataSet.MMGSistemiAbilitatiCercaDataTable = New BackEndDataSet.MMGSistemiAbilitatiCercaDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy(ByVal Id As Global.System.Nullable(Of Global.System.Guid)) As BackEndDataSet.MMGSistemiAbilitatiCercaDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (Id.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Id.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As BackEndDataSet.MMGSistemiAbilitatiCercaDataTable = New BackEndDataSet.MMGSistemiAbilitatiCercaDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As BackEndDataSet.MMGSistemiAbilitatiCercaDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As BackEndDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "MMGSistemiAbilitatiCerca")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal ID As Global.System.Nullable(Of Global.System.Guid)) As Integer
            If (ID.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(ID.Value,System.Guid)
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal SistemaErogante As String, ByVal SpecialitaErogante As String) As Integer
            If (SistemaErogante Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(SistemaErogante,String)
            End If
            If (SpecialitaErogante Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(SpecialitaErogante,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal Id As Global.System.Nullable(Of Global.System.Guid), ByVal SistemaErogante As String, ByVal SpecialitaErogante As String) As Integer
            If (Id.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(Id.Value,System.Guid)
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (SistemaErogante Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(SistemaErogante,String)
            End If
            If (SpecialitaErogante Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(SpecialitaErogante,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class BevsSistemiErogantiCodiciComboTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "BevsSistemiErogantiCodiciCombo"
            tableMapping.ColumnMappings.Add("Codice", "Codice")
            tableMapping.ColumnMappings.Add("Descrizione", "Descrizione")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings("AuslAsmnRe_DwhClinicoV3ConnectionString").ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.BevsSistemiErogantiCodiciCombo"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Tipo", Global.System.Data.SqlDbType.VarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As BackEndDataSet.BevsSistemiErogantiCodiciComboDataTable, ByVal Tipo As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Tipo Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Tipo,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal Tipo As String) As BackEndDataSet.BevsSistemiErogantiCodiciComboDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Tipo Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Tipo,String)
            End If
            Dim dataTable As BackEndDataSet.BevsSistemiErogantiCodiciComboDataTable = New BackEndDataSet.BevsSistemiErogantiCodiciComboDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class BeRicoveriListaTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "BeRicoveriLista"
            tableMapping.ColumnMappings.Add("ID", "ID")
            tableMapping.ColumnMappings.Add("IdPaziente", "IdPaziente")
            tableMapping.ColumnMappings.Add("DataInserimento", "DataInserimento")
            tableMapping.ColumnMappings.Add("DataModifica", "DataModifica")
            tableMapping.ColumnMappings.Add("AziendaErogante", "AziendaErogante")
            tableMapping.ColumnMappings.Add("SistemaErogante", "SistemaErogante")
            tableMapping.ColumnMappings.Add("RepartoErogante", "RepartoErogante")
            tableMapping.ColumnMappings.Add("NumeroNosologico", "NumeroNosologico")
            tableMapping.ColumnMappings.Add("Cognome", "Cognome")
            tableMapping.ColumnMappings.Add("Nome", "Nome")
            tableMapping.ColumnMappings.Add("CodiceFiscale", "CodiceFiscale")
            tableMapping.ColumnMappings.Add("DataNascita", "DataNascita")
            tableMapping.ColumnMappings.Add("ComuneNascita", "ComuneNascita")
            tableMapping.ColumnMappings.Add("CodiceSanitario", "CodiceSanitario")
            tableMapping.ColumnMappings.Add("RepartoErogante1", "RepartoErogante1")
            tableMapping.ColumnMappings.Add("StatoCodice", "StatoCodice")
            tableMapping.ColumnMappings.Add("CodiceOscuramento", "CodiceOscuramento")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "dbo.BevsCancellaRicovero"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Id", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, "ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings("AuslAsmnRe_DwhClinicoV3ConnectionString").ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.BeRicoveriLista"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Id", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AziendaErogante", Global.System.Data.SqlDbType.VarChar, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NumeroNosologico", Global.System.Data.SqlDbType.VarChar, 64, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Cognome", Global.System.Data.SqlDbType.VarChar, 64, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Nome", Global.System.Data.SqlDbType.VarChar, 64, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CodiceFiscale", Global.System.Data.SqlDbType.VarChar, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DataNascita", Global.System.Data.SqlDbType.[Date], 3, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@dataModificaDAL", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 23, 3, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@dataModificaAL", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 23, 3, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@idPaziente", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MaxRow", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "dbo.BevsRicoveriOttieni"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdRicovero", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As BackEndDataSet.BeRicoveriListaDataTable, ByVal Id As Global.System.Nullable(Of Global.System.Guid), ByVal AziendaErogante As String, ByVal NumeroNosologico As String, ByVal Cognome As String, ByVal Nome As String, ByVal CodiceFiscale As String, ByVal DataNascita As Global.System.Nullable(Of Date), ByVal dataModificaDAL As Global.System.Nullable(Of Date), ByVal dataModificaAL As Global.System.Nullable(Of Date), ByVal idPaziente As Global.System.Nullable(Of Global.System.Guid), ByVal MaxRow As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Id.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Id.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (AziendaErogante Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(AziendaErogante,String)
            End If
            If (NumeroNosologico Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(NumeroNosologico,String)
            End If
            If (Cognome Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(Cognome,String)
            End If
            If (Nome Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(Nome,String)
            End If
            If (CodiceFiscale Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(6).Value = CType(CodiceFiscale,String)
            End If
            If (DataNascita.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(7).Value = CType(DataNascita.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (dataModificaDAL.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(8).Value = CType(dataModificaDAL.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (dataModificaAL.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(9).Value = CType(dataModificaAL.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (idPaziente.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(10).Value = CType(idPaziente.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (MaxRow.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(11).Value = CType(MaxRow.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal Id As Global.System.Nullable(Of Global.System.Guid), ByVal AziendaErogante As String, ByVal NumeroNosologico As String, ByVal Cognome As String, ByVal Nome As String, ByVal CodiceFiscale As String, ByVal DataNascita As Global.System.Nullable(Of Date), ByVal dataModificaDAL As Global.System.Nullable(Of Date), ByVal dataModificaAL As Global.System.Nullable(Of Date), ByVal idPaziente As Global.System.Nullable(Of Global.System.Guid), ByVal MaxRow As Global.System.Nullable(Of Integer)) As BackEndDataSet.BeRicoveriListaDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Id.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Id.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (AziendaErogante Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(AziendaErogante,String)
            End If
            If (NumeroNosologico Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(NumeroNosologico,String)
            End If
            If (Cognome Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(Cognome,String)
            End If
            If (Nome Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(Nome,String)
            End If
            If (CodiceFiscale Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(6).Value = CType(CodiceFiscale,String)
            End If
            If (DataNascita.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(7).Value = CType(DataNascita.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (dataModificaDAL.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(8).Value = CType(dataModificaDAL.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (dataModificaAL.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(9).Value = CType(dataModificaAL.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (idPaziente.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(10).Value = CType(idPaziente.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (MaxRow.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(11).Value = CType(MaxRow.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As BackEndDataSet.BeRicoveriListaDataTable = New BackEndDataSet.BeRicoveriListaDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy(ByVal dataTable As BackEndDataSet.BeRicoveriListaDataTable, ByVal IdRicovero As Global.System.Nullable(Of Global.System.Guid)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (IdRicovero.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(IdRicovero.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy(ByVal IdRicovero As Global.System.Nullable(Of Global.System.Guid)) As BackEndDataSet.BeRicoveriListaDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (IdRicovero.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(IdRicovero.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As BackEndDataSet.BeRicoveriListaDataTable = New BackEndDataSet.BeRicoveriListaDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As BackEndDataSet.BeRicoveriListaDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As BackEndDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "BeRicoveriLista")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Id As Global.System.Nullable(Of Global.System.Guid)) As Integer
            If (Id.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Id.Value,System.Guid)
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class BevsAttributiRicoveroOttieniTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "BevsAttributiRicoveroOttieni"
            tableMapping.ColumnMappings.Add("IdRicoveriBase", "IdRicoveriBase")
            tableMapping.ColumnMappings.Add("Nome", "Nome")
            tableMapping.ColumnMappings.Add("Valore", "Valore")
            tableMapping.ColumnMappings.Add("DataPartizione", "DataPartizione")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings("AuslAsmnRe_DwhClinicoV3ConnectionString").ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.BevsAttributiRicoveroOttieni"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdRicovero", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As BackEndDataSet.BevsAttributiRicoveroOttieniDataTable, ByVal IdRicovero As Global.System.Nullable(Of Global.System.Guid)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (IdRicovero.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(IdRicovero.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal IdRicovero As Global.System.Nullable(Of Global.System.Guid)) As BackEndDataSet.BevsAttributiRicoveroOttieniDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (IdRicovero.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(IdRicovero.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As BackEndDataSet.BevsAttributiRicoveroOttieniDataTable = New BackEndDataSet.BevsAttributiRicoveroOttieniDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class BevsEventiRicoveroOttieniTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "BevsEventiRicoveroOttieni"
            tableMapping.ColumnMappings.Add("id", "id")
            tableMapping.ColumnMappings.Add("IdPaziente", "IdPaziente")
            tableMapping.ColumnMappings.Add("DataInserimento", "DataInserimento")
            tableMapping.ColumnMappings.Add("DataModifica", "DataModifica")
            tableMapping.ColumnMappings.Add("AziendaErogante", "AziendaErogante")
            tableMapping.ColumnMappings.Add("SistemaErogante", "SistemaErogante")
            tableMapping.ColumnMappings.Add("RepartoErogante", "RepartoErogante")
            tableMapping.ColumnMappings.Add("DataEvento", "DataEvento")
            tableMapping.ColumnMappings.Add("StatoCodice", "StatoCodice")
            tableMapping.ColumnMappings.Add("TipoEventoCodice", "TipoEventoCodice")
            tableMapping.ColumnMappings.Add("TipoEventoDescr", "TipoEventoDescr")
            tableMapping.ColumnMappings.Add("TipoEpisodio", "TipoEpisodio")
            tableMapping.ColumnMappings.Add("TipoEpisodioDescr", "TipoEpisodioDescr")
            tableMapping.ColumnMappings.Add("NumeroNosologico", "NumeroNosologico")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings("AuslAsmnRe_DwhClinicoV3ConnectionString").ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.BevsEventiRicoveroOttieni"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NumeroNosologico", Global.System.Data.SqlDbType.VarChar, 64, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AziendaErogante", Global.System.Data.SqlDbType.VarChar, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As BackEndDataSet.BevsEventiRicoveroOttieniDataTable, ByVal NumeroNosologico As String, ByVal AziendaErogante As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (NumeroNosologico Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(NumeroNosologico,String)
            End If
            If (AziendaErogante Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(AziendaErogante,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal NumeroNosologico As String, ByVal AziendaErogante As String) As BackEndDataSet.BevsEventiRicoveroOttieniDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (NumeroNosologico Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(NumeroNosologico,String)
            End If
            If (AziendaErogante Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(AziendaErogante,String)
            End If
            Dim dataTable As BackEndDataSet.BevsEventiRicoveroOttieniDataTable = New BackEndDataSet.BevsEventiRicoveroOttieniDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class BevsAttributiEventoOttieniTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "BevsAttributiEventoOttieni"
            tableMapping.ColumnMappings.Add("IdEventiBase", "IdEventiBase")
            tableMapping.ColumnMappings.Add("Nome", "Nome")
            tableMapping.ColumnMappings.Add("Valore", "Valore")
            tableMapping.ColumnMappings.Add("DataPartizione", "DataPartizione")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings("AuslAsmnRe_DwhClinicoV3ConnectionString").ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.BevsAttributiEventoOttieni"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdEvento", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As BackEndDataSet.BevsAttributiEventoOttieniDataTable, ByVal IdEvento As Global.System.Nullable(Of Global.System.Guid)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (IdEvento.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(IdEvento.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal IdEvento As Global.System.Nullable(Of Global.System.Guid)) As BackEndDataSet.BevsAttributiEventoOttieniDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (IdEvento.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(IdEvento.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As BackEndDataSet.BevsAttributiEventoOttieniDataTable = New BackEndDataSet.BevsAttributiEventoOttieniDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class QueriesTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private _commandCollection() As Global.System.Data.IDbCommand
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.IDbCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.IDbCommand(2) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            CType(Me._commandCollection(0),Global.System.Data.SqlClient.SqlCommand).Connection = New Global.System.Data.SqlClient.SqlConnection(System.Configuration.ConfigurationManager.ConnectionStrings("AuslAsmnRe_DwhClinicoV3ConnectionString").ConnectionString)
            CType(Me._commandCollection(0),Global.System.Data.SqlClient.SqlCommand).CommandText = "dbo.BevsStampeSottoscrizioniRepartiRichiedentiAggiungi"
            CType(Me._commandCollection(0),Global.System.Data.SqlClient.SqlCommand).CommandType = Global.System.Data.CommandType.StoredProcedure
            CType(Me._commandCollection(0),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(0),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdStampeSottoscrizioni", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(0),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdRepartiRichiedentiSistemiEroganti", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            CType(Me._commandCollection(1),Global.System.Data.SqlClient.SqlCommand).Connection = New Global.System.Data.SqlClient.SqlConnection(System.Configuration.ConfigurationManager.ConnectionStrings("AuslAsmnRe_DwhClinicoV3ConnectionString").ConnectionString)
            CType(Me._commandCollection(1),Global.System.Data.SqlClient.SqlCommand).CommandText = "dbo.BevsStampeSottoscrizioniRepartiRichiedentiRimuovi"
            CType(Me._commandCollection(1),Global.System.Data.SqlClient.SqlCommand).CommandType = Global.System.Data.CommandType.StoredProcedure
            CType(Me._commandCollection(1),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(1),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdStampeSottoscrizioni", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(1),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdRepartiRichiedentiSistemiEroganti", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand()
            CType(Me._commandCollection(2),Global.System.Data.SqlClient.SqlCommand).Connection = New Global.System.Data.SqlClient.SqlConnection(System.Configuration.ConfigurationManager.ConnectionStrings("AuslAsmnRe_DwhClinicoV3ConnectionString").ConnectionString)
            CType(Me._commandCollection(2),Global.System.Data.SqlClient.SqlCommand).CommandText = "dbo.BevsCodaEventiSoleInserisce"
            CType(Me._commandCollection(2),Global.System.Data.SqlClient.SqlCommand).CommandType = Global.System.Data.CommandType.StoredProcedure
            CType(Me._commandCollection(2),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(2),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdEvento", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(2),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Operazione", Global.System.Data.SqlDbType.SmallInt, 2, Global.System.Data.ParameterDirection.Input, 5, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(2),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AziendaErogante", Global.System.Data.SqlDbType.VarChar, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(2),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SistemaErogante", Global.System.Data.SqlDbType.VarChar, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(2),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TipoEventoCodice", Global.System.Data.SqlDbType.VarChar, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(2),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TipoRicoveroCodice", Global.System.Data.SqlDbType.VarChar, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(2),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Messaggio", Global.System.Data.SqlDbType.Xml, 2147483647, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function StampeSottoscrizioniRepartiRichiedentiAggiungi(ByVal IdStampeSottoscrizioni As Global.System.Nullable(Of Global.System.Guid), ByVal IdRepartiRichiedentiSistemiEroganti As Global.System.Nullable(Of Global.System.Guid)) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = CType(Me.CommandCollection(0),Global.System.Data.SqlClient.SqlCommand)
            If (IdStampeSottoscrizioni.HasValue = true) Then
                command.Parameters(1).Value = CType(IdStampeSottoscrizioni.Value,System.Guid)
            Else
                command.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (IdRepartiRichiedentiSistemiEroganti.HasValue = true) Then
                command.Parameters(2).Value = CType(IdRepartiRichiedentiSistemiEroganti.Value,System.Guid)
            Else
                command.Parameters(2).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function StampeSottoscrizioniRepartiRichiedentiRimuovi(ByVal IdStampeSottoscrizioni As Global.System.Nullable(Of Global.System.Guid), ByVal IdRepartiRichiedentiSistemiEroganti As Global.System.Nullable(Of Global.System.Guid)) As Object
            Dim command As Global.System.Data.SqlClient.SqlCommand = CType(Me.CommandCollection(1),Global.System.Data.SqlClient.SqlCommand)
            If (IdStampeSottoscrizioni.HasValue = true) Then
                command.Parameters(1).Value = CType(IdStampeSottoscrizioni.Value,System.Guid)
            Else
                command.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (IdRepartiRichiedentiSistemiEroganti.HasValue = true) Then
                command.Parameters(2).Value = CType(IdRepartiRichiedentiSistemiEroganti.Value,System.Guid)
            Else
                command.Parameters(2).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function BevsCodaEventiSoleInserisce(ByVal IdEvento As Global.System.Nullable(Of Global.System.Guid), ByVal Operazione As Global.System.Nullable(Of Short), ByVal AziendaErogante As String, ByVal SistemaErogante As String, ByVal TipoEventoCodice As String, ByVal TipoRicoveroCodice As String, ByVal Messaggio As Object) As Object
            Dim command As Global.System.Data.SqlClient.SqlCommand = CType(Me.CommandCollection(2),Global.System.Data.SqlClient.SqlCommand)
            If (IdEvento.HasValue = true) Then
                command.Parameters(1).Value = CType(IdEvento.Value,System.Guid)
            Else
                command.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Operazione.HasValue = true) Then
                command.Parameters(2).Value = CType(Operazione.Value,Short)
            Else
                command.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (AziendaErogante Is Nothing) Then
                command.Parameters(3).Value = Global.System.DBNull.Value
            Else
                command.Parameters(3).Value = CType(AziendaErogante,String)
            End If
            If (SistemaErogante Is Nothing) Then
                command.Parameters(4).Value = Global.System.DBNull.Value
            Else
                command.Parameters(4).Value = CType(SistemaErogante,String)
            End If
            If (TipoEventoCodice Is Nothing) Then
                command.Parameters(5).Value = Global.System.DBNull.Value
            Else
                command.Parameters(5).Value = CType(TipoEventoCodice,String)
            End If
            If (TipoRicoveroCodice Is Nothing) Then
                command.Parameters(6).Value = Global.System.DBNull.Value
            Else
                command.Parameters(6).Value = CType(TipoRicoveroCodice,String)
            End If
            If (Messaggio Is Nothing) Then
                command.Parameters(7).Value = Global.System.DBNull.Value
            Else
                command.Parameters(7).Value = CType(Messaggio,Object)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
    End Class
End Namespace
