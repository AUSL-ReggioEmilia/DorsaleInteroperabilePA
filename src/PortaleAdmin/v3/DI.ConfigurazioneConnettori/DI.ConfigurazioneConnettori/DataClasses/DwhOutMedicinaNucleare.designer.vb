'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="Asmn_DwhOut_MedicinaNucleare")>  _
Partial Public Class DwhOutMedicinaNucleareDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertPazientiDaMonitorare(instance As PazientiDaMonitorare)
    End Sub
  Partial Private Sub UpdatePazientiDaMonitorare(instance As PazientiDaMonitorare)
    End Sub
  Partial Private Sub DeletePazientiDaMonitorare(instance As PazientiDaMonitorare)
    End Sub
  Partial Private Sub InsertPrestazioniDaMonitorare(instance As PrestazioniDaMonitorare)
    End Sub
  Partial Private Sub UpdatePrestazioniDaMonitorare(instance As PrestazioniDaMonitorare)
    End Sub
  Partial Private Sub DeletePrestazioniDaMonitorare(instance As PrestazioniDaMonitorare)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.System.Configuration.ConfigurationManager.ConnectionStrings("Asmn_DwhOut_MedicinaNucleareConnectionString").ConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property PazientiDaMonitorare() As System.Data.Linq.Table(Of PazientiDaMonitorare)
		Get
			Return Me.GetTable(Of PazientiDaMonitorare)
		End Get
	End Property
	
	Public ReadOnly Property PrestazioniDaMonitorare() As System.Data.Linq.Table(Of PrestazioniDaMonitorare)
		Get
			Return Me.GetTable(Of PrestazioniDaMonitorare)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.PazientiDaMonitorare")>  _
Partial Public Class PazientiDaMonitorare
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Id As System.Guid
	
	Private _Cognome As String
	
	Private _Nome As String
	
	Private _DataNascita As Date
	
	Private _DataInizioMonitoraggio As System.Nullable(Of Date)
	
	Private _DataFineMonitoraggio As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdChanging(value As System.Guid)
    End Sub
    Partial Private Sub OnIdChanged()
    End Sub
    Partial Private Sub OnCognomeChanging(value As String)
    End Sub
    Partial Private Sub OnCognomeChanged()
    End Sub
    Partial Private Sub OnNomeChanging(value As String)
    End Sub
    Partial Private Sub OnNomeChanged()
    End Sub
    Partial Private Sub OnDataNascitaChanging(value As Date)
    End Sub
    Partial Private Sub OnDataNascitaChanged()
    End Sub
    Partial Private Sub OnDataInizioMonitoraggioChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDataInizioMonitoraggioChanged()
    End Sub
    Partial Private Sub OnDataFineMonitoraggioChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDataFineMonitoraggioChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id", DbType:="UniqueIdentifier NOT NULL", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property Id() As System.Guid
		Get
			Return Me._Id
		End Get
		Set
			If ((Me._Id = value)  _
						= false) Then
				Me.OnIdChanging(value)
				Me.SendPropertyChanging
				Me._Id = value
				Me.SendPropertyChanged("Id")
				Me.OnIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cognome", DbType:="VarChar(100) NOT NULL", CanBeNull:=false)>  _
	Public Property Cognome() As String
		Get
			Return Me._Cognome
		End Get
		Set
			If (String.Equals(Me._Cognome, value) = false) Then
				Me.OnCognomeChanging(value)
				Me.SendPropertyChanging
				Me._Cognome = value
				Me.SendPropertyChanged("Cognome")
				Me.OnCognomeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Nome", DbType:="VarChar(100) NOT NULL", CanBeNull:=false)>  _
	Public Property Nome() As String
		Get
			Return Me._Nome
		End Get
		Set
			If (String.Equals(Me._Nome, value) = false) Then
				Me.OnNomeChanging(value)
				Me.SendPropertyChanging
				Me._Nome = value
				Me.SendPropertyChanged("Nome")
				Me.OnNomeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DataNascita", DbType:="DateTime NOT NULL")>  _
	Public Property DataNascita() As Date
		Get
			Return Me._DataNascita
		End Get
		Set
			If ((Me._DataNascita = value)  _
						= false) Then
				Me.OnDataNascitaChanging(value)
				Me.SendPropertyChanging
				Me._DataNascita = value
				Me.SendPropertyChanged("DataNascita")
				Me.OnDataNascitaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DataInizioMonitoraggio", DbType:="DateTime")>  _
	Public Property DataInizioMonitoraggio() As System.Nullable(Of Date)
		Get
			Return Me._DataInizioMonitoraggio
		End Get
		Set
			If (Me._DataInizioMonitoraggio.Equals(value) = false) Then
				Me.OnDataInizioMonitoraggioChanging(value)
				Me.SendPropertyChanging
				Me._DataInizioMonitoraggio = value
				Me.SendPropertyChanged("DataInizioMonitoraggio")
				Me.OnDataInizioMonitoraggioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DataFineMonitoraggio", DbType:="DateTime")>  _
	Public Property DataFineMonitoraggio() As System.Nullable(Of Date)
		Get
			Return Me._DataFineMonitoraggio
		End Get
		Set
			If (Me._DataFineMonitoraggio.Equals(value) = false) Then
				Me.OnDataFineMonitoraggioChanging(value)
				Me.SendPropertyChanging
				Me._DataFineMonitoraggio = value
				Me.SendPropertyChanged("DataFineMonitoraggio")
				Me.OnDataFineMonitoraggioChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.PrestazioniDaMonitorare")>  _
Partial Public Class PrestazioniDaMonitorare
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Codice As String
	
	Private _Descrizione As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCodiceChanging(value As String)
    End Sub
    Partial Private Sub OnCodiceChanged()
    End Sub
    Partial Private Sub OnDescrizioneChanging(value As String)
    End Sub
    Partial Private Sub OnDescrizioneChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Codice", DbType:="VarChar(12) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property Codice() As String
		Get
			Return Me._Codice
		End Get
		Set
			If (String.Equals(Me._Codice, value) = false) Then
				Me.OnCodiceChanging(value)
				Me.SendPropertyChanging
				Me._Codice = value
				Me.SendPropertyChanged("Codice")
				Me.OnCodiceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Descrizione", DbType:="VarChar(150) NOT NULL", CanBeNull:=false)>  _
	Public Property Descrizione() As String
		Get
			Return Me._Descrizione
		End Get
		Set
			If (String.Equals(Me._Descrizione, value) = false) Then
				Me.OnDescrizioneChanging(value)
				Me.SendPropertyChanging
				Me._Descrizione = value
				Me.SendPropertyChanged("Descrizione")
				Me.OnDescrizioneChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
