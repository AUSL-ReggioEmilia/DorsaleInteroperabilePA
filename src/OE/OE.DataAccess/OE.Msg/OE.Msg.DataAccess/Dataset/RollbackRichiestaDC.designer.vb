'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="AuslAsmnRe_OrderEntry")>  _
Partial Public Class RollbackRichiestaDCDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertOrdiniTestate(instance As OrdiniTestate)
    End Sub
  Partial Private Sub UpdateOrdiniTestate(instance As OrdiniTestate)
    End Sub
  Partial Private Sub DeleteOrdiniTestate(instance As OrdiniTestate)
    End Sub
  Partial Private Sub InsertOrdiniTestateDatiAggiuntivi(instance As OrdiniTestateDatiAggiuntivi)
    End Sub
  Partial Private Sub UpdateOrdiniTestateDatiAggiuntivi(instance As OrdiniTestateDatiAggiuntivi)
    End Sub
  Partial Private Sub DeleteOrdiniTestateDatiAggiuntivi(instance As OrdiniTestateDatiAggiuntivi)
    End Sub
  Partial Private Sub InsertOrdiniRigheRichieste(instance As OrdiniRigheRichieste)
    End Sub
  Partial Private Sub UpdateOrdiniRigheRichieste(instance As OrdiniRigheRichieste)
    End Sub
  Partial Private Sub DeleteOrdiniRigheRichieste(instance As OrdiniRigheRichieste)
    End Sub
  Partial Private Sub InsertOrdiniRigheRichiesteDatiAggiuntivi(instance As OrdiniRigheRichiesteDatiAggiuntivi)
    End Sub
  Partial Private Sub UpdateOrdiniRigheRichiesteDatiAggiuntivi(instance As OrdiniRigheRichiesteDatiAggiuntivi)
    End Sub
  Partial Private Sub DeleteOrdiniRigheRichiesteDatiAggiuntivi(instance As OrdiniRigheRichiesteDatiAggiuntivi)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.OE.DataAccess.My.MySettings.Default.OrderEntryConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property OrdiniTestates() As System.Data.Linq.Table(Of OrdiniTestate)
		Get
			Return Me.GetTable(Of OrdiniTestate)
		End Get
	End Property
	
	Public ReadOnly Property OrdiniTestateDatiAggiuntivis() As System.Data.Linq.Table(Of OrdiniTestateDatiAggiuntivi)
		Get
			Return Me.GetTable(Of OrdiniTestateDatiAggiuntivi)
		End Get
	End Property
	
	Public ReadOnly Property OrdiniRigheRichiestes() As System.Data.Linq.Table(Of OrdiniRigheRichieste)
		Get
			Return Me.GetTable(Of OrdiniRigheRichieste)
		End Get
	End Property
	
	Public ReadOnly Property OrdiniRigheRichiesteDatiAggiuntivis() As System.Data.Linq.Table(Of OrdiniRigheRichiesteDatiAggiuntivi)
		Get
			Return Me.GetTable(Of OrdiniRigheRichiesteDatiAggiuntivi)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.OrdiniTestate")>  _
Partial Public Class OrdiniTestate
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As System.Guid
	
	Private _DataInserimento As Date
	
	Private _DataModifica As Date
	
	Private _IDTicketInserimento As System.Guid
	
	Private _IDTicketModifica As System.Guid
	
	Private _TS As System.Data.Linq.Binary
	
	Private _Anno As Integer
	
	Private _Numero As Integer
	
	Private _IDUnitaOperativaRichiedente As System.Guid
	
	Private _IDSistemaRichiedente As System.Guid
	
	Private _NumeroNosologico As String
	
	Private _IDRichiestaRichiedente As String
	
	Private _DataRichiesta As Date
	
	Private _StatoOrderEntry As String
	
	Private _SottoStatoOrderEntry As String
	
	Private _StatoRisposta As String
	
	Private _DataModificaStato As System.Nullable(Of Date)
	
	Private _StatoRichiedente As System.Xml.Linq.XElement
	
	Private _Data As System.Nullable(Of Date)
	
	Private _Operatore As System.Xml.Linq.XElement
	
	Private _Priorita As System.Xml.Linq.XElement
	
	Private _TipoEpisodio As System.Xml.Linq.XElement
	
	Private _AnagraficaCodice As String
	
	Private _AnagraficaNome As String
	
	Private _PazienteIdRichiedente As String
	
	Private _PazienteIdSac As System.Nullable(Of System.Guid)
	
	Private _PazienteRegime As String
	
	Private _PazienteCognome As String
	
	Private _PazienteNome As String
	
	Private _PazienteDataNascita As System.Nullable(Of Date)
	
	Private _PazienteSesso As String
	
	Private _PazienteCodiceFiscale As String
	
	Private _Paziente As System.Xml.Linq.XElement
	
	Private _Consensi As System.Xml.Linq.XElement
	
	Private _Note As String
	
	Private _DatiRollback As System.Xml.Linq.XElement
	
	Private _Regime As System.Xml.Linq.XElement
	
	Private _DataPrenotazione As System.Nullable(Of Date)
	
	Private _StatoValidazione As String
	
	Private _Validazione As System.Xml.Linq.XElement
	
	Private _StatoTransazione As String
	
	Private _DataTransazione As System.Nullable(Of Date)
	
	Private _OrdiniTestateDatiAggiuntivis As EntitySet(Of OrdiniTestateDatiAggiuntivi)
	
	Private _OrdiniRigheRichiestes As EntitySet(Of OrdiniRigheRichieste)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As System.Guid)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnDataInserimentoChanging(value As Date)
    End Sub
    Partial Private Sub OnDataInserimentoChanged()
    End Sub
    Partial Private Sub OnDataModificaChanging(value As Date)
    End Sub
    Partial Private Sub OnDataModificaChanged()
    End Sub
    Partial Private Sub OnIDTicketInserimentoChanging(value As System.Guid)
    End Sub
    Partial Private Sub OnIDTicketInserimentoChanged()
    End Sub
    Partial Private Sub OnIDTicketModificaChanging(value As System.Guid)
    End Sub
    Partial Private Sub OnIDTicketModificaChanged()
    End Sub
    Partial Private Sub OnTSChanging(value As System.Data.Linq.Binary)
    End Sub
    Partial Private Sub OnTSChanged()
    End Sub
    Partial Private Sub OnAnnoChanging(value As Integer)
    End Sub
    Partial Private Sub OnAnnoChanged()
    End Sub
    Partial Private Sub OnNumeroChanging(value As Integer)
    End Sub
    Partial Private Sub OnNumeroChanged()
    End Sub
    Partial Private Sub OnIDUnitaOperativaRichiedenteChanging(value As System.Guid)
    End Sub
    Partial Private Sub OnIDUnitaOperativaRichiedenteChanged()
    End Sub
    Partial Private Sub OnIDSistemaRichiedenteChanging(value As System.Guid)
    End Sub
    Partial Private Sub OnIDSistemaRichiedenteChanged()
    End Sub
    Partial Private Sub OnNumeroNosologicoChanging(value As String)
    End Sub
    Partial Private Sub OnNumeroNosologicoChanged()
    End Sub
    Partial Private Sub OnIDRichiestaRichiedenteChanging(value As String)
    End Sub
    Partial Private Sub OnIDRichiestaRichiedenteChanged()
    End Sub
    Partial Private Sub OnDataRichiestaChanging(value As Date)
    End Sub
    Partial Private Sub OnDataRichiestaChanged()
    End Sub
    Partial Private Sub OnStatoOrderEntryChanging(value As String)
    End Sub
    Partial Private Sub OnStatoOrderEntryChanged()
    End Sub
    Partial Private Sub OnSottoStatoOrderEntryChanging(value As String)
    End Sub
    Partial Private Sub OnSottoStatoOrderEntryChanged()
    End Sub
    Partial Private Sub OnStatoRispostaChanging(value As String)
    End Sub
    Partial Private Sub OnStatoRispostaChanged()
    End Sub
    Partial Private Sub OnDataModificaStatoChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDataModificaStatoChanged()
    End Sub
    Partial Private Sub OnStatoRichiedenteChanging(value As System.Xml.Linq.XElement)
    End Sub
    Partial Private Sub OnStatoRichiedenteChanged()
    End Sub
    Partial Private Sub OnDataChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDataChanged()
    End Sub
    Partial Private Sub OnOperatoreChanging(value As System.Xml.Linq.XElement)
    End Sub
    Partial Private Sub OnOperatoreChanged()
    End Sub
    Partial Private Sub OnPrioritaChanging(value As System.Xml.Linq.XElement)
    End Sub
    Partial Private Sub OnPrioritaChanged()
    End Sub
    Partial Private Sub OnTipoEpisodioChanging(value As System.Xml.Linq.XElement)
    End Sub
    Partial Private Sub OnTipoEpisodioChanged()
    End Sub
    Partial Private Sub OnAnagraficaCodiceChanging(value As String)
    End Sub
    Partial Private Sub OnAnagraficaCodiceChanged()
    End Sub
    Partial Private Sub OnAnagraficaNomeChanging(value As String)
    End Sub
    Partial Private Sub OnAnagraficaNomeChanged()
    End Sub
    Partial Private Sub OnPazienteIdRichiedenteChanging(value As String)
    End Sub
    Partial Private Sub OnPazienteIdRichiedenteChanged()
    End Sub
    Partial Private Sub OnPazienteIdSacChanging(value As System.Nullable(Of System.Guid))
    End Sub
    Partial Private Sub OnPazienteIdSacChanged()
    End Sub
    Partial Private Sub OnPazienteRegimeChanging(value As String)
    End Sub
    Partial Private Sub OnPazienteRegimeChanged()
    End Sub
    Partial Private Sub OnPazienteCognomeChanging(value As String)
    End Sub
    Partial Private Sub OnPazienteCognomeChanged()
    End Sub
    Partial Private Sub OnPazienteNomeChanging(value As String)
    End Sub
    Partial Private Sub OnPazienteNomeChanged()
    End Sub
    Partial Private Sub OnPazienteDataNascitaChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnPazienteDataNascitaChanged()
    End Sub
    Partial Private Sub OnPazienteSessoChanging(value As String)
    End Sub
    Partial Private Sub OnPazienteSessoChanged()
    End Sub
    Partial Private Sub OnPazienteCodiceFiscaleChanging(value As String)
    End Sub
    Partial Private Sub OnPazienteCodiceFiscaleChanged()
    End Sub
    Partial Private Sub OnPazienteChanging(value As System.Xml.Linq.XElement)
    End Sub
    Partial Private Sub OnPazienteChanged()
    End Sub
    Partial Private Sub OnConsensiChanging(value As System.Xml.Linq.XElement)
    End Sub
    Partial Private Sub OnConsensiChanged()
    End Sub
    Partial Private Sub OnNoteChanging(value As String)
    End Sub
    Partial Private Sub OnNoteChanged()
    End Sub
    Partial Private Sub OnDatiRollbackChanging(value As System.Xml.Linq.XElement)
    End Sub
    Partial Private Sub OnDatiRollbackChanged()
    End Sub
    Partial Private Sub OnRegimeChanging(value As System.Xml.Linq.XElement)
    End Sub
    Partial Private Sub OnRegimeChanged()
    End Sub
    Partial Private Sub OnDataPrenotazioneChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDataPrenotazioneChanged()
    End Sub
    Partial Private Sub OnStatoValidazioneChanging(value As String)
    End Sub
    Partial Private Sub OnStatoValidazioneChanged()
    End Sub
    Partial Private Sub OnValidazioneChanging(value As System.Xml.Linq.XElement)
    End Sub
    Partial Private Sub OnValidazioneChanged()
    End Sub
    Partial Private Sub OnStatoTransazioneChanging(value As String)
    End Sub
    Partial Private Sub OnStatoTransazioneChanged()
    End Sub
    Partial Private Sub OnDataTransazioneChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDataTransazioneChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._OrdiniTestateDatiAggiuntivis = New EntitySet(Of OrdiniTestateDatiAggiuntivi)(AddressOf Me.attach_OrdiniTestateDatiAggiuntivis, AddressOf Me.detach_OrdiniTestateDatiAggiuntivis)
		Me._OrdiniRigheRichiestes = New EntitySet(Of OrdiniRigheRichieste)(AddressOf Me.attach_OrdiniRigheRichiestes, AddressOf Me.detach_OrdiniRigheRichiestes)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", DbType:="UniqueIdentifier NOT NULL", IsPrimaryKey:=true, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property ID() As System.Guid
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DataInserimento", DbType:="DateTime2 NOT NULL", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property DataInserimento() As Date
		Get
			Return Me._DataInserimento
		End Get
		Set
			If ((Me._DataInserimento = value)  _
						= false) Then
				Me.OnDataInserimentoChanging(value)
				Me.SendPropertyChanging
				Me._DataInserimento = value
				Me.SendPropertyChanged("DataInserimento")
				Me.OnDataInserimentoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DataModifica", DbType:="DateTime2 NOT NULL", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property DataModifica() As Date
		Get
			Return Me._DataModifica
		End Get
		Set
			If ((Me._DataModifica = value)  _
						= false) Then
				Me.OnDataModificaChanging(value)
				Me.SendPropertyChanging
				Me._DataModifica = value
				Me.SendPropertyChanged("DataModifica")
				Me.OnDataModificaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDTicketInserimento", DbType:="UniqueIdentifier NOT NULL", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property IDTicketInserimento() As System.Guid
		Get
			Return Me._IDTicketInserimento
		End Get
		Set
			If ((Me._IDTicketInserimento = value)  _
						= false) Then
				Me.OnIDTicketInserimentoChanging(value)
				Me.SendPropertyChanging
				Me._IDTicketInserimento = value
				Me.SendPropertyChanged("IDTicketInserimento")
				Me.OnIDTicketInserimentoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDTicketModifica", DbType:="UniqueIdentifier NOT NULL", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property IDTicketModifica() As System.Guid
		Get
			Return Me._IDTicketModifica
		End Get
		Set
			If ((Me._IDTicketModifica = value)  _
						= false) Then
				Me.OnIDTicketModificaChanging(value)
				Me.SendPropertyChanging
				Me._IDTicketModifica = value
				Me.SendPropertyChanged("IDTicketModifica")
				Me.OnIDTicketModificaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TS", AutoSync:=AutoSync.Always, DbType:="rowversion NOT NULL", CanBeNull:=false, IsDbGenerated:=true, IsVersion:=true, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property TS() As System.Data.Linq.Binary
		Get
			Return Me._TS
		End Get
		Set
			If (Object.Equals(Me._TS, value) = false) Then
				Me.OnTSChanging(value)
				Me.SendPropertyChanging
				Me._TS = value
				Me.SendPropertyChanged("TS")
				Me.OnTSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Anno", DbType:="Int NOT NULL", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Anno() As Integer
		Get
			Return Me._Anno
		End Get
		Set
			If ((Me._Anno = value)  _
						= false) Then
				Me.OnAnnoChanging(value)
				Me.SendPropertyChanging
				Me._Anno = value
				Me.SendPropertyChanged("Anno")
				Me.OnAnnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Numero", DbType:="Int NOT NULL", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Numero() As Integer
		Get
			Return Me._Numero
		End Get
		Set
			If ((Me._Numero = value)  _
						= false) Then
				Me.OnNumeroChanging(value)
				Me.SendPropertyChanging
				Me._Numero = value
				Me.SendPropertyChanged("Numero")
				Me.OnNumeroChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDUnitaOperativaRichiedente", DbType:="UniqueIdentifier NOT NULL", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property IDUnitaOperativaRichiedente() As System.Guid
		Get
			Return Me._IDUnitaOperativaRichiedente
		End Get
		Set
			If ((Me._IDUnitaOperativaRichiedente = value)  _
						= false) Then
				Me.OnIDUnitaOperativaRichiedenteChanging(value)
				Me.SendPropertyChanging
				Me._IDUnitaOperativaRichiedente = value
				Me.SendPropertyChanged("IDUnitaOperativaRichiedente")
				Me.OnIDUnitaOperativaRichiedenteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDSistemaRichiedente", DbType:="UniqueIdentifier NOT NULL", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property IDSistemaRichiedente() As System.Guid
		Get
			Return Me._IDSistemaRichiedente
		End Get
		Set
			If ((Me._IDSistemaRichiedente = value)  _
						= false) Then
				Me.OnIDSistemaRichiedenteChanging(value)
				Me.SendPropertyChanging
				Me._IDSistemaRichiedente = value
				Me.SendPropertyChanged("IDSistemaRichiedente")
				Me.OnIDSistemaRichiedenteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NumeroNosologico", DbType:="VarChar(64)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property NumeroNosologico() As String
		Get
			Return Me._NumeroNosologico
		End Get
		Set
			If (String.Equals(Me._NumeroNosologico, value) = false) Then
				Me.OnNumeroNosologicoChanging(value)
				Me.SendPropertyChanging
				Me._NumeroNosologico = value
				Me.SendPropertyChanged("NumeroNosologico")
				Me.OnNumeroNosologicoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDRichiestaRichiedente", DbType:="VarChar(64) NOT NULL", CanBeNull:=false, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property IDRichiestaRichiedente() As String
		Get
			Return Me._IDRichiestaRichiedente
		End Get
		Set
			If (String.Equals(Me._IDRichiestaRichiedente, value) = false) Then
				Me.OnIDRichiestaRichiedenteChanging(value)
				Me.SendPropertyChanging
				Me._IDRichiestaRichiedente = value
				Me.SendPropertyChanged("IDRichiestaRichiedente")
				Me.OnIDRichiestaRichiedenteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DataRichiesta", DbType:="DateTime2 NOT NULL", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property DataRichiesta() As Date
		Get
			Return Me._DataRichiesta
		End Get
		Set
			If ((Me._DataRichiesta = value)  _
						= false) Then
				Me.OnDataRichiestaChanging(value)
				Me.SendPropertyChanging
				Me._DataRichiesta = value
				Me.SendPropertyChanged("DataRichiesta")
				Me.OnDataRichiestaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StatoOrderEntry", DbType:="VarChar(16) NOT NULL", CanBeNull:=false, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property StatoOrderEntry() As String
		Get
			Return Me._StatoOrderEntry
		End Get
		Set
			If (String.Equals(Me._StatoOrderEntry, value) = false) Then
				Me.OnStatoOrderEntryChanging(value)
				Me.SendPropertyChanging
				Me._StatoOrderEntry = value
				Me.SendPropertyChanged("StatoOrderEntry")
				Me.OnStatoOrderEntryChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SottoStatoOrderEntry", DbType:="VarChar(16)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property SottoStatoOrderEntry() As String
		Get
			Return Me._SottoStatoOrderEntry
		End Get
		Set
			If (String.Equals(Me._SottoStatoOrderEntry, value) = false) Then
				Me.OnSottoStatoOrderEntryChanging(value)
				Me.SendPropertyChanging
				Me._SottoStatoOrderEntry = value
				Me.SendPropertyChanged("SottoStatoOrderEntry")
				Me.OnSottoStatoOrderEntryChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StatoRisposta", DbType:="VarChar(16)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property StatoRisposta() As String
		Get
			Return Me._StatoRisposta
		End Get
		Set
			If (String.Equals(Me._StatoRisposta, value) = false) Then
				Me.OnStatoRispostaChanging(value)
				Me.SendPropertyChanging
				Me._StatoRisposta = value
				Me.SendPropertyChanged("StatoRisposta")
				Me.OnStatoRispostaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DataModificaStato", DbType:="DateTime2", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property DataModificaStato() As System.Nullable(Of Date)
		Get
			Return Me._DataModificaStato
		End Get
		Set
			If (Me._DataModificaStato.Equals(value) = false) Then
				Me.OnDataModificaStatoChanging(value)
				Me.SendPropertyChanging
				Me._DataModificaStato = value
				Me.SendPropertyChanged("DataModificaStato")
				Me.OnDataModificaStatoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StatoRichiedente", DbType:="Xml", CanBeNull:=true, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property StatoRichiedente() As System.Xml.Linq.XElement
		Get
			Return Me._StatoRichiedente
		End Get
		Set
			If (Object.Equals(Me._StatoRichiedente, value) = false) Then
				Me.OnStatoRichiedenteChanging(value)
				Me.SendPropertyChanging
				Me._StatoRichiedente = value
				Me.SendPropertyChanged("StatoRichiedente")
				Me.OnStatoRichiedenteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Data", DbType:="DateTime2", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Data() As System.Nullable(Of Date)
		Get
			Return Me._Data
		End Get
		Set
			If (Me._Data.Equals(value) = false) Then
				Me.OnDataChanging(value)
				Me.SendPropertyChanging
				Me._Data = value
				Me.SendPropertyChanged("Data")
				Me.OnDataChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Operatore", DbType:="Xml", CanBeNull:=true, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Operatore() As System.Xml.Linq.XElement
		Get
			Return Me._Operatore
		End Get
		Set
			If (Object.Equals(Me._Operatore, value) = false) Then
				Me.OnOperatoreChanging(value)
				Me.SendPropertyChanging
				Me._Operatore = value
				Me.SendPropertyChanged("Operatore")
				Me.OnOperatoreChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Priorita", DbType:="Xml", CanBeNull:=true, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Priorita() As System.Xml.Linq.XElement
		Get
			Return Me._Priorita
		End Get
		Set
			If (Object.Equals(Me._Priorita, value) = false) Then
				Me.OnPrioritaChanging(value)
				Me.SendPropertyChanging
				Me._Priorita = value
				Me.SendPropertyChanged("Priorita")
				Me.OnPrioritaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TipoEpisodio", DbType:="Xml", CanBeNull:=true, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property TipoEpisodio() As System.Xml.Linq.XElement
		Get
			Return Me._TipoEpisodio
		End Get
		Set
			If (Object.Equals(Me._TipoEpisodio, value) = false) Then
				Me.OnTipoEpisodioChanging(value)
				Me.SendPropertyChanging
				Me._TipoEpisodio = value
				Me.SendPropertyChanged("TipoEpisodio")
				Me.OnTipoEpisodioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AnagraficaCodice", DbType:="VarChar(64)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property AnagraficaCodice() As String
		Get
			Return Me._AnagraficaCodice
		End Get
		Set
			If (String.Equals(Me._AnagraficaCodice, value) = false) Then
				Me.OnAnagraficaCodiceChanging(value)
				Me.SendPropertyChanging
				Me._AnagraficaCodice = value
				Me.SendPropertyChanged("AnagraficaCodice")
				Me.OnAnagraficaCodiceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AnagraficaNome", DbType:="VarChar(16)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property AnagraficaNome() As String
		Get
			Return Me._AnagraficaNome
		End Get
		Set
			If (String.Equals(Me._AnagraficaNome, value) = false) Then
				Me.OnAnagraficaNomeChanging(value)
				Me.SendPropertyChanging
				Me._AnagraficaNome = value
				Me.SendPropertyChanged("AnagraficaNome")
				Me.OnAnagraficaNomeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PazienteIdRichiedente", DbType:="VarChar(64)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property PazienteIdRichiedente() As String
		Get
			Return Me._PazienteIdRichiedente
		End Get
		Set
			If (String.Equals(Me._PazienteIdRichiedente, value) = false) Then
				Me.OnPazienteIdRichiedenteChanging(value)
				Me.SendPropertyChanging
				Me._PazienteIdRichiedente = value
				Me.SendPropertyChanged("PazienteIdRichiedente")
				Me.OnPazienteIdRichiedenteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PazienteIdSac", DbType:="UniqueIdentifier", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property PazienteIdSac() As System.Nullable(Of System.Guid)
		Get
			Return Me._PazienteIdSac
		End Get
		Set
			If (Me._PazienteIdSac.Equals(value) = false) Then
				Me.OnPazienteIdSacChanging(value)
				Me.SendPropertyChanging
				Me._PazienteIdSac = value
				Me.SendPropertyChanged("PazienteIdSac")
				Me.OnPazienteIdSacChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PazienteRegime", DbType:="VarChar(16)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property PazienteRegime() As String
		Get
			Return Me._PazienteRegime
		End Get
		Set
			If (String.Equals(Me._PazienteRegime, value) = false) Then
				Me.OnPazienteRegimeChanging(value)
				Me.SendPropertyChanging
				Me._PazienteRegime = value
				Me.SendPropertyChanged("PazienteRegime")
				Me.OnPazienteRegimeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PazienteCognome", DbType:="VarChar(64)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property PazienteCognome() As String
		Get
			Return Me._PazienteCognome
		End Get
		Set
			If (String.Equals(Me._PazienteCognome, value) = false) Then
				Me.OnPazienteCognomeChanging(value)
				Me.SendPropertyChanging
				Me._PazienteCognome = value
				Me.SendPropertyChanged("PazienteCognome")
				Me.OnPazienteCognomeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PazienteNome", DbType:="VarChar(64)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property PazienteNome() As String
		Get
			Return Me._PazienteNome
		End Get
		Set
			If (String.Equals(Me._PazienteNome, value) = false) Then
				Me.OnPazienteNomeChanging(value)
				Me.SendPropertyChanging
				Me._PazienteNome = value
				Me.SendPropertyChanged("PazienteNome")
				Me.OnPazienteNomeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PazienteDataNascita", DbType:="Date", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property PazienteDataNascita() As System.Nullable(Of Date)
		Get
			Return Me._PazienteDataNascita
		End Get
		Set
			If (Me._PazienteDataNascita.Equals(value) = false) Then
				Me.OnPazienteDataNascitaChanging(value)
				Me.SendPropertyChanging
				Me._PazienteDataNascita = value
				Me.SendPropertyChanged("PazienteDataNascita")
				Me.OnPazienteDataNascitaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PazienteSesso", DbType:="VarChar(1)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property PazienteSesso() As String
		Get
			Return Me._PazienteSesso
		End Get
		Set
			If (String.Equals(Me._PazienteSesso, value) = false) Then
				Me.OnPazienteSessoChanging(value)
				Me.SendPropertyChanging
				Me._PazienteSesso = value
				Me.SendPropertyChanged("PazienteSesso")
				Me.OnPazienteSessoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PazienteCodiceFiscale", DbType:="VarChar(16)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property PazienteCodiceFiscale() As String
		Get
			Return Me._PazienteCodiceFiscale
		End Get
		Set
			If (String.Equals(Me._PazienteCodiceFiscale, value) = false) Then
				Me.OnPazienteCodiceFiscaleChanging(value)
				Me.SendPropertyChanging
				Me._PazienteCodiceFiscale = value
				Me.SendPropertyChanged("PazienteCodiceFiscale")
				Me.OnPazienteCodiceFiscaleChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Paziente", DbType:="Xml", CanBeNull:=true, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Paziente() As System.Xml.Linq.XElement
		Get
			Return Me._Paziente
		End Get
		Set
			If (Object.Equals(Me._Paziente, value) = false) Then
				Me.OnPazienteChanging(value)
				Me.SendPropertyChanging
				Me._Paziente = value
				Me.SendPropertyChanged("Paziente")
				Me.OnPazienteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Consensi", DbType:="Xml", CanBeNull:=true, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Consensi() As System.Xml.Linq.XElement
		Get
			Return Me._Consensi
		End Get
		Set
			If (Object.Equals(Me._Consensi, value) = false) Then
				Me.OnConsensiChanging(value)
				Me.SendPropertyChanging
				Me._Consensi = value
				Me.SendPropertyChanged("Consensi")
				Me.OnConsensiChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Note", DbType:="VarChar(MAX)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Note() As String
		Get
			Return Me._Note
		End Get
		Set
			If (String.Equals(Me._Note, value) = false) Then
				Me.OnNoteChanging(value)
				Me.SendPropertyChanging
				Me._Note = value
				Me.SendPropertyChanged("Note")
				Me.OnNoteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DatiRollback", DbType:="Xml", CanBeNull:=true, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property DatiRollback() As System.Xml.Linq.XElement
		Get
			Return Me._DatiRollback
		End Get
		Set
			If (Object.Equals(Me._DatiRollback, value) = false) Then
				Me.OnDatiRollbackChanging(value)
				Me.SendPropertyChanging
				Me._DatiRollback = value
				Me.SendPropertyChanged("DatiRollback")
				Me.OnDatiRollbackChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Regime", DbType:="Xml", CanBeNull:=true, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Regime() As System.Xml.Linq.XElement
		Get
			Return Me._Regime
		End Get
		Set
			If (Object.Equals(Me._Regime, value) = false) Then
				Me.OnRegimeChanging(value)
				Me.SendPropertyChanging
				Me._Regime = value
				Me.SendPropertyChanged("Regime")
				Me.OnRegimeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DataPrenotazione", DbType:="DateTime2", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property DataPrenotazione() As System.Nullable(Of Date)
		Get
			Return Me._DataPrenotazione
		End Get
		Set
			If (Me._DataPrenotazione.Equals(value) = false) Then
				Me.OnDataPrenotazioneChanging(value)
				Me.SendPropertyChanging
				Me._DataPrenotazione = value
				Me.SendPropertyChanged("DataPrenotazione")
				Me.OnDataPrenotazioneChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StatoValidazione", DbType:="VarChar(16)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property StatoValidazione() As String
		Get
			Return Me._StatoValidazione
		End Get
		Set
			If (String.Equals(Me._StatoValidazione, value) = false) Then
				Me.OnStatoValidazioneChanging(value)
				Me.SendPropertyChanging
				Me._StatoValidazione = value
				Me.SendPropertyChanged("StatoValidazione")
				Me.OnStatoValidazioneChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Validazione", DbType:="Xml", CanBeNull:=true, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Validazione() As System.Xml.Linq.XElement
		Get
			Return Me._Validazione
		End Get
		Set
			If (Object.Equals(Me._Validazione, value) = false) Then
				Me.OnValidazioneChanging(value)
				Me.SendPropertyChanging
				Me._Validazione = value
				Me.SendPropertyChanged("Validazione")
				Me.OnValidazioneChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StatoTransazione", DbType:="VarChar(16)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property StatoTransazione() As String
		Get
			Return Me._StatoTransazione
		End Get
		Set
			If (String.Equals(Me._StatoTransazione, value) = false) Then
				Me.OnStatoTransazioneChanging(value)
				Me.SendPropertyChanging
				Me._StatoTransazione = value
				Me.SendPropertyChanged("StatoTransazione")
				Me.OnStatoTransazioneChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DataTransazione", DbType:="DateTime2", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property DataTransazione() As System.Nullable(Of Date)
		Get
			Return Me._DataTransazione
		End Get
		Set
			If (Me._DataTransazione.Equals(value) = false) Then
				Me.OnDataTransazioneChanging(value)
				Me.SendPropertyChanging
				Me._DataTransazione = value
				Me.SendPropertyChanged("DataTransazione")
				Me.OnDataTransazioneChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="OrdiniTestate_OrdiniTestateDatiAggiuntivi", Storage:="_OrdiniTestateDatiAggiuntivis", ThisKey:="ID", OtherKey:="IDOrdineTestata")>  _
	Public Property OrdiniTestateDatiAggiuntivis() As EntitySet(Of OrdiniTestateDatiAggiuntivi)
		Get
			Return Me._OrdiniTestateDatiAggiuntivis
		End Get
		Set
			Me._OrdiniTestateDatiAggiuntivis.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="OrdiniTestate_OrdiniRigheRichieste", Storage:="_OrdiniRigheRichiestes", ThisKey:="ID", OtherKey:="IDOrdineTestata")>  _
	Public Property OrdiniRigheRichiestes() As EntitySet(Of OrdiniRigheRichieste)
		Get
			Return Me._OrdiniRigheRichiestes
		End Get
		Set
			Me._OrdiniRigheRichiestes.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_OrdiniTestateDatiAggiuntivis(ByVal entity As OrdiniTestateDatiAggiuntivi)
		Me.SendPropertyChanging
		entity.OrdiniTestate = Me
	End Sub
	
	Private Sub detach_OrdiniTestateDatiAggiuntivis(ByVal entity As OrdiniTestateDatiAggiuntivi)
		Me.SendPropertyChanging
		entity.OrdiniTestate = Nothing
	End Sub
	
	Private Sub attach_OrdiniRigheRichiestes(ByVal entity As OrdiniRigheRichieste)
		Me.SendPropertyChanging
		entity.OrdiniTestate = Me
	End Sub
	
	Private Sub detach_OrdiniRigheRichiestes(ByVal entity As OrdiniRigheRichieste)
		Me.SendPropertyChanging
		entity.OrdiniTestate = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.OrdiniTestateDatiAggiuntivi")>  _
Partial Public Class OrdiniTestateDatiAggiuntivi
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As System.Guid
	
	Private _DataInserimento As Date
	
	Private _DataModifica As Date
	
	Private _IDTicketInserimento As System.Guid
	
	Private _IDTicketModifica As System.Guid
	
	Private _TS As System.Data.Linq.Binary
	
	Private _IDOrdineTestata As System.Guid
	
	Private _IDDatoAggiuntivo As String
	
	Private _Nome As String
	
	Private _TipoDato As String
	
	Private _TipoContenuto As String
	
	Private _ValoreDato As Object
	
	Private _ValoreDatoVarchar As String
	
	Private _ValoreDatoXml As System.Xml.Linq.XElement
	
	Private _ParametroSpecifico As System.Nullable(Of Boolean)
	
	Private _Persistente As System.Nullable(Of Boolean)
	
	Private _OrdiniTestate As EntityRef(Of OrdiniTestate)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As System.Guid)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnDataInserimentoChanging(value As Date)
    End Sub
    Partial Private Sub OnDataInserimentoChanged()
    End Sub
    Partial Private Sub OnDataModificaChanging(value As Date)
    End Sub
    Partial Private Sub OnDataModificaChanged()
    End Sub
    Partial Private Sub OnIDTicketInserimentoChanging(value As System.Guid)
    End Sub
    Partial Private Sub OnIDTicketInserimentoChanged()
    End Sub
    Partial Private Sub OnIDTicketModificaChanging(value As System.Guid)
    End Sub
    Partial Private Sub OnIDTicketModificaChanged()
    End Sub
    Partial Private Sub OnTSChanging(value As System.Data.Linq.Binary)
    End Sub
    Partial Private Sub OnTSChanged()
    End Sub
    Partial Private Sub OnIDOrdineTestataChanging(value As System.Guid)
    End Sub
    Partial Private Sub OnIDOrdineTestataChanged()
    End Sub
    Partial Private Sub OnIDDatoAggiuntivoChanging(value As String)
    End Sub
    Partial Private Sub OnIDDatoAggiuntivoChanged()
    End Sub
    Partial Private Sub OnNomeChanging(value As String)
    End Sub
    Partial Private Sub OnNomeChanged()
    End Sub
    Partial Private Sub OnTipoDatoChanging(value As String)
    End Sub
    Partial Private Sub OnTipoDatoChanged()
    End Sub
    Partial Private Sub OnTipoContenutoChanging(value As String)
    End Sub
    Partial Private Sub OnTipoContenutoChanged()
    End Sub
    Partial Private Sub OnValoreDatoChanging(value As Object)
    End Sub
    Partial Private Sub OnValoreDatoChanged()
    End Sub
    Partial Private Sub OnValoreDatoVarcharChanging(value As String)
    End Sub
    Partial Private Sub OnValoreDatoVarcharChanged()
    End Sub
    Partial Private Sub OnValoreDatoXmlChanging(value As System.Xml.Linq.XElement)
    End Sub
    Partial Private Sub OnValoreDatoXmlChanged()
    End Sub
    Partial Private Sub OnParametroSpecificoChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnParametroSpecificoChanged()
    End Sub
    Partial Private Sub OnPersistenteChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnPersistenteChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._OrdiniTestate = CType(Nothing, EntityRef(Of OrdiniTestate))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", DbType:="UniqueIdentifier NOT NULL", IsPrimaryKey:=true, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property ID() As System.Guid
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DataInserimento", DbType:="DateTime2 NOT NULL", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property DataInserimento() As Date
		Get
			Return Me._DataInserimento
		End Get
		Set
			If ((Me._DataInserimento = value)  _
						= false) Then
				Me.OnDataInserimentoChanging(value)
				Me.SendPropertyChanging
				Me._DataInserimento = value
				Me.SendPropertyChanged("DataInserimento")
				Me.OnDataInserimentoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DataModifica", DbType:="DateTime2 NOT NULL", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property DataModifica() As Date
		Get
			Return Me._DataModifica
		End Get
		Set
			If ((Me._DataModifica = value)  _
						= false) Then
				Me.OnDataModificaChanging(value)
				Me.SendPropertyChanging
				Me._DataModifica = value
				Me.SendPropertyChanged("DataModifica")
				Me.OnDataModificaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDTicketInserimento", DbType:="UniqueIdentifier NOT NULL", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property IDTicketInserimento() As System.Guid
		Get
			Return Me._IDTicketInserimento
		End Get
		Set
			If ((Me._IDTicketInserimento = value)  _
						= false) Then
				Me.OnIDTicketInserimentoChanging(value)
				Me.SendPropertyChanging
				Me._IDTicketInserimento = value
				Me.SendPropertyChanged("IDTicketInserimento")
				Me.OnIDTicketInserimentoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDTicketModifica", DbType:="UniqueIdentifier NOT NULL", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property IDTicketModifica() As System.Guid
		Get
			Return Me._IDTicketModifica
		End Get
		Set
			If ((Me._IDTicketModifica = value)  _
						= false) Then
				Me.OnIDTicketModificaChanging(value)
				Me.SendPropertyChanging
				Me._IDTicketModifica = value
				Me.SendPropertyChanged("IDTicketModifica")
				Me.OnIDTicketModificaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TS", AutoSync:=AutoSync.Always, DbType:="rowversion NOT NULL", CanBeNull:=false, IsDbGenerated:=true, IsVersion:=true, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property TS() As System.Data.Linq.Binary
		Get
			Return Me._TS
		End Get
		Set
			If (Object.Equals(Me._TS, value) = false) Then
				Me.OnTSChanging(value)
				Me.SendPropertyChanging
				Me._TS = value
				Me.SendPropertyChanged("TS")
				Me.OnTSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDOrdineTestata", DbType:="UniqueIdentifier NOT NULL", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property IDOrdineTestata() As System.Guid
		Get
			Return Me._IDOrdineTestata
		End Get
		Set
			If ((Me._IDOrdineTestata = value)  _
						= false) Then
				If Me._OrdiniTestate.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnIDOrdineTestataChanging(value)
				Me.SendPropertyChanging
				Me._IDOrdineTestata = value
				Me.SendPropertyChanged("IDOrdineTestata")
				Me.OnIDOrdineTestataChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDDatoAggiuntivo", DbType:="VarChar(64)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property IDDatoAggiuntivo() As String
		Get
			Return Me._IDDatoAggiuntivo
		End Get
		Set
			If (String.Equals(Me._IDDatoAggiuntivo, value) = false) Then
				Me.OnIDDatoAggiuntivoChanging(value)
				Me.SendPropertyChanging
				Me._IDDatoAggiuntivo = value
				Me.SendPropertyChanged("IDDatoAggiuntivo")
				Me.OnIDDatoAggiuntivoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Nome", DbType:="VarChar(128) NOT NULL", CanBeNull:=false, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Nome() As String
		Get
			Return Me._Nome
		End Get
		Set
			If (String.Equals(Me._Nome, value) = false) Then
				Me.OnNomeChanging(value)
				Me.SendPropertyChanging
				Me._Nome = value
				Me.SendPropertyChanged("Nome")
				Me.OnNomeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TipoDato", DbType:="VarChar(32) NOT NULL", CanBeNull:=false, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property TipoDato() As String
		Get
			Return Me._TipoDato
		End Get
		Set
			If (String.Equals(Me._TipoDato, value) = false) Then
				Me.OnTipoDatoChanging(value)
				Me.SendPropertyChanging
				Me._TipoDato = value
				Me.SendPropertyChanged("TipoDato")
				Me.OnTipoDatoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TipoContenuto", DbType:="VarChar(32)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property TipoContenuto() As String
		Get
			Return Me._TipoContenuto
		End Get
		Set
			If (String.Equals(Me._TipoContenuto, value) = false) Then
				Me.OnTipoContenutoChanging(value)
				Me.SendPropertyChanging
				Me._TipoContenuto = value
				Me.SendPropertyChanged("TipoContenuto")
				Me.OnTipoContenutoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ValoreDato", DbType:="Variant", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property ValoreDato() As Object
		Get
			Return Me._ValoreDato
		End Get
		Set
			If (Object.Equals(Me._ValoreDato, value) = false) Then
				Me.OnValoreDatoChanging(value)
				Me.SendPropertyChanging
				Me._ValoreDato = value
				Me.SendPropertyChanged("ValoreDato")
				Me.OnValoreDatoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ValoreDatoVarchar", DbType:="VarChar(MAX)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property ValoreDatoVarchar() As String
		Get
			Return Me._ValoreDatoVarchar
		End Get
		Set
			If (String.Equals(Me._ValoreDatoVarchar, value) = false) Then
				Me.OnValoreDatoVarcharChanging(value)
				Me.SendPropertyChanging
				Me._ValoreDatoVarchar = value
				Me.SendPropertyChanged("ValoreDatoVarchar")
				Me.OnValoreDatoVarcharChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ValoreDatoXml", DbType:="Xml", CanBeNull:=true, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property ValoreDatoXml() As System.Xml.Linq.XElement
		Get
			Return Me._ValoreDatoXml
		End Get
		Set
			If (Object.Equals(Me._ValoreDatoXml, value) = false) Then
				Me.OnValoreDatoXmlChanging(value)
				Me.SendPropertyChanging
				Me._ValoreDatoXml = value
				Me.SendPropertyChanged("ValoreDatoXml")
				Me.OnValoreDatoXmlChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ParametroSpecifico", DbType:="Bit", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property ParametroSpecifico() As System.Nullable(Of Boolean)
		Get
			Return Me._ParametroSpecifico
		End Get
		Set
			If (Me._ParametroSpecifico.Equals(value) = false) Then
				Me.OnParametroSpecificoChanging(value)
				Me.SendPropertyChanging
				Me._ParametroSpecifico = value
				Me.SendPropertyChanged("ParametroSpecifico")
				Me.OnParametroSpecificoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Persistente", DbType:="Bit", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Persistente() As System.Nullable(Of Boolean)
		Get
			Return Me._Persistente
		End Get
		Set
			If (Me._Persistente.Equals(value) = false) Then
				Me.OnPersistenteChanging(value)
				Me.SendPropertyChanging
				Me._Persistente = value
				Me.SendPropertyChanged("Persistente")
				Me.OnPersistenteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="OrdiniTestate_OrdiniTestateDatiAggiuntivi", Storage:="_OrdiniTestate", ThisKey:="IDOrdineTestata", OtherKey:="ID", IsForeignKey:=true)>  _
	Public Property OrdiniTestate() As OrdiniTestate
		Get
			Return Me._OrdiniTestate.Entity
		End Get
		Set
			Dim previousValue As OrdiniTestate = Me._OrdiniTestate.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._OrdiniTestate.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._OrdiniTestate.Entity = Nothing
					previousValue.OrdiniTestateDatiAggiuntivis.Remove(Me)
				End If
				Me._OrdiniTestate.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.OrdiniTestateDatiAggiuntivis.Add(Me)
					Me._IDOrdineTestata = value.ID
				Else
					Me._IDOrdineTestata = CType(Nothing, System.Guid)
				End If
				Me.SendPropertyChanged("OrdiniTestate")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.OrdiniRigheRichieste")>  _
Partial Public Class OrdiniRigheRichieste
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As System.Guid
	
	Private _DataInserimento As Date
	
	Private _DataModifica As Date
	
	Private _IDTicketInserimento As System.Guid
	
	Private _IDTicketModifica As System.Guid
	
	Private _TS As System.Data.Linq.Binary
	
	Private _IDOrdineTestata As System.Guid
	
	Private _StatoOrderEntry As String
	
	Private _DataModificaStato As System.Nullable(Of Date)
	
	Private _IDPrestazione As System.Guid
	
	Private _IDSistemaErogante As System.Guid
	
	Private _IDRigaOrderEntry As String
	
	Private _IDRigaRichiedente As String
	
	Private _IDRigaErogante As String
	
	Private _IDRichiestaErogante As String
	
	Private _StatoRichiedente As System.Xml.Linq.XElement
	
	Private _Consensi As System.Xml.Linq.XElement
	
	Private _OrdiniRigheRichiesteDatiAggiuntivis As EntitySet(Of OrdiniRigheRichiesteDatiAggiuntivi)
	
	Private _OrdiniTestate As EntityRef(Of OrdiniTestate)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As System.Guid)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnDataInserimentoChanging(value As Date)
    End Sub
    Partial Private Sub OnDataInserimentoChanged()
    End Sub
    Partial Private Sub OnDataModificaChanging(value As Date)
    End Sub
    Partial Private Sub OnDataModificaChanged()
    End Sub
    Partial Private Sub OnIDTicketInserimentoChanging(value As System.Guid)
    End Sub
    Partial Private Sub OnIDTicketInserimentoChanged()
    End Sub
    Partial Private Sub OnIDTicketModificaChanging(value As System.Guid)
    End Sub
    Partial Private Sub OnIDTicketModificaChanged()
    End Sub
    Partial Private Sub OnTSChanging(value As System.Data.Linq.Binary)
    End Sub
    Partial Private Sub OnTSChanged()
    End Sub
    Partial Private Sub OnIDOrdineTestataChanging(value As System.Guid)
    End Sub
    Partial Private Sub OnIDOrdineTestataChanged()
    End Sub
    Partial Private Sub OnStatoOrderEntryChanging(value As String)
    End Sub
    Partial Private Sub OnStatoOrderEntryChanged()
    End Sub
    Partial Private Sub OnDataModificaStatoChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDataModificaStatoChanged()
    End Sub
    Partial Private Sub OnIDPrestazioneChanging(value As System.Guid)
    End Sub
    Partial Private Sub OnIDPrestazioneChanged()
    End Sub
    Partial Private Sub OnIDSistemaEroganteChanging(value As System.Guid)
    End Sub
    Partial Private Sub OnIDSistemaEroganteChanged()
    End Sub
    Partial Private Sub OnIDRigaOrderEntryChanging(value As String)
    End Sub
    Partial Private Sub OnIDRigaOrderEntryChanged()
    End Sub
    Partial Private Sub OnIDRigaRichiedenteChanging(value As String)
    End Sub
    Partial Private Sub OnIDRigaRichiedenteChanged()
    End Sub
    Partial Private Sub OnIDRigaEroganteChanging(value As String)
    End Sub
    Partial Private Sub OnIDRigaEroganteChanged()
    End Sub
    Partial Private Sub OnIDRichiestaEroganteChanging(value As String)
    End Sub
    Partial Private Sub OnIDRichiestaEroganteChanged()
    End Sub
    Partial Private Sub OnStatoRichiedenteChanging(value As System.Xml.Linq.XElement)
    End Sub
    Partial Private Sub OnStatoRichiedenteChanged()
    End Sub
    Partial Private Sub OnConsensiChanging(value As System.Xml.Linq.XElement)
    End Sub
    Partial Private Sub OnConsensiChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._OrdiniRigheRichiesteDatiAggiuntivis = New EntitySet(Of OrdiniRigheRichiesteDatiAggiuntivi)(AddressOf Me.attach_OrdiniRigheRichiesteDatiAggiuntivis, AddressOf Me.detach_OrdiniRigheRichiesteDatiAggiuntivis)
		Me._OrdiniTestate = CType(Nothing, EntityRef(Of OrdiniTestate))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", DbType:="UniqueIdentifier NOT NULL", IsPrimaryKey:=true, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property ID() As System.Guid
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DataInserimento", DbType:="DateTime2 NOT NULL", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property DataInserimento() As Date
		Get
			Return Me._DataInserimento
		End Get
		Set
			If ((Me._DataInserimento = value)  _
						= false) Then
				Me.OnDataInserimentoChanging(value)
				Me.SendPropertyChanging
				Me._DataInserimento = value
				Me.SendPropertyChanged("DataInserimento")
				Me.OnDataInserimentoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DataModifica", DbType:="DateTime2 NOT NULL", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property DataModifica() As Date
		Get
			Return Me._DataModifica
		End Get
		Set
			If ((Me._DataModifica = value)  _
						= false) Then
				Me.OnDataModificaChanging(value)
				Me.SendPropertyChanging
				Me._DataModifica = value
				Me.SendPropertyChanged("DataModifica")
				Me.OnDataModificaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDTicketInserimento", DbType:="UniqueIdentifier NOT NULL", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property IDTicketInserimento() As System.Guid
		Get
			Return Me._IDTicketInserimento
		End Get
		Set
			If ((Me._IDTicketInserimento = value)  _
						= false) Then
				Me.OnIDTicketInserimentoChanging(value)
				Me.SendPropertyChanging
				Me._IDTicketInserimento = value
				Me.SendPropertyChanged("IDTicketInserimento")
				Me.OnIDTicketInserimentoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDTicketModifica", DbType:="UniqueIdentifier NOT NULL", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property IDTicketModifica() As System.Guid
		Get
			Return Me._IDTicketModifica
		End Get
		Set
			If ((Me._IDTicketModifica = value)  _
						= false) Then
				Me.OnIDTicketModificaChanging(value)
				Me.SendPropertyChanging
				Me._IDTicketModifica = value
				Me.SendPropertyChanged("IDTicketModifica")
				Me.OnIDTicketModificaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TS", AutoSync:=AutoSync.Always, DbType:="rowversion NOT NULL", CanBeNull:=false, IsDbGenerated:=true, IsVersion:=true, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property TS() As System.Data.Linq.Binary
		Get
			Return Me._TS
		End Get
		Set
			If (Object.Equals(Me._TS, value) = false) Then
				Me.OnTSChanging(value)
				Me.SendPropertyChanging
				Me._TS = value
				Me.SendPropertyChanged("TS")
				Me.OnTSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDOrdineTestata", DbType:="UniqueIdentifier NOT NULL", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property IDOrdineTestata() As System.Guid
		Get
			Return Me._IDOrdineTestata
		End Get
		Set
			If ((Me._IDOrdineTestata = value)  _
						= false) Then
				If Me._OrdiniTestate.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnIDOrdineTestataChanging(value)
				Me.SendPropertyChanging
				Me._IDOrdineTestata = value
				Me.SendPropertyChanged("IDOrdineTestata")
				Me.OnIDOrdineTestataChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StatoOrderEntry", DbType:="VarChar(16)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property StatoOrderEntry() As String
		Get
			Return Me._StatoOrderEntry
		End Get
		Set
			If (String.Equals(Me._StatoOrderEntry, value) = false) Then
				Me.OnStatoOrderEntryChanging(value)
				Me.SendPropertyChanging
				Me._StatoOrderEntry = value
				Me.SendPropertyChanged("StatoOrderEntry")
				Me.OnStatoOrderEntryChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DataModificaStato", DbType:="DateTime2", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property DataModificaStato() As System.Nullable(Of Date)
		Get
			Return Me._DataModificaStato
		End Get
		Set
			If (Me._DataModificaStato.Equals(value) = false) Then
				Me.OnDataModificaStatoChanging(value)
				Me.SendPropertyChanging
				Me._DataModificaStato = value
				Me.SendPropertyChanged("DataModificaStato")
				Me.OnDataModificaStatoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDPrestazione", DbType:="UniqueIdentifier NOT NULL", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property IDPrestazione() As System.Guid
		Get
			Return Me._IDPrestazione
		End Get
		Set
			If ((Me._IDPrestazione = value)  _
						= false) Then
				Me.OnIDPrestazioneChanging(value)
				Me.SendPropertyChanging
				Me._IDPrestazione = value
				Me.SendPropertyChanged("IDPrestazione")
				Me.OnIDPrestazioneChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDSistemaErogante", DbType:="UniqueIdentifier NOT NULL", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property IDSistemaErogante() As System.Guid
		Get
			Return Me._IDSistemaErogante
		End Get
		Set
			If ((Me._IDSistemaErogante = value)  _
						= false) Then
				Me.OnIDSistemaEroganteChanging(value)
				Me.SendPropertyChanging
				Me._IDSistemaErogante = value
				Me.SendPropertyChanged("IDSistemaErogante")
				Me.OnIDSistemaEroganteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDRigaOrderEntry", DbType:="VarChar(64)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property IDRigaOrderEntry() As String
		Get
			Return Me._IDRigaOrderEntry
		End Get
		Set
			If (String.Equals(Me._IDRigaOrderEntry, value) = false) Then
				Me.OnIDRigaOrderEntryChanging(value)
				Me.SendPropertyChanging
				Me._IDRigaOrderEntry = value
				Me.SendPropertyChanged("IDRigaOrderEntry")
				Me.OnIDRigaOrderEntryChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDRigaRichiedente", DbType:="VarChar(64)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property IDRigaRichiedente() As String
		Get
			Return Me._IDRigaRichiedente
		End Get
		Set
			If (String.Equals(Me._IDRigaRichiedente, value) = false) Then
				Me.OnIDRigaRichiedenteChanging(value)
				Me.SendPropertyChanging
				Me._IDRigaRichiedente = value
				Me.SendPropertyChanged("IDRigaRichiedente")
				Me.OnIDRigaRichiedenteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDRigaErogante", DbType:="VarChar(64)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property IDRigaErogante() As String
		Get
			Return Me._IDRigaErogante
		End Get
		Set
			If (String.Equals(Me._IDRigaErogante, value) = false) Then
				Me.OnIDRigaEroganteChanging(value)
				Me.SendPropertyChanging
				Me._IDRigaErogante = value
				Me.SendPropertyChanged("IDRigaErogante")
				Me.OnIDRigaEroganteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDRichiestaErogante", DbType:="VarChar(64)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property IDRichiestaErogante() As String
		Get
			Return Me._IDRichiestaErogante
		End Get
		Set
			If (String.Equals(Me._IDRichiestaErogante, value) = false) Then
				Me.OnIDRichiestaEroganteChanging(value)
				Me.SendPropertyChanging
				Me._IDRichiestaErogante = value
				Me.SendPropertyChanged("IDRichiestaErogante")
				Me.OnIDRichiestaEroganteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StatoRichiedente", DbType:="Xml", CanBeNull:=true, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property StatoRichiedente() As System.Xml.Linq.XElement
		Get
			Return Me._StatoRichiedente
		End Get
		Set
			If (Object.Equals(Me._StatoRichiedente, value) = false) Then
				Me.OnStatoRichiedenteChanging(value)
				Me.SendPropertyChanging
				Me._StatoRichiedente = value
				Me.SendPropertyChanged("StatoRichiedente")
				Me.OnStatoRichiedenteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Consensi", DbType:="Xml", CanBeNull:=true, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Consensi() As System.Xml.Linq.XElement
		Get
			Return Me._Consensi
		End Get
		Set
			If (Object.Equals(Me._Consensi, value) = false) Then
				Me.OnConsensiChanging(value)
				Me.SendPropertyChanging
				Me._Consensi = value
				Me.SendPropertyChanged("Consensi")
				Me.OnConsensiChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="OrdiniRigheRichieste_OrdiniRigheRichiesteDatiAggiuntivi", Storage:="_OrdiniRigheRichiesteDatiAggiuntivis", ThisKey:="ID", OtherKey:="IDRigaRichiesta")>  _
	Public Property OrdiniRigheRichiesteDatiAggiuntivis() As EntitySet(Of OrdiniRigheRichiesteDatiAggiuntivi)
		Get
			Return Me._OrdiniRigheRichiesteDatiAggiuntivis
		End Get
		Set
			Me._OrdiniRigheRichiesteDatiAggiuntivis.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="OrdiniTestate_OrdiniRigheRichieste", Storage:="_OrdiniTestate", ThisKey:="IDOrdineTestata", OtherKey:="ID", IsForeignKey:=true)>  _
	Public Property OrdiniTestate() As OrdiniTestate
		Get
			Return Me._OrdiniTestate.Entity
		End Get
		Set
			Dim previousValue As OrdiniTestate = Me._OrdiniTestate.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._OrdiniTestate.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._OrdiniTestate.Entity = Nothing
					previousValue.OrdiniRigheRichiestes.Remove(Me)
				End If
				Me._OrdiniTestate.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.OrdiniRigheRichiestes.Add(Me)
					Me._IDOrdineTestata = value.ID
				Else
					Me._IDOrdineTestata = CType(Nothing, System.Guid)
				End If
				Me.SendPropertyChanged("OrdiniTestate")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_OrdiniRigheRichiesteDatiAggiuntivis(ByVal entity As OrdiniRigheRichiesteDatiAggiuntivi)
		Me.SendPropertyChanging
		entity.OrdiniRigheRichieste = Me
	End Sub
	
	Private Sub detach_OrdiniRigheRichiesteDatiAggiuntivis(ByVal entity As OrdiniRigheRichiesteDatiAggiuntivi)
		Me.SendPropertyChanging
		entity.OrdiniRigheRichieste = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.OrdiniRigheRichiesteDatiAggiuntivi")>  _
Partial Public Class OrdiniRigheRichiesteDatiAggiuntivi
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As System.Guid
	
	Private _DataInserimento As Date
	
	Private _DataModifica As Date
	
	Private _IDTicketInserimento As System.Guid
	
	Private _IDTicketModifica As System.Guid
	
	Private _TS As System.Data.Linq.Binary
	
	Private _IDRigaRichiesta As System.Guid
	
	Private _IDDatoAggiuntivo As String
	
	Private _Nome As String
	
	Private _TipoDato As String
	
	Private _TipoContenuto As String
	
	Private _ValoreDato As Object
	
	Private _ValoreDatoVarchar As String
	
	Private _ValoreDatoXml As System.Xml.Linq.XElement
	
	Private _ParametroSpecifico As System.Nullable(Of Boolean)
	
	Private _Persistente As System.Nullable(Of Boolean)
	
	Private _OrdiniRigheRichieste As EntityRef(Of OrdiniRigheRichieste)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As System.Guid)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnDataInserimentoChanging(value As Date)
    End Sub
    Partial Private Sub OnDataInserimentoChanged()
    End Sub
    Partial Private Sub OnDataModificaChanging(value As Date)
    End Sub
    Partial Private Sub OnDataModificaChanged()
    End Sub
    Partial Private Sub OnIDTicketInserimentoChanging(value As System.Guid)
    End Sub
    Partial Private Sub OnIDTicketInserimentoChanged()
    End Sub
    Partial Private Sub OnIDTicketModificaChanging(value As System.Guid)
    End Sub
    Partial Private Sub OnIDTicketModificaChanged()
    End Sub
    Partial Private Sub OnTSChanging(value As System.Data.Linq.Binary)
    End Sub
    Partial Private Sub OnTSChanged()
    End Sub
    Partial Private Sub OnIDRigaRichiestaChanging(value As System.Guid)
    End Sub
    Partial Private Sub OnIDRigaRichiestaChanged()
    End Sub
    Partial Private Sub OnIDDatoAggiuntivoChanging(value As String)
    End Sub
    Partial Private Sub OnIDDatoAggiuntivoChanged()
    End Sub
    Partial Private Sub OnNomeChanging(value As String)
    End Sub
    Partial Private Sub OnNomeChanged()
    End Sub
    Partial Private Sub OnTipoDatoChanging(value As String)
    End Sub
    Partial Private Sub OnTipoDatoChanged()
    End Sub
    Partial Private Sub OnTipoContenutoChanging(value As String)
    End Sub
    Partial Private Sub OnTipoContenutoChanged()
    End Sub
    Partial Private Sub OnValoreDatoChanging(value As Object)
    End Sub
    Partial Private Sub OnValoreDatoChanged()
    End Sub
    Partial Private Sub OnValoreDatoVarcharChanging(value As String)
    End Sub
    Partial Private Sub OnValoreDatoVarcharChanged()
    End Sub
    Partial Private Sub OnValoreDatoXmlChanging(value As System.Xml.Linq.XElement)
    End Sub
    Partial Private Sub OnValoreDatoXmlChanged()
    End Sub
    Partial Private Sub OnParametroSpecificoChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnParametroSpecificoChanged()
    End Sub
    Partial Private Sub OnPersistenteChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnPersistenteChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._OrdiniRigheRichieste = CType(Nothing, EntityRef(Of OrdiniRigheRichieste))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", DbType:="UniqueIdentifier NOT NULL", IsPrimaryKey:=true, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property ID() As System.Guid
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DataInserimento", DbType:="DateTime2 NOT NULL", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property DataInserimento() As Date
		Get
			Return Me._DataInserimento
		End Get
		Set
			If ((Me._DataInserimento = value)  _
						= false) Then
				Me.OnDataInserimentoChanging(value)
				Me.SendPropertyChanging
				Me._DataInserimento = value
				Me.SendPropertyChanged("DataInserimento")
				Me.OnDataInserimentoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DataModifica", DbType:="DateTime2 NOT NULL", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property DataModifica() As Date
		Get
			Return Me._DataModifica
		End Get
		Set
			If ((Me._DataModifica = value)  _
						= false) Then
				Me.OnDataModificaChanging(value)
				Me.SendPropertyChanging
				Me._DataModifica = value
				Me.SendPropertyChanged("DataModifica")
				Me.OnDataModificaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDTicketInserimento", DbType:="UniqueIdentifier NOT NULL", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property IDTicketInserimento() As System.Guid
		Get
			Return Me._IDTicketInserimento
		End Get
		Set
			If ((Me._IDTicketInserimento = value)  _
						= false) Then
				Me.OnIDTicketInserimentoChanging(value)
				Me.SendPropertyChanging
				Me._IDTicketInserimento = value
				Me.SendPropertyChanged("IDTicketInserimento")
				Me.OnIDTicketInserimentoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDTicketModifica", DbType:="UniqueIdentifier NOT NULL", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property IDTicketModifica() As System.Guid
		Get
			Return Me._IDTicketModifica
		End Get
		Set
			If ((Me._IDTicketModifica = value)  _
						= false) Then
				Me.OnIDTicketModificaChanging(value)
				Me.SendPropertyChanging
				Me._IDTicketModifica = value
				Me.SendPropertyChanged("IDTicketModifica")
				Me.OnIDTicketModificaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TS", AutoSync:=AutoSync.Always, DbType:="rowversion NOT NULL", CanBeNull:=false, IsDbGenerated:=true, IsVersion:=true, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property TS() As System.Data.Linq.Binary
		Get
			Return Me._TS
		End Get
		Set
			If (Object.Equals(Me._TS, value) = false) Then
				Me.OnTSChanging(value)
				Me.SendPropertyChanging
				Me._TS = value
				Me.SendPropertyChanged("TS")
				Me.OnTSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDRigaRichiesta", DbType:="UniqueIdentifier NOT NULL", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property IDRigaRichiesta() As System.Guid
		Get
			Return Me._IDRigaRichiesta
		End Get
		Set
			If ((Me._IDRigaRichiesta = value)  _
						= false) Then
				If Me._OrdiniRigheRichieste.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnIDRigaRichiestaChanging(value)
				Me.SendPropertyChanging
				Me._IDRigaRichiesta = value
				Me.SendPropertyChanged("IDRigaRichiesta")
				Me.OnIDRigaRichiestaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IDDatoAggiuntivo", DbType:="VarChar(64)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property IDDatoAggiuntivo() As String
		Get
			Return Me._IDDatoAggiuntivo
		End Get
		Set
			If (String.Equals(Me._IDDatoAggiuntivo, value) = false) Then
				Me.OnIDDatoAggiuntivoChanging(value)
				Me.SendPropertyChanging
				Me._IDDatoAggiuntivo = value
				Me.SendPropertyChanged("IDDatoAggiuntivo")
				Me.OnIDDatoAggiuntivoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Nome", DbType:="VarChar(128) NOT NULL", CanBeNull:=false, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Nome() As String
		Get
			Return Me._Nome
		End Get
		Set
			If (String.Equals(Me._Nome, value) = false) Then
				Me.OnNomeChanging(value)
				Me.SendPropertyChanging
				Me._Nome = value
				Me.SendPropertyChanged("Nome")
				Me.OnNomeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TipoDato", DbType:="VarChar(32) NOT NULL", CanBeNull:=false, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property TipoDato() As String
		Get
			Return Me._TipoDato
		End Get
		Set
			If (String.Equals(Me._TipoDato, value) = false) Then
				Me.OnTipoDatoChanging(value)
				Me.SendPropertyChanging
				Me._TipoDato = value
				Me.SendPropertyChanged("TipoDato")
				Me.OnTipoDatoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TipoContenuto", DbType:="VarChar(32)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property TipoContenuto() As String
		Get
			Return Me._TipoContenuto
		End Get
		Set
			If (String.Equals(Me._TipoContenuto, value) = false) Then
				Me.OnTipoContenutoChanging(value)
				Me.SendPropertyChanging
				Me._TipoContenuto = value
				Me.SendPropertyChanged("TipoContenuto")
				Me.OnTipoContenutoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ValoreDato", DbType:="Variant", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property ValoreDato() As Object
		Get
			Return Me._ValoreDato
		End Get
		Set
			If (Object.Equals(Me._ValoreDato, value) = false) Then
				Me.OnValoreDatoChanging(value)
				Me.SendPropertyChanging
				Me._ValoreDato = value
				Me.SendPropertyChanged("ValoreDato")
				Me.OnValoreDatoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ValoreDatoVarchar", DbType:="VarChar(MAX)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property ValoreDatoVarchar() As String
		Get
			Return Me._ValoreDatoVarchar
		End Get
		Set
			If (String.Equals(Me._ValoreDatoVarchar, value) = false) Then
				Me.OnValoreDatoVarcharChanging(value)
				Me.SendPropertyChanging
				Me._ValoreDatoVarchar = value
				Me.SendPropertyChanged("ValoreDatoVarchar")
				Me.OnValoreDatoVarcharChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ValoreDatoXml", DbType:="Xml", CanBeNull:=true, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property ValoreDatoXml() As System.Xml.Linq.XElement
		Get
			Return Me._ValoreDatoXml
		End Get
		Set
			If (Object.Equals(Me._ValoreDatoXml, value) = false) Then
				Me.OnValoreDatoXmlChanging(value)
				Me.SendPropertyChanging
				Me._ValoreDatoXml = value
				Me.SendPropertyChanged("ValoreDatoXml")
				Me.OnValoreDatoXmlChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ParametroSpecifico", DbType:="Bit", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property ParametroSpecifico() As System.Nullable(Of Boolean)
		Get
			Return Me._ParametroSpecifico
		End Get
		Set
			If (Me._ParametroSpecifico.Equals(value) = false) Then
				Me.OnParametroSpecificoChanging(value)
				Me.SendPropertyChanging
				Me._ParametroSpecifico = value
				Me.SendPropertyChanged("ParametroSpecifico")
				Me.OnParametroSpecificoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Persistente", DbType:="Bit", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Persistente() As System.Nullable(Of Boolean)
		Get
			Return Me._Persistente
		End Get
		Set
			If (Me._Persistente.Equals(value) = false) Then
				Me.OnPersistenteChanging(value)
				Me.SendPropertyChanging
				Me._Persistente = value
				Me.SendPropertyChanged("Persistente")
				Me.OnPersistenteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="OrdiniRigheRichieste_OrdiniRigheRichiesteDatiAggiuntivi", Storage:="_OrdiniRigheRichieste", ThisKey:="IDRigaRichiesta", OtherKey:="ID", IsForeignKey:=true)>  _
	Public Property OrdiniRigheRichieste() As OrdiniRigheRichieste
		Get
			Return Me._OrdiniRigheRichieste.Entity
		End Get
		Set
			Dim previousValue As OrdiniRigheRichieste = Me._OrdiniRigheRichieste.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._OrdiniRigheRichieste.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._OrdiniRigheRichieste.Entity = Nothing
					previousValue.OrdiniRigheRichiesteDatiAggiuntivis.Remove(Me)
				End If
				Me._OrdiniRigheRichieste.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.OrdiniRigheRichiesteDatiAggiuntivis.Add(Me)
					Me._IDRigaRichiesta = value.ID
				Else
					Me._IDRigaRichiesta = CType(Nothing, System.Guid)
				End If
				Me.SendPropertyChanged("OrdiniRigheRichieste")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
