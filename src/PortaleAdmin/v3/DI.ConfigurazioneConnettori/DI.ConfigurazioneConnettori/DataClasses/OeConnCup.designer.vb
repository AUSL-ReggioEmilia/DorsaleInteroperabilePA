'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="ASMN_OeConnCup")>  _
Partial Public Class OeConnCupDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertTranscodificaAgendaCupStrutturaErogante(instance As TranscodificaAgendaCupStrutturaErogante)
    End Sub
  Partial Private Sub UpdateTranscodificaAgendaCupStrutturaErogante(instance As TranscodificaAgendaCupStrutturaErogante)
    End Sub
  Partial Private Sub DeleteTranscodificaAgendaCupStrutturaErogante(instance As TranscodificaAgendaCupStrutturaErogante)
    End Sub
  Partial Private Sub InsertTranscodificaAttributiPrestazioniCupErogante(instance As TranscodificaAttributiPrestazioniCupErogante)
    End Sub
  Partial Private Sub UpdateTranscodificaAttributiPrestazioniCupErogante(instance As TranscodificaAttributiPrestazioniCupErogante)
    End Sub
  Partial Private Sub DeleteTranscodificaAttributiPrestazioniCupErogante(instance As TranscodificaAttributiPrestazioniCupErogante)
    End Sub
  Partial Private Sub InsertTranscodificaCodiceProvenienzaCupErogante(instance As TranscodificaCodiceProvenienzaCupErogante)
    End Sub
  Partial Private Sub UpdateTranscodificaCodiceProvenienzaCupErogante(instance As TranscodificaCodiceProvenienzaCupErogante)
    End Sub
  Partial Private Sub DeleteTranscodificaCodiceProvenienzaCupErogante(instance As TranscodificaCodiceProvenienzaCupErogante)
    End Sub
  Partial Private Sub InsertTranscodificaCodiceUrgenzaCupOrderEntry(instance As TranscodificaCodiceUrgenzaCupOrderEntry)
    End Sub
  Partial Private Sub UpdateTranscodificaCodiceUrgenzaCupOrderEntry(instance As TranscodificaCodiceUrgenzaCupOrderEntry)
    End Sub
  Partial Private Sub DeleteTranscodificaCodiceUrgenzaCupOrderEntry(instance As TranscodificaCodiceUrgenzaCupOrderEntry)
    End Sub
  Partial Private Sub InsertTranscodificaTipoContrattoCupErogante(instance As TranscodificaTipoContrattoCupErogante)
    End Sub
  Partial Private Sub UpdateTranscodificaTipoContrattoCupErogante(instance As TranscodificaTipoContrattoCupErogante)
    End Sub
  Partial Private Sub DeleteTranscodificaTipoContrattoCupErogante(instance As TranscodificaTipoContrattoCupErogante)
    End Sub
  Partial Private Sub InsertAgendeCupSistemiDiStampa(instance As AgendeCupSistemiDiStampa)
    End Sub
  Partial Private Sub UpdateAgendeCupSistemiDiStampa(instance As AgendeCupSistemiDiStampa)
    End Sub
  Partial Private Sub DeleteAgendeCupSistemiDiStampa(instance As AgendeCupSistemiDiStampa)
    End Sub
  Partial Private Sub Insertocup_StruttureEroganti(instance As ocup_StruttureEroganti)
    End Sub
  Partial Private Sub Updateocup_StruttureEroganti(instance As ocup_StruttureEroganti)
    End Sub
  Partial Private Sub Deleteocup_StruttureEroganti(instance As ocup_StruttureEroganti)
    End Sub
  Partial Private Sub InsertDiffPrestazioniCup(instance As DiffPrestazioniCup)
    End Sub
  Partial Private Sub UpdateDiffPrestazioniCup(instance As DiffPrestazioniCup)
    End Sub
  Partial Private Sub DeleteDiffPrestazioniCup(instance As DiffPrestazioniCup)
    End Sub
  Partial Private Sub InsertTipiContrattoErogante(instance As TipiContrattoErogante)
    End Sub
  Partial Private Sub UpdateTipiContrattoErogante(instance As TipiContrattoErogante)
    End Sub
  Partial Private Sub DeleteTipiContrattoErogante(instance As TipiContrattoErogante)
    End Sub
  Partial Private Sub InsertRegimiOe(instance As RegimiOe)
    End Sub
  Partial Private Sub UpdateRegimiOe(instance As RegimiOe)
    End Sub
  Partial Private Sub DeleteRegimiOe(instance As RegimiOe)
    End Sub
  Partial Private Sub InsertAttributiNomi(instance As AttributiNomi)
    End Sub
  Partial Private Sub UpdateAttributiNomi(instance As AttributiNomi)
    End Sub
  Partial Private Sub DeleteAttributiNomi(instance As AttributiNomi)
    End Sub
  Partial Private Sub Insertocup_SistemiEroganti(instance As ocup_SistemiEroganti)
    End Sub
  Partial Private Sub Updateocup_SistemiEroganti(instance As ocup_SistemiEroganti)
    End Sub
  Partial Private Sub Deleteocup_SistemiEroganti(instance As ocup_SistemiEroganti)
    End Sub
  Partial Private Sub InsertEnum_CodiciSistemiEroganti(instance As Enum_CodiciSistemiEroganti)
    End Sub
  Partial Private Sub UpdateEnum_CodiciSistemiEroganti(instance As Enum_CodiciSistemiEroganti)
    End Sub
  Partial Private Sub DeleteEnum_CodiciSistemiEroganti(instance As Enum_CodiciSistemiEroganti)
    End Sub
  Partial Private Sub InsertEnum_CodiciAziendeEroganti(instance As Enum_CodiciAziendeEroganti)
    End Sub
  Partial Private Sub UpdateEnum_CodiciAziendeEroganti(instance As Enum_CodiciAziendeEroganti)
    End Sub
  Partial Private Sub DeleteEnum_CodiciAziendeEroganti(instance As Enum_CodiciAziendeEroganti)
    End Sub
  Partial Private Sub InsertTipiContrattoCup(instance As TipiContrattoCup)
    End Sub
  Partial Private Sub UpdateTipiContrattoCup(instance As TipiContrattoCup)
    End Sub
  Partial Private Sub DeleteTipiContrattoCup(instance As TipiContrattoCup)
    End Sub
  Partial Private Sub InsertTranscodificaTipoContrattoCupRegimeOrderEntry(instance As TranscodificaTipoContrattoCupRegimeOrderEntry)
    End Sub
  Partial Private Sub UpdateTranscodificaTipoContrattoCupRegimeOrderEntry(instance As TranscodificaTipoContrattoCupRegimeOrderEntry)
    End Sub
  Partial Private Sub DeleteTranscodificaTipoContrattoCupRegimeOrderEntry(instance As TranscodificaTipoContrattoCupRegimeOrderEntry)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.System.Configuration.ConfigurationManager.ConnectionStrings("ASMN_OeConnCupConnectionString").ConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property TranscodificaAgendaCupStrutturaErogante() As System.Data.Linq.Table(Of TranscodificaAgendaCupStrutturaErogante)
		Get
			Return Me.GetTable(Of TranscodificaAgendaCupStrutturaErogante)
		End Get
	End Property
	
	Public ReadOnly Property TranscodificaAttributiPrestazioniCupErogante() As System.Data.Linq.Table(Of TranscodificaAttributiPrestazioniCupErogante)
		Get
			Return Me.GetTable(Of TranscodificaAttributiPrestazioniCupErogante)
		End Get
	End Property
	
	Public ReadOnly Property TranscodificaCodiceProvenienzaCupErogante() As System.Data.Linq.Table(Of TranscodificaCodiceProvenienzaCupErogante)
		Get
			Return Me.GetTable(Of TranscodificaCodiceProvenienzaCupErogante)
		End Get
	End Property
	
	Public ReadOnly Property TranscodificaCodiceUrgenzaCupOrderEntry() As System.Data.Linq.Table(Of TranscodificaCodiceUrgenzaCupOrderEntry)
		Get
			Return Me.GetTable(Of TranscodificaCodiceUrgenzaCupOrderEntry)
		End Get
	End Property
	
	Public ReadOnly Property TranscodificaTipoContrattoCupErogante() As System.Data.Linq.Table(Of TranscodificaTipoContrattoCupErogante)
		Get
			Return Me.GetTable(Of TranscodificaTipoContrattoCupErogante)
		End Get
	End Property
	
	Public ReadOnly Property AgendeCupSistemiDiStampa() As System.Data.Linq.Table(Of AgendeCupSistemiDiStampa)
		Get
			Return Me.GetTable(Of AgendeCupSistemiDiStampa)
		End Get
	End Property
	
	Public ReadOnly Property ocup_StruttureErogantis() As System.Data.Linq.Table(Of ocup_StruttureEroganti)
		Get
			Return Me.GetTable(Of ocup_StruttureEroganti)
		End Get
	End Property
	
	Public ReadOnly Property DiffAgendeCups() As System.Data.Linq.Table(Of DiffAgendeCup)
		Get
			Return Me.GetTable(Of DiffAgendeCup)
		End Get
	End Property
	
	Public ReadOnly Property DiffProvenienzeCups() As System.Data.Linq.Table(Of DiffProvenienzeCup)
		Get
			Return Me.GetTable(Of DiffProvenienzeCup)
		End Get
	End Property
	
	Public ReadOnly Property DiffPrestazioniCups() As System.Data.Linq.Table(Of DiffPrestazioniCup)
		Get
			Return Me.GetTable(Of DiffPrestazioniCup)
		End Get
	End Property
	
	Public ReadOnly Property TipiContrattoErogantes() As System.Data.Linq.Table(Of TipiContrattoErogante)
		Get
			Return Me.GetTable(Of TipiContrattoErogante)
		End Get
	End Property
	
	Public ReadOnly Property RegimiOes() As System.Data.Linq.Table(Of RegimiOe)
		Get
			Return Me.GetTable(Of RegimiOe)
		End Get
	End Property
	
	Public ReadOnly Property AttributiNomis() As System.Data.Linq.Table(Of AttributiNomi)
		Get
			Return Me.GetTable(Of AttributiNomi)
		End Get
	End Property
	
	Public ReadOnly Property ocup_SistemiErogantis() As System.Data.Linq.Table(Of ocup_SistemiEroganti)
		Get
			Return Me.GetTable(Of ocup_SistemiEroganti)
		End Get
	End Property
	
	Public ReadOnly Property Enum_CodiciSistemiErogantis() As System.Data.Linq.Table(Of Enum_CodiciSistemiEroganti)
		Get
			Return Me.GetTable(Of Enum_CodiciSistemiEroganti)
		End Get
	End Property
	
	Public ReadOnly Property Enum_CodiciAziendeErogantis() As System.Data.Linq.Table(Of Enum_CodiciAziendeEroganti)
		Get
			Return Me.GetTable(Of Enum_CodiciAziendeEroganti)
		End Get
	End Property
	
	Public ReadOnly Property TipiContrattoCups() As System.Data.Linq.Table(Of TipiContrattoCup)
		Get
			Return Me.GetTable(Of TipiContrattoCup)
		End Get
	End Property
	
	Public ReadOnly Property TranscodificaTipoContrattoCupRegimeOrderEntries() As System.Data.Linq.Table(Of TranscodificaTipoContrattoCupRegimeOrderEntry)
		Get
			Return Me.GetTable(Of TranscodificaTipoContrattoCupRegimeOrderEntry)
		End Get
	End Property
	
	Public ReadOnly Property DiffAgendeEsistentiPrestazioniMancantis() As System.Data.Linq.Table(Of DiffAgendeEsistentiPrestazioniMancanti)
		Get
			Return Me.GetTable(Of DiffAgendeEsistentiPrestazioniMancanti)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.TranscodificaAgendaCupStrutturaErogante")>  _
Partial Public Class TranscodificaAgendaCupStrutturaErogante
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _CodiceAgendaCup As String
	
	Private _DescrizioneAgendaCup As String
	
	Private _TranscodificaCodiceAgendaCup As String
	
	Private _StrutturaErogante As String
	
	Private _DescrizioneStrutturaErogante As String
	
	Private _CodiceSistemaErogante As String
	
	Private _CodiceAziendaErogante As String
	
	Private _MultiErogante As Boolean
	
	Private _StruttureEroganti As EntityRef(Of ocup_StruttureEroganti)
	
	Private _Enum_CodiciSistemiEroganti As EntityRef(Of Enum_CodiciSistemiEroganti)
	
	Private _Enum_CodiciAziendeEroganti As EntityRef(Of Enum_CodiciAziendeEroganti)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCodiceAgendaCupChanging(value As String)
    End Sub
    Partial Private Sub OnCodiceAgendaCupChanged()
    End Sub
    Partial Private Sub OnDescrizioneAgendaCupChanging(value As String)
    End Sub
    Partial Private Sub OnDescrizioneAgendaCupChanged()
    End Sub
    Partial Private Sub OnTranscodificaCodiceAgendaCupChanging(value As String)
    End Sub
    Partial Private Sub OnTranscodificaCodiceAgendaCupChanged()
    End Sub
    Partial Private Sub OnStrutturaEroganteChanging(value As String)
    End Sub
    Partial Private Sub OnStrutturaEroganteChanged()
    End Sub
    Partial Private Sub OnDescrizioneStrutturaEroganteChanging(value As String)
    End Sub
    Partial Private Sub OnDescrizioneStrutturaEroganteChanged()
    End Sub
    Partial Private Sub OnCodiceSistemaEroganteChanging(value As String)
    End Sub
    Partial Private Sub OnCodiceSistemaEroganteChanged()
    End Sub
    Partial Private Sub OnCodiceAziendaEroganteChanging(value As String)
    End Sub
    Partial Private Sub OnCodiceAziendaEroganteChanged()
    End Sub
    Partial Private Sub OnMultiEroganteChanging(value As Boolean)
    End Sub
    Partial Private Sub OnMultiEroganteChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._StruttureEroganti = CType(Nothing, EntityRef(Of ocup_StruttureEroganti))
		Me._Enum_CodiciSistemiEroganti = CType(Nothing, EntityRef(Of Enum_CodiciSistemiEroganti))
		Me._Enum_CodiciAziendeEroganti = CType(Nothing, EntityRef(Of Enum_CodiciAziendeEroganti))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CodiceAgendaCup", DbType:="VarChar(16) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property CodiceAgendaCup() As String
		Get
			Return Me._CodiceAgendaCup
		End Get
		Set
			If (String.Equals(Me._CodiceAgendaCup, value) = false) Then
				Me.OnCodiceAgendaCupChanging(value)
				Me.SendPropertyChanging
				Me._CodiceAgendaCup = value
				Me.SendPropertyChanged("CodiceAgendaCup")
				Me.OnCodiceAgendaCupChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DescrizioneAgendaCup", DbType:="VarChar(200) NOT NULL", CanBeNull:=false)>  _
	Public Property DescrizioneAgendaCup() As String
		Get
			Return Me._DescrizioneAgendaCup
		End Get
		Set
			If (String.Equals(Me._DescrizioneAgendaCup, value) = false) Then
				Me.OnDescrizioneAgendaCupChanging(value)
				Me.SendPropertyChanging
				Me._DescrizioneAgendaCup = value
				Me.SendPropertyChanged("DescrizioneAgendaCup")
				Me.OnDescrizioneAgendaCupChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TranscodificaCodiceAgendaCup", DbType:="VarChar(16)")>  _
	Public Property TranscodificaCodiceAgendaCup() As String
		Get
			Return Me._TranscodificaCodiceAgendaCup
		End Get
		Set
			If (String.Equals(Me._TranscodificaCodiceAgendaCup, value) = false) Then
				Me.OnTranscodificaCodiceAgendaCupChanging(value)
				Me.SendPropertyChanging
				Me._TranscodificaCodiceAgendaCup = value
				Me.SendPropertyChanged("TranscodificaCodiceAgendaCup")
				Me.OnTranscodificaCodiceAgendaCupChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StrutturaErogante", DbType:="VarChar(16) NOT NULL", CanBeNull:=false)>  _
	Public Property StrutturaErogante() As String
		Get
			Return Me._StrutturaErogante
		End Get
		Set
			If (String.Equals(Me._StrutturaErogante, value) = false) Then
				If Me._StruttureEroganti.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnStrutturaEroganteChanging(value)
				Me.SendPropertyChanging
				Me._StrutturaErogante = value
				Me.SendPropertyChanged("StrutturaErogante")
				Me.OnStrutturaEroganteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DescrizioneStrutturaErogante", DbType:="VarChar(200) NOT NULL", CanBeNull:=false)>  _
	Public Property DescrizioneStrutturaErogante() As String
		Get
			Return Me._DescrizioneStrutturaErogante
		End Get
		Set
			If (String.Equals(Me._DescrizioneStrutturaErogante, value) = false) Then
				Me.OnDescrizioneStrutturaEroganteChanging(value)
				Me.SendPropertyChanging
				Me._DescrizioneStrutturaErogante = value
				Me.SendPropertyChanged("DescrizioneStrutturaErogante")
				Me.OnDescrizioneStrutturaEroganteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CodiceSistemaErogante", DbType:="VarChar(100)")>  _
	Public Property CodiceSistemaErogante() As String
		Get
			Return Me._CodiceSistemaErogante
		End Get
		Set
			If (String.Equals(Me._CodiceSistemaErogante, value) = false) Then
				If Me._Enum_CodiciSistemiEroganti.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnCodiceSistemaEroganteChanging(value)
				Me.SendPropertyChanging
				Me._CodiceSistemaErogante = value
				Me.SendPropertyChanged("CodiceSistemaErogante")
				Me.OnCodiceSistemaEroganteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CodiceAziendaErogante", DbType:="VarChar(16)")>  _
	Public Property CodiceAziendaErogante() As String
		Get
			Return Me._CodiceAziendaErogante
		End Get
		Set
			If (String.Equals(Me._CodiceAziendaErogante, value) = false) Then
				If Me._Enum_CodiciAziendeEroganti.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnCodiceAziendaEroganteChanging(value)
				Me.SendPropertyChanging
				Me._CodiceAziendaErogante = value
				Me.SendPropertyChanged("CodiceAziendaErogante")
				Me.OnCodiceAziendaEroganteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MultiErogante", DbType:="Bit NOT NULL")>  _
	Public Property MultiErogante() As Boolean
		Get
			Return Me._MultiErogante
		End Get
		Set
			If ((Me._MultiErogante = value)  _
						= false) Then
				Me.OnMultiEroganteChanging(value)
				Me.SendPropertyChanging
				Me._MultiErogante = value
				Me.SendPropertyChanged("MultiErogante")
				Me.OnMultiEroganteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="ocup_StruttureEroganti_TranscodificaAgendaCupStrutturaErogante", Storage:="_StruttureEroganti", ThisKey:="StrutturaErogante", OtherKey:="Codice", IsForeignKey:=true)>  _
	Public Property ocup_StruttureEroganti() As ocup_StruttureEroganti
		Get
			Return Me._StruttureEroganti.Entity
		End Get
		Set
			Dim previousValue As ocup_StruttureEroganti = Me._StruttureEroganti.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._StruttureEroganti.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._StruttureEroganti.Entity = Nothing
					previousValue.TranscodificaAgendaCupStrutturaErogantes.Remove(Me)
				End If
				Me._StruttureEroganti.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.TranscodificaAgendaCupStrutturaErogantes.Add(Me)
					Me._StrutturaErogante = value.Codice
				Else
					Me._StrutturaErogante = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("ocup_StruttureEroganti")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Enum_CodiciSistemiEroganti_TranscodificaAgendaCupStrutturaErogante", Storage:="_Enum_CodiciSistemiEroganti", ThisKey:="CodiceSistemaErogante", OtherKey:="CodiceSistema", IsForeignKey:=true)>  _
	Public Property Enum_CodiciSistemiEroganti() As Enum_CodiciSistemiEroganti
		Get
			Return Me._Enum_CodiciSistemiEroganti.Entity
		End Get
		Set
			Dim previousValue As Enum_CodiciSistemiEroganti = Me._Enum_CodiciSistemiEroganti.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._Enum_CodiciSistemiEroganti.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._Enum_CodiciSistemiEroganti.Entity = Nothing
					previousValue.TranscodificaAgendaCupStrutturaErogantes.Remove(Me)
				End If
				Me._Enum_CodiciSistemiEroganti.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.TranscodificaAgendaCupStrutturaErogantes.Add(Me)
					Me._CodiceSistemaErogante = value.CodiceSistema
				Else
					Me._CodiceSistemaErogante = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("Enum_CodiciSistemiEroganti")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Enum_CodiciAziendeEroganti_TranscodificaAgendaCupStrutturaErogante", Storage:="_Enum_CodiciAziendeEroganti", ThisKey:="CodiceAziendaErogante", OtherKey:="CodiceAzienda", IsForeignKey:=true)>  _
	Public Property Enum_CodiciAziendeEroganti() As Enum_CodiciAziendeEroganti
		Get
			Return Me._Enum_CodiciAziendeEroganti.Entity
		End Get
		Set
			Dim previousValue As Enum_CodiciAziendeEroganti = Me._Enum_CodiciAziendeEroganti.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._Enum_CodiciAziendeEroganti.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._Enum_CodiciAziendeEroganti.Entity = Nothing
					previousValue.TranscodificaAgendaCupStrutturaErogantes.Remove(Me)
				End If
				Me._Enum_CodiciAziendeEroganti.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.TranscodificaAgendaCupStrutturaErogantes.Add(Me)
					Me._CodiceAziendaErogante = value.CodiceAzienda
				Else
					Me._CodiceAziendaErogante = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("Enum_CodiciAziendeEroganti")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.TranscodificaAttributiPrestazioniCupErogante")>  _
Partial Public Class TranscodificaAttributiPrestazioniCupErogante
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _StrutturaErogante As String
	
	Private _IdPrestazioneCup As String
	
	Private _IdPrestazioneErogante As String
	
	Private _Nome As String
	
	Private _Codice As String
	
	Private _Posizione As Integer
	
	Private _Descrizione As String
	
	Private _TipoDato As String
	
	Private _TipoContenuto As System.Nullable(Of Byte)
	
	Private _SpecialitaEsameCup As String
	
	Private _CodiceSistemaErogante As String
	
	Private _CodiceAziendaErogante As String
	
	Private _StruttureEroganti As EntityRef(Of ocup_StruttureEroganti)
	
	Private _AttributiNomi As EntityRef(Of AttributiNomi)
	
	Private _Enum_CodiciSistemiEroganti As EntityRef(Of Enum_CodiciSistemiEroganti)
	
	Private _Enum_CodiciAziendeEroganti As EntityRef(Of Enum_CodiciAziendeEroganti)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnStrutturaEroganteChanging(value As String)
    End Sub
    Partial Private Sub OnStrutturaEroganteChanged()
    End Sub
    Partial Private Sub OnIdPrestazioneCupChanging(value As String)
    End Sub
    Partial Private Sub OnIdPrestazioneCupChanged()
    End Sub
    Partial Private Sub OnIdPrestazioneEroganteChanging(value As String)
    End Sub
    Partial Private Sub OnIdPrestazioneEroganteChanged()
    End Sub
    Partial Private Sub OnNomeChanging(value As String)
    End Sub
    Partial Private Sub OnNomeChanged()
    End Sub
    Partial Private Sub OnCodiceChanging(value As String)
    End Sub
    Partial Private Sub OnCodiceChanged()
    End Sub
    Partial Private Sub OnPosizioneChanging(value As Integer)
    End Sub
    Partial Private Sub OnPosizioneChanged()
    End Sub
    Partial Private Sub OnDescrizioneChanging(value As String)
    End Sub
    Partial Private Sub OnDescrizioneChanged()
    End Sub
    Partial Private Sub OnTipoDatoChanging(value As String)
    End Sub
    Partial Private Sub OnTipoDatoChanged()
    End Sub
    Partial Private Sub OnTipoContenutoChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub OnTipoContenutoChanged()
    End Sub
    Partial Private Sub OnSpecialitaEsameCupChanging(value As String)
    End Sub
    Partial Private Sub OnSpecialitaEsameCupChanged()
    End Sub
    Partial Private Sub OnCodiceSistemaEroganteChanging(value As String)
    End Sub
    Partial Private Sub OnCodiceSistemaEroganteChanged()
    End Sub
    Partial Private Sub OnCodiceAziendaEroganteChanging(value As String)
    End Sub
    Partial Private Sub OnCodiceAziendaEroganteChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._StruttureEroganti = CType(Nothing, EntityRef(Of ocup_StruttureEroganti))
		Me._AttributiNomi = CType(Nothing, EntityRef(Of AttributiNomi))
		Me._Enum_CodiciSistemiEroganti = CType(Nothing, EntityRef(Of Enum_CodiciSistemiEroganti))
		Me._Enum_CodiciAziendeEroganti = CType(Nothing, EntityRef(Of Enum_CodiciAziendeEroganti))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StrutturaErogante", DbType:="VarChar(64) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property StrutturaErogante() As String
		Get
			Return Me._StrutturaErogante
		End Get
		Set
			If (String.Equals(Me._StrutturaErogante, value) = false) Then
				If Me._StruttureEroganti.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnStrutturaEroganteChanging(value)
				Me.SendPropertyChanging
				Me._StrutturaErogante = value
				Me.SendPropertyChanged("StrutturaErogante")
				Me.OnStrutturaEroganteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdPrestazioneCup", DbType:="VarChar(16) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property IdPrestazioneCup() As String
		Get
			Return Me._IdPrestazioneCup
		End Get
		Set
			If (String.Equals(Me._IdPrestazioneCup, value) = false) Then
				Me.OnIdPrestazioneCupChanging(value)
				Me.SendPropertyChanging
				Me._IdPrestazioneCup = value
				Me.SendPropertyChanged("IdPrestazioneCup")
				Me.OnIdPrestazioneCupChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdPrestazioneErogante", DbType:="VarChar(16) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property IdPrestazioneErogante() As String
		Get
			Return Me._IdPrestazioneErogante
		End Get
		Set
			If (String.Equals(Me._IdPrestazioneErogante, value) = false) Then
				Me.OnIdPrestazioneEroganteChanging(value)
				Me.SendPropertyChanging
				Me._IdPrestazioneErogante = value
				Me.SendPropertyChanged("IdPrestazioneErogante")
				Me.OnIdPrestazioneEroganteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Nome", DbType:="VarChar(64) NOT NULL", CanBeNull:=false)>  _
	Public Property Nome() As String
		Get
			Return Me._Nome
		End Get
		Set
			If (String.Equals(Me._Nome, value) = false) Then
				If Me._AttributiNomi.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnNomeChanging(value)
				Me.SendPropertyChanging
				Me._Nome = value
				Me.SendPropertyChanged("Nome")
				Me.OnNomeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Codice", DbType:="VarChar(64) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property Codice() As String
		Get
			Return Me._Codice
		End Get
		Set
			If (String.Equals(Me._Codice, value) = false) Then
				Me.OnCodiceChanging(value)
				Me.SendPropertyChanging
				Me._Codice = value
				Me.SendPropertyChanged("Codice")
				Me.OnCodiceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Posizione", DbType:="Int NOT NULL")>  _
	Public Property Posizione() As Integer
		Get
			Return Me._Posizione
		End Get
		Set
			If ((Me._Posizione = value)  _
						= false) Then
				Me.OnPosizioneChanging(value)
				Me.SendPropertyChanging
				Me._Posizione = value
				Me.SendPropertyChanged("Posizione")
				Me.OnPosizioneChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Descrizione", DbType:="VarChar(128)")>  _
	Public Property Descrizione() As String
		Get
			Return Me._Descrizione
		End Get
		Set
			If (String.Equals(Me._Descrizione, value) = false) Then
				Me.OnDescrizioneChanging(value)
				Me.SendPropertyChanging
				Me._Descrizione = value
				Me.SendPropertyChanged("Descrizione")
				Me.OnDescrizioneChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TipoDato", DbType:="VarChar(16)")>  _
	Public Property TipoDato() As String
		Get
			Return Me._TipoDato
		End Get
		Set
			If (String.Equals(Me._TipoDato, value) = false) Then
				Me.OnTipoDatoChanging(value)
				Me.SendPropertyChanging
				Me._TipoDato = value
				Me.SendPropertyChanged("TipoDato")
				Me.OnTipoDatoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TipoContenuto", DbType:="TinyInt")>  _
	Public Property TipoContenuto() As System.Nullable(Of Byte)
		Get
			Return Me._TipoContenuto
		End Get
		Set
			If (Me._TipoContenuto.Equals(value) = false) Then
				Me.OnTipoContenutoChanging(value)
				Me.SendPropertyChanging
				Me._TipoContenuto = value
				Me.SendPropertyChanged("TipoContenuto")
				Me.OnTipoContenutoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SpecialitaEsameCup", DbType:="VarChar(16) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property SpecialitaEsameCup() As String
		Get
			Return Me._SpecialitaEsameCup
		End Get
		Set
			If (String.Equals(Me._SpecialitaEsameCup, value) = false) Then
				Me.OnSpecialitaEsameCupChanging(value)
				Me.SendPropertyChanging
				Me._SpecialitaEsameCup = value
				Me.SendPropertyChanged("SpecialitaEsameCup")
				Me.OnSpecialitaEsameCupChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CodiceSistemaErogante", DbType:="VarChar(100)")>  _
	Public Property CodiceSistemaErogante() As String
		Get
			Return Me._CodiceSistemaErogante
		End Get
		Set
			If (String.Equals(Me._CodiceSistemaErogante, value) = false) Then
				If Me._Enum_CodiciSistemiEroganti.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnCodiceSistemaEroganteChanging(value)
				Me.SendPropertyChanging
				Me._CodiceSistemaErogante = value
				Me.SendPropertyChanged("CodiceSistemaErogante")
				Me.OnCodiceSistemaEroganteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CodiceAziendaErogante", DbType:="VarChar(16)")>  _
	Public Property CodiceAziendaErogante() As String
		Get
			Return Me._CodiceAziendaErogante
		End Get
		Set
			If (String.Equals(Me._CodiceAziendaErogante, value) = false) Then
				If Me._Enum_CodiciAziendeEroganti.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnCodiceAziendaEroganteChanging(value)
				Me.SendPropertyChanging
				Me._CodiceAziendaErogante = value
				Me.SendPropertyChanged("CodiceAziendaErogante")
				Me.OnCodiceAziendaEroganteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="ocup_StruttureEroganti_TranscodificaAttributiPrestazioniCupErogante", Storage:="_StruttureEroganti", ThisKey:="StrutturaErogante", OtherKey:="Codice", IsForeignKey:=true)>  _
	Public Property ocup_StruttureEroganti() As ocup_StruttureEroganti
		Get
			Return Me._StruttureEroganti.Entity
		End Get
		Set
			Dim previousValue As ocup_StruttureEroganti = Me._StruttureEroganti.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._StruttureEroganti.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._StruttureEroganti.Entity = Nothing
					previousValue.TranscodificaAttributiPrestazioniCupErogantes.Remove(Me)
				End If
				Me._StruttureEroganti.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.TranscodificaAttributiPrestazioniCupErogantes.Add(Me)
					Me._StrutturaErogante = value.Codice
				Else
					Me._StrutturaErogante = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("ocup_StruttureEroganti")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="AttributiNomi_TranscodificaAttributiPrestazioniCupErogante", Storage:="_AttributiNomi", ThisKey:="Nome", OtherKey:="Nome", IsForeignKey:=true)>  _
	Public Property AttributiNomi() As AttributiNomi
		Get
			Return Me._AttributiNomi.Entity
		End Get
		Set
			Dim previousValue As AttributiNomi = Me._AttributiNomi.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._AttributiNomi.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._AttributiNomi.Entity = Nothing
					previousValue.TranscodificaAttributiPrestazioniCupErogantes.Remove(Me)
				End If
				Me._AttributiNomi.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.TranscodificaAttributiPrestazioniCupErogantes.Add(Me)
					Me._Nome = value.Nome
				Else
					Me._Nome = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("AttributiNomi")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Enum_CodiciSistemiEroganti_TranscodificaAttributiPrestazioniCupErogante", Storage:="_Enum_CodiciSistemiEroganti", ThisKey:="CodiceSistemaErogante", OtherKey:="CodiceSistema", IsForeignKey:=true)>  _
	Public Property Enum_CodiciSistemiEroganti() As Enum_CodiciSistemiEroganti
		Get
			Return Me._Enum_CodiciSistemiEroganti.Entity
		End Get
		Set
			Dim previousValue As Enum_CodiciSistemiEroganti = Me._Enum_CodiciSistemiEroganti.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._Enum_CodiciSistemiEroganti.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._Enum_CodiciSistemiEroganti.Entity = Nothing
					previousValue.TranscodificaAttributiPrestazioniCupErogantes.Remove(Me)
				End If
				Me._Enum_CodiciSistemiEroganti.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.TranscodificaAttributiPrestazioniCupErogantes.Add(Me)
					Me._CodiceSistemaErogante = value.CodiceSistema
				Else
					Me._CodiceSistemaErogante = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("Enum_CodiciSistemiEroganti")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Enum_CodiciAziendeEroganti_TranscodificaAttributiPrestazioniCupErogante", Storage:="_Enum_CodiciAziendeEroganti", ThisKey:="CodiceAziendaErogante", OtherKey:="CodiceAzienda", IsForeignKey:=true)>  _
	Public Property Enum_CodiciAziendeEroganti() As Enum_CodiciAziendeEroganti
		Get
			Return Me._Enum_CodiciAziendeEroganti.Entity
		End Get
		Set
			Dim previousValue As Enum_CodiciAziendeEroganti = Me._Enum_CodiciAziendeEroganti.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._Enum_CodiciAziendeEroganti.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._Enum_CodiciAziendeEroganti.Entity = Nothing
					previousValue.TranscodificaAttributiPrestazioniCupErogantes.Remove(Me)
				End If
				Me._Enum_CodiciAziendeEroganti.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.TranscodificaAttributiPrestazioniCupErogantes.Add(Me)
					Me._CodiceAziendaErogante = value.CodiceAzienda
				Else
					Me._CodiceAziendaErogante = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("Enum_CodiciAziendeEroganti")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.TranscodificaCodiceProvenienzaCupErogante")>  _
Partial Public Class TranscodificaCodiceProvenienzaCupErogante
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _CodiceProvenienzaCup As String
	
	Private _CodiceProvenienzaErogante As String
	
	Private _DescrizioneProvenienzaErogante As String
	
	Private _StrutturaErogante As String
	
	Private _StruttureEroganti As EntityRef(Of ocup_StruttureEroganti)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCodiceProvenienzaCupChanging(value As String)
    End Sub
    Partial Private Sub OnCodiceProvenienzaCupChanged()
    End Sub
    Partial Private Sub OnCodiceProvenienzaEroganteChanging(value As String)
    End Sub
    Partial Private Sub OnCodiceProvenienzaEroganteChanged()
    End Sub
    Partial Private Sub OnDescrizioneProvenienzaEroganteChanging(value As String)
    End Sub
    Partial Private Sub OnDescrizioneProvenienzaEroganteChanged()
    End Sub
    Partial Private Sub OnStrutturaEroganteChanging(value As String)
    End Sub
    Partial Private Sub OnStrutturaEroganteChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._StruttureEroganti = CType(Nothing, EntityRef(Of ocup_StruttureEroganti))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CodiceProvenienzaCup", DbType:="VarChar(16) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property CodiceProvenienzaCup() As String
		Get
			Return Me._CodiceProvenienzaCup
		End Get
		Set
			If (String.Equals(Me._CodiceProvenienzaCup, value) = false) Then
				Me.OnCodiceProvenienzaCupChanging(value)
				Me.SendPropertyChanging
				Me._CodiceProvenienzaCup = value
				Me.SendPropertyChanged("CodiceProvenienzaCup")
				Me.OnCodiceProvenienzaCupChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CodiceProvenienzaErogante", DbType:="VarChar(16) NOT NULL", CanBeNull:=false)>  _
	Public Property CodiceProvenienzaErogante() As String
		Get
			Return Me._CodiceProvenienzaErogante
		End Get
		Set
			If (String.Equals(Me._CodiceProvenienzaErogante, value) = false) Then
				Me.OnCodiceProvenienzaEroganteChanging(value)
				Me.SendPropertyChanging
				Me._CodiceProvenienzaErogante = value
				Me.SendPropertyChanged("CodiceProvenienzaErogante")
				Me.OnCodiceProvenienzaEroganteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DescrizioneProvenienzaErogante", DbType:="VarChar(200) NOT NULL", CanBeNull:=false)>  _
	Public Property DescrizioneProvenienzaErogante() As String
		Get
			Return Me._DescrizioneProvenienzaErogante
		End Get
		Set
			If (String.Equals(Me._DescrizioneProvenienzaErogante, value) = false) Then
				Me.OnDescrizioneProvenienzaEroganteChanging(value)
				Me.SendPropertyChanging
				Me._DescrizioneProvenienzaErogante = value
				Me.SendPropertyChanged("DescrizioneProvenienzaErogante")
				Me.OnDescrizioneProvenienzaEroganteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StrutturaErogante", DbType:="VarChar(16) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property StrutturaErogante() As String
		Get
			Return Me._StrutturaErogante
		End Get
		Set
			If (String.Equals(Me._StrutturaErogante, value) = false) Then
				If Me._StruttureEroganti.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnStrutturaEroganteChanging(value)
				Me.SendPropertyChanging
				Me._StrutturaErogante = value
				Me.SendPropertyChanged("StrutturaErogante")
				Me.OnStrutturaEroganteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="ocup_StruttureEroganti_TranscodificaCodiceProvenienzaCupErogante", Storage:="_StruttureEroganti", ThisKey:="StrutturaErogante", OtherKey:="Codice", IsForeignKey:=true)>  _
	Public Property ocup_StruttureEroganti() As ocup_StruttureEroganti
		Get
			Return Me._StruttureEroganti.Entity
		End Get
		Set
			Dim previousValue As ocup_StruttureEroganti = Me._StruttureEroganti.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._StruttureEroganti.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._StruttureEroganti.Entity = Nothing
					previousValue.TranscodificaCodiceProvenienzaCupErogantes.Remove(Me)
				End If
				Me._StruttureEroganti.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.TranscodificaCodiceProvenienzaCupErogantes.Add(Me)
					Me._StrutturaErogante = value.Codice
				Else
					Me._StrutturaErogante = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("ocup_StruttureEroganti")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.TranscodificaCodiceUrgenzaCupOrderEntry")>  _
Partial Public Class TranscodificaCodiceUrgenzaCupOrderEntry
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _CodiceUrgenzaCup As String
	
	Private _CodiceUrgenzaOe As String
	
	Private _DescrizioneUrgenzaOe As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCodiceUrgenzaCupChanging(value As String)
    End Sub
    Partial Private Sub OnCodiceUrgenzaCupChanged()
    End Sub
    Partial Private Sub OnCodiceUrgenzaOeChanging(value As String)
    End Sub
    Partial Private Sub OnCodiceUrgenzaOeChanged()
    End Sub
    Partial Private Sub OnDescrizioneUrgenzaOeChanging(value As String)
    End Sub
    Partial Private Sub OnDescrizioneUrgenzaOeChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CodiceUrgenzaCup", DbType:="VarChar(16) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property CodiceUrgenzaCup() As String
		Get
			Return Me._CodiceUrgenzaCup
		End Get
		Set
			If (String.Equals(Me._CodiceUrgenzaCup, value) = false) Then
				Me.OnCodiceUrgenzaCupChanging(value)
				Me.SendPropertyChanging
				Me._CodiceUrgenzaCup = value
				Me.SendPropertyChanged("CodiceUrgenzaCup")
				Me.OnCodiceUrgenzaCupChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CodiceUrgenzaOe", DbType:="VarChar(16) NOT NULL", CanBeNull:=false)>  _
	Public Property CodiceUrgenzaOe() As String
		Get
			Return Me._CodiceUrgenzaOe
		End Get
		Set
			If (String.Equals(Me._CodiceUrgenzaOe, value) = false) Then
				Me.OnCodiceUrgenzaOeChanging(value)
				Me.SendPropertyChanging
				Me._CodiceUrgenzaOe = value
				Me.SendPropertyChanged("CodiceUrgenzaOe")
				Me.OnCodiceUrgenzaOeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DescrizioneUrgenzaOe", DbType:="VarChar(100) NOT NULL", CanBeNull:=false)>  _
	Public Property DescrizioneUrgenzaOe() As String
		Get
			Return Me._DescrizioneUrgenzaOe
		End Get
		Set
			If (String.Equals(Me._DescrizioneUrgenzaOe, value) = false) Then
				Me.OnDescrizioneUrgenzaOeChanging(value)
				Me.SendPropertyChanging
				Me._DescrizioneUrgenzaOe = value
				Me.SendPropertyChanged("DescrizioneUrgenzaOe")
				Me.OnDescrizioneUrgenzaOeChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.TranscodificaTipoContrattoCupErogante")>  _
Partial Public Class TranscodificaTipoContrattoCupErogante
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _CodiceTipoContrattoCup As String
	
	Private _CodiceTipoContrattoErogante As String
	
	Private _StrutturaErogante As String
	
	Private _StruttureEroganti As EntityRef(Of ocup_StruttureEroganti)
	
	Private _TipiContrattoErogante As EntityRef(Of TipiContrattoErogante)
	
	Private _TipiContrattoCup As EntityRef(Of TipiContrattoCup)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCodiceTipoContrattoCupChanging(value As String)
    End Sub
    Partial Private Sub OnCodiceTipoContrattoCupChanged()
    End Sub
    Partial Private Sub OnCodiceTipoContrattoEroganteChanging(value As String)
    End Sub
    Partial Private Sub OnCodiceTipoContrattoEroganteChanged()
    End Sub
    Partial Private Sub OnStrutturaEroganteChanging(value As String)
    End Sub
    Partial Private Sub OnStrutturaEroganteChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._StruttureEroganti = CType(Nothing, EntityRef(Of ocup_StruttureEroganti))
		Me._TipiContrattoErogante = CType(Nothing, EntityRef(Of TipiContrattoErogante))
		Me._TipiContrattoCup = CType(Nothing, EntityRef(Of TipiContrattoCup))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CodiceTipoContrattoCup", DbType:="VarChar(16) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property CodiceTipoContrattoCup() As String
		Get
			Return Me._CodiceTipoContrattoCup
		End Get
		Set
			If (String.Equals(Me._CodiceTipoContrattoCup, value) = false) Then
				If Me._TipiContrattoCup.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnCodiceTipoContrattoCupChanging(value)
				Me.SendPropertyChanging
				Me._CodiceTipoContrattoCup = value
				Me.SendPropertyChanged("CodiceTipoContrattoCup")
				Me.OnCodiceTipoContrattoCupChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CodiceTipoContrattoErogante", DbType:="VarChar(16) NOT NULL", CanBeNull:=false)>  _
	Public Property CodiceTipoContrattoErogante() As String
		Get
			Return Me._CodiceTipoContrattoErogante
		End Get
		Set
			If (String.Equals(Me._CodiceTipoContrattoErogante, value) = false) Then
				If Me._TipiContrattoErogante.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnCodiceTipoContrattoEroganteChanging(value)
				Me.SendPropertyChanging
				Me._CodiceTipoContrattoErogante = value
				Me.SendPropertyChanged("CodiceTipoContrattoErogante")
				Me.OnCodiceTipoContrattoEroganteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StrutturaErogante", DbType:="VarChar(16) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property StrutturaErogante() As String
		Get
			Return Me._StrutturaErogante
		End Get
		Set
			If (String.Equals(Me._StrutturaErogante, value) = false) Then
				If Me._StruttureEroganti.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnStrutturaEroganteChanging(value)
				Me.SendPropertyChanging
				Me._StrutturaErogante = value
				Me.SendPropertyChanged("StrutturaErogante")
				Me.OnStrutturaEroganteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="ocup_StruttureEroganti_TranscodificaTipoContrattoCupErogante", Storage:="_StruttureEroganti", ThisKey:="StrutturaErogante", OtherKey:="Codice", IsForeignKey:=true)>  _
	Public Property ocup_StruttureEroganti() As ocup_StruttureEroganti
		Get
			Return Me._StruttureEroganti.Entity
		End Get
		Set
			Dim previousValue As ocup_StruttureEroganti = Me._StruttureEroganti.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._StruttureEroganti.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._StruttureEroganti.Entity = Nothing
					previousValue.TranscodificaTipoContrattoCupErogantes.Remove(Me)
				End If
				Me._StruttureEroganti.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.TranscodificaTipoContrattoCupErogantes.Add(Me)
					Me._StrutturaErogante = value.Codice
				Else
					Me._StrutturaErogante = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("ocup_StruttureEroganti")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="TipiContrattoErogante_TranscodificaTipoContrattoCupErogante", Storage:="_TipiContrattoErogante", ThisKey:="CodiceTipoContrattoErogante", OtherKey:="Codice", IsForeignKey:=true)>  _
	Public Property TipiContrattoErogante() As TipiContrattoErogante
		Get
			Return Me._TipiContrattoErogante.Entity
		End Get
		Set
			Dim previousValue As TipiContrattoErogante = Me._TipiContrattoErogante.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._TipiContrattoErogante.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._TipiContrattoErogante.Entity = Nothing
					previousValue.TranscodificaTipoContrattoCupErogantes.Remove(Me)
				End If
				Me._TipiContrattoErogante.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.TranscodificaTipoContrattoCupErogantes.Add(Me)
					Me._CodiceTipoContrattoErogante = value.Codice
				Else
					Me._CodiceTipoContrattoErogante = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("TipiContrattoErogante")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="TipiContrattoCup_TranscodificaTipoContrattoCupErogante", Storage:="_TipiContrattoCup", ThisKey:="CodiceTipoContrattoCup", OtherKey:="Codice", IsForeignKey:=true)>  _
	Public Property TipiContrattoCup() As TipiContrattoCup
		Get
			Return Me._TipiContrattoCup.Entity
		End Get
		Set
			Dim previousValue As TipiContrattoCup = Me._TipiContrattoCup.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._TipiContrattoCup.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._TipiContrattoCup.Entity = Nothing
					previousValue.TranscodificaTipoContrattoCupErogantes.Remove(Me)
				End If
				Me._TipiContrattoCup.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.TranscodificaTipoContrattoCupErogantes.Add(Me)
					Me._CodiceTipoContrattoCup = value.Codice
				Else
					Me._CodiceTipoContrattoCup = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("TipiContrattoCup")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.AgendeCupSistemiDiStampa")>  _
Partial Public Class AgendeCupSistemiDiStampa
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Id As System.Guid
	
	Private _CodiceAgendaCup As String
	
	Private _PcRichiedente As String
	
	Private _SistemaDiStampa As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdChanging(value As System.Guid)
    End Sub
    Partial Private Sub OnIdChanged()
    End Sub
    Partial Private Sub OnCodiceAgendaCupChanging(value As String)
    End Sub
    Partial Private Sub OnCodiceAgendaCupChanged()
    End Sub
    Partial Private Sub OnPcRichiedenteChanging(value As String)
    End Sub
    Partial Private Sub OnPcRichiedenteChanged()
    End Sub
    Partial Private Sub OnSistemaDiStampaChanging(value As String)
    End Sub
    Partial Private Sub OnSistemaDiStampaChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id", AutoSync:=AutoSync.OnInsert, DbType:="UniqueIdentifier NOT NULL", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property Id() As System.Guid
		Get
			Return Me._Id
		End Get
		Set
			If ((Me._Id = value)  _
						= false) Then
				Me.OnIdChanging(value)
				Me.SendPropertyChanging
				Me._Id = value
				Me.SendPropertyChanged("Id")
				Me.OnIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CodiceAgendaCup", DbType:="VarChar(16) NOT NULL", CanBeNull:=false)>  _
	Public Property CodiceAgendaCup() As String
		Get
			Return Me._CodiceAgendaCup
		End Get
		Set
			If (String.Equals(Me._CodiceAgendaCup, value) = false) Then
				Me.OnCodiceAgendaCupChanging(value)
				Me.SendPropertyChanging
				Me._CodiceAgendaCup = value
				Me.SendPropertyChanged("CodiceAgendaCup")
				Me.OnCodiceAgendaCupChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PcRichiedente", DbType:="VarChar(128)")>  _
	Public Property PcRichiedente() As String
		Get
			Return Me._PcRichiedente
		End Get
		Set
			If (String.Equals(Me._PcRichiedente, value) = false) Then
				Me.OnPcRichiedenteChanging(value)
				Me.SendPropertyChanging
				Me._PcRichiedente = value
				Me.SendPropertyChanged("PcRichiedente")
				Me.OnPcRichiedenteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SistemaDiStampa", DbType:="VarChar(64) NOT NULL", CanBeNull:=false)>  _
	Public Property SistemaDiStampa() As String
		Get
			Return Me._SistemaDiStampa
		End Get
		Set
			If (String.Equals(Me._SistemaDiStampa, value) = false) Then
				Me.OnSistemaDiStampaChanging(value)
				Me.SendPropertyChanging
				Me._SistemaDiStampa = value
				Me.SendPropertyChanged("SistemaDiStampa")
				Me.OnSistemaDiStampaChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.StruttureEroganti")>  _
Partial Public Class ocup_StruttureEroganti
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Codice As String
	
	Private _TranscodificaAgendaCupStrutturaErogantes As EntitySet(Of TranscodificaAgendaCupStrutturaErogante)
	
	Private _TranscodificaAttributiPrestazioniCupErogantes As EntitySet(Of TranscodificaAttributiPrestazioniCupErogante)
	
	Private _TranscodificaCodiceProvenienzaCupErogantes As EntitySet(Of TranscodificaCodiceProvenienzaCupErogante)
	
	Private _TranscodificaTipoContrattoCupErogantes As EntitySet(Of TranscodificaTipoContrattoCupErogante)
	
	Private _DiffPrestazioniCups As EntitySet(Of DiffPrestazioniCup)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCodiceChanging(value As String)
    End Sub
    Partial Private Sub OnCodiceChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._TranscodificaAgendaCupStrutturaErogantes = New EntitySet(Of TranscodificaAgendaCupStrutturaErogante)(AddressOf Me.attach_TranscodificaAgendaCupStrutturaErogantes, AddressOf Me.detach_TranscodificaAgendaCupStrutturaErogantes)
		Me._TranscodificaAttributiPrestazioniCupErogantes = New EntitySet(Of TranscodificaAttributiPrestazioniCupErogante)(AddressOf Me.attach_TranscodificaAttributiPrestazioniCupErogantes, AddressOf Me.detach_TranscodificaAttributiPrestazioniCupErogantes)
		Me._TranscodificaCodiceProvenienzaCupErogantes = New EntitySet(Of TranscodificaCodiceProvenienzaCupErogante)(AddressOf Me.attach_TranscodificaCodiceProvenienzaCupErogantes, AddressOf Me.detach_TranscodificaCodiceProvenienzaCupErogantes)
		Me._TranscodificaTipoContrattoCupErogantes = New EntitySet(Of TranscodificaTipoContrattoCupErogante)(AddressOf Me.attach_TranscodificaTipoContrattoCupErogantes, AddressOf Me.detach_TranscodificaTipoContrattoCupErogantes)
		Me._DiffPrestazioniCups = New EntitySet(Of DiffPrestazioniCup)(AddressOf Me.attach_DiffPrestazioniCups, AddressOf Me.detach_DiffPrestazioniCups)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Codice", DbType:="VarChar(16) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property Codice() As String
		Get
			Return Me._Codice
		End Get
		Set
			If (String.Equals(Me._Codice, value) = false) Then
				Me.OnCodiceChanging(value)
				Me.SendPropertyChanging
				Me._Codice = value
				Me.SendPropertyChanged("Codice")
				Me.OnCodiceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="ocup_StruttureEroganti_TranscodificaAgendaCupStrutturaErogante", Storage:="_TranscodificaAgendaCupStrutturaErogantes", ThisKey:="Codice", OtherKey:="StrutturaErogante")>  _
	Public Property TranscodificaAgendaCupStrutturaErogantes() As EntitySet(Of TranscodificaAgendaCupStrutturaErogante)
		Get
			Return Me._TranscodificaAgendaCupStrutturaErogantes
		End Get
		Set
			Me._TranscodificaAgendaCupStrutturaErogantes.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="ocup_StruttureEroganti_TranscodificaAttributiPrestazioniCupErogante", Storage:="_TranscodificaAttributiPrestazioniCupErogantes", ThisKey:="Codice", OtherKey:="StrutturaErogante")>  _
	Public Property TranscodificaAttributiPrestazioniCupErogantes() As EntitySet(Of TranscodificaAttributiPrestazioniCupErogante)
		Get
			Return Me._TranscodificaAttributiPrestazioniCupErogantes
		End Get
		Set
			Me._TranscodificaAttributiPrestazioniCupErogantes.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="ocup_StruttureEroganti_TranscodificaCodiceProvenienzaCupErogante", Storage:="_TranscodificaCodiceProvenienzaCupErogantes", ThisKey:="Codice", OtherKey:="StrutturaErogante")>  _
	Public Property TranscodificaCodiceProvenienzaCupErogantes() As EntitySet(Of TranscodificaCodiceProvenienzaCupErogante)
		Get
			Return Me._TranscodificaCodiceProvenienzaCupErogantes
		End Get
		Set
			Me._TranscodificaCodiceProvenienzaCupErogantes.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="ocup_StruttureEroganti_TranscodificaTipoContrattoCupErogante", Storage:="_TranscodificaTipoContrattoCupErogantes", ThisKey:="Codice", OtherKey:="StrutturaErogante")>  _
	Public Property TranscodificaTipoContrattoCupErogantes() As EntitySet(Of TranscodificaTipoContrattoCupErogante)
		Get
			Return Me._TranscodificaTipoContrattoCupErogantes
		End Get
		Set
			Me._TranscodificaTipoContrattoCupErogantes.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="ocup_StruttureEroganti_DiffPrestazioniCup", Storage:="_DiffPrestazioniCups", ThisKey:="Codice", OtherKey:="StrutturaErogante")>  _
	Public Property DiffPrestazioniCups() As EntitySet(Of DiffPrestazioniCup)
		Get
			Return Me._DiffPrestazioniCups
		End Get
		Set
			Me._DiffPrestazioniCups.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_TranscodificaAgendaCupStrutturaErogantes(ByVal entity As TranscodificaAgendaCupStrutturaErogante)
		Me.SendPropertyChanging
		entity.ocup_StruttureEroganti = Me
	End Sub
	
	Private Sub detach_TranscodificaAgendaCupStrutturaErogantes(ByVal entity As TranscodificaAgendaCupStrutturaErogante)
		Me.SendPropertyChanging
		entity.ocup_StruttureEroganti = Nothing
	End Sub
	
	Private Sub attach_TranscodificaAttributiPrestazioniCupErogantes(ByVal entity As TranscodificaAttributiPrestazioniCupErogante)
		Me.SendPropertyChanging
		entity.ocup_StruttureEroganti = Me
	End Sub
	
	Private Sub detach_TranscodificaAttributiPrestazioniCupErogantes(ByVal entity As TranscodificaAttributiPrestazioniCupErogante)
		Me.SendPropertyChanging
		entity.ocup_StruttureEroganti = Nothing
	End Sub
	
	Private Sub attach_TranscodificaCodiceProvenienzaCupErogantes(ByVal entity As TranscodificaCodiceProvenienzaCupErogante)
		Me.SendPropertyChanging
		entity.ocup_StruttureEroganti = Me
	End Sub
	
	Private Sub detach_TranscodificaCodiceProvenienzaCupErogantes(ByVal entity As TranscodificaCodiceProvenienzaCupErogante)
		Me.SendPropertyChanging
		entity.ocup_StruttureEroganti = Nothing
	End Sub
	
	Private Sub attach_TranscodificaTipoContrattoCupErogantes(ByVal entity As TranscodificaTipoContrattoCupErogante)
		Me.SendPropertyChanging
		entity.ocup_StruttureEroganti = Me
	End Sub
	
	Private Sub detach_TranscodificaTipoContrattoCupErogantes(ByVal entity As TranscodificaTipoContrattoCupErogante)
		Me.SendPropertyChanging
		entity.ocup_StruttureEroganti = Nothing
	End Sub
	
	Private Sub attach_DiffPrestazioniCups(ByVal entity As DiffPrestazioniCup)
		Me.SendPropertyChanging
		entity.ocup_StruttureEroganti = Me
	End Sub
	
	Private Sub detach_DiffPrestazioniCups(ByVal entity As DiffPrestazioniCup)
		Me.SendPropertyChanging
		entity.ocup_StruttureEroganti = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="admin.DiffAgendeCup")>  _
Partial Public Class DiffAgendeCup
	
	Private _CodiceAgendaCup As String
	
	Private _DescrizioneAgendaCup As String
	
	Private _TranscodificaCodiceAgendaCup As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CodiceAgendaCup", DbType:="NVarChar(50)")>  _
	Public Property CodiceAgendaCup() As String
		Get
			Return Me._CodiceAgendaCup
		End Get
		Set
			If (String.Equals(Me._CodiceAgendaCup, value) = false) Then
				Me._CodiceAgendaCup = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DescrizioneAgendaCup", DbType:="VarChar(200)")>  _
	Public Property DescrizioneAgendaCup() As String
		Get
			Return Me._DescrizioneAgendaCup
		End Get
		Set
			If (String.Equals(Me._DescrizioneAgendaCup, value) = false) Then
				Me._DescrizioneAgendaCup = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TranscodificaCodiceAgendaCup", DbType:="VarChar(16)")>  _
	Public Property TranscodificaCodiceAgendaCup() As String
		Get
			Return Me._TranscodificaCodiceAgendaCup
		End Get
		Set
			If (String.Equals(Me._TranscodificaCodiceAgendaCup, value) = false) Then
				Me._TranscodificaCodiceAgendaCup = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="admin.DiffProvenienzeCup")>  _
Partial Public Class DiffProvenienzeCup
	
	Private _CodiceProvenienzaCup As String
	
	Private _DescrizioneProvenienzaErogante As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CodiceProvenienzaCup", DbType:="NVarChar(5)")>  _
	Public Property CodiceProvenienzaCup() As String
		Get
			Return Me._CodiceProvenienzaCup
		End Get
		Set
			If (String.Equals(Me._CodiceProvenienzaCup, value) = false) Then
				Me._CodiceProvenienzaCup = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DescrizioneProvenienzaErogante", DbType:="VarChar(200)")>  _
	Public Property DescrizioneProvenienzaErogante() As String
		Get
			Return Me._DescrizioneProvenienzaErogante
		End Get
		Set
			If (String.Equals(Me._DescrizioneProvenienzaErogante, value) = false) Then
				Me._DescrizioneProvenienzaErogante = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="admin.DiffPrestazioniCup")>  _
Partial Public Class DiffPrestazioniCup
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _StrutturaErogante As String
	
	Private _CodiceAgendaCup As String
	
	Private _IdPrestazioneErogante As String
	
	Private _IdPrestazioneCup As String
	
	Private _SpecialitaEsameCup As String
	
	Private _Descrizione As String
	
	Private _StruttureEroganti As EntityRef(Of ocup_StruttureEroganti)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnStrutturaEroganteChanging(value As String)
    End Sub
    Partial Private Sub OnStrutturaEroganteChanged()
    End Sub
    Partial Private Sub OnCodiceAgendaCupChanging(value As String)
    End Sub
    Partial Private Sub OnCodiceAgendaCupChanged()
    End Sub
    Partial Private Sub OnIdPrestazioneEroganteChanging(value As String)
    End Sub
    Partial Private Sub OnIdPrestazioneEroganteChanged()
    End Sub
    Partial Private Sub OnIdPrestazioneCupChanging(value As String)
    End Sub
    Partial Private Sub OnIdPrestazioneCupChanged()
    End Sub
    Partial Private Sub OnSpecialitaEsameCupChanging(value As String)
    End Sub
    Partial Private Sub OnSpecialitaEsameCupChanged()
    End Sub
    Partial Private Sub OnDescrizioneChanging(value As String)
    End Sub
    Partial Private Sub OnDescrizioneChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._StruttureEroganti = CType(Nothing, EntityRef(Of ocup_StruttureEroganti))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StrutturaErogante", DbType:="VarChar(16) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property StrutturaErogante() As String
		Get
			Return Me._StrutturaErogante
		End Get
		Set
			If (String.Equals(Me._StrutturaErogante, value) = false) Then
				If Me._StruttureEroganti.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnStrutturaEroganteChanging(value)
				Me.SendPropertyChanging
				Me._StrutturaErogante = value
				Me.SendPropertyChanged("StrutturaErogante")
				Me.OnStrutturaEroganteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CodiceAgendaCup", DbType:="NVarChar(50)", CanBeNull:=false)>  _
	Public Property CodiceAgendaCup() As String
		Get
			Return Me._CodiceAgendaCup
		End Get
		Set
			If (String.Equals(Me._CodiceAgendaCup, value) = false) Then
				Me.OnCodiceAgendaCupChanging(value)
				Me.SendPropertyChanging
				Me._CodiceAgendaCup = value
				Me.SendPropertyChanged("CodiceAgendaCup")
				Me.OnCodiceAgendaCupChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdPrestazioneErogante", DbType:="NVarChar(32)", IsPrimaryKey:=true)>  _
	Public Property IdPrestazioneErogante() As String
		Get
			Return Me._IdPrestazioneErogante
		End Get
		Set
			If (String.Equals(Me._IdPrestazioneErogante, value) = false) Then
				Me.OnIdPrestazioneEroganteChanging(value)
				Me.SendPropertyChanging
				Me._IdPrestazioneErogante = value
				Me.SendPropertyChanged("IdPrestazioneErogante")
				Me.OnIdPrestazioneEroganteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdPrestazioneCup", DbType:="NVarChar(32)")>  _
	Public Property IdPrestazioneCup() As String
		Get
			Return Me._IdPrestazioneCup
		End Get
		Set
			If (String.Equals(Me._IdPrestazioneCup, value) = false) Then
				Me.OnIdPrestazioneCupChanging(value)
				Me.SendPropertyChanging
				Me._IdPrestazioneCup = value
				Me.SendPropertyChanged("IdPrestazioneCup")
				Me.OnIdPrestazioneCupChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SpecialitaEsameCup", DbType:="NVarChar(5) NOT NULL", CanBeNull:=false)>  _
	Public Property SpecialitaEsameCup() As String
		Get
			Return Me._SpecialitaEsameCup
		End Get
		Set
			If (String.Equals(Me._SpecialitaEsameCup, value) = false) Then
				Me.OnSpecialitaEsameCupChanging(value)
				Me.SendPropertyChanging
				Me._SpecialitaEsameCup = value
				Me.SendPropertyChanged("SpecialitaEsameCup")
				Me.OnSpecialitaEsameCupChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Descrizione", DbType:="NVarChar(100) NOT NULL", CanBeNull:=false)>  _
	Public Property Descrizione() As String
		Get
			Return Me._Descrizione
		End Get
		Set
			If (String.Equals(Me._Descrizione, value) = false) Then
				Me.OnDescrizioneChanging(value)
				Me.SendPropertyChanging
				Me._Descrizione = value
				Me.SendPropertyChanged("Descrizione")
				Me.OnDescrizioneChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="ocup_StruttureEroganti_DiffPrestazioniCup", Storage:="_StruttureEroganti", ThisKey:="StrutturaErogante", OtherKey:="Codice", IsForeignKey:=true)>  _
	Public Property ocup_StruttureEroganti() As ocup_StruttureEroganti
		Get
			Return Me._StruttureEroganti.Entity
		End Get
		Set
			Dim previousValue As ocup_StruttureEroganti = Me._StruttureEroganti.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._StruttureEroganti.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._StruttureEroganti.Entity = Nothing
					previousValue.DiffPrestazioniCups.Remove(Me)
				End If
				Me._StruttureEroganti.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.DiffPrestazioniCups.Add(Me)
					Me._StrutturaErogante = value.Codice
				Else
					Me._StrutturaErogante = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("ocup_StruttureEroganti")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.TipiContrattoErogante")>  _
Partial Public Class TipiContrattoErogante
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Codice As String
	
	Private _TranscodificaTipoContrattoCupErogantes As EntitySet(Of TranscodificaTipoContrattoCupErogante)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCodiceChanging(value As String)
    End Sub
    Partial Private Sub OnCodiceChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._TranscodificaTipoContrattoCupErogantes = New EntitySet(Of TranscodificaTipoContrattoCupErogante)(AddressOf Me.attach_TranscodificaTipoContrattoCupErogantes, AddressOf Me.detach_TranscodificaTipoContrattoCupErogantes)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Codice", DbType:="VarChar(16) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property Codice() As String
		Get
			Return Me._Codice
		End Get
		Set
			If (String.Equals(Me._Codice, value) = false) Then
				Me.OnCodiceChanging(value)
				Me.SendPropertyChanging
				Me._Codice = value
				Me.SendPropertyChanged("Codice")
				Me.OnCodiceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="TipiContrattoErogante_TranscodificaTipoContrattoCupErogante", Storage:="_TranscodificaTipoContrattoCupErogantes", ThisKey:="Codice", OtherKey:="CodiceTipoContrattoErogante")>  _
	Public Property TranscodificaTipoContrattoCupErogantes() As EntitySet(Of TranscodificaTipoContrattoCupErogante)
		Get
			Return Me._TranscodificaTipoContrattoCupErogantes
		End Get
		Set
			Me._TranscodificaTipoContrattoCupErogantes.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_TranscodificaTipoContrattoCupErogantes(ByVal entity As TranscodificaTipoContrattoCupErogante)
		Me.SendPropertyChanging
		entity.TipiContrattoErogante = Me
	End Sub
	
	Private Sub detach_TranscodificaTipoContrattoCupErogantes(ByVal entity As TranscodificaTipoContrattoCupErogante)
		Me.SendPropertyChanging
		entity.TipiContrattoErogante = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.RegimiOe")>  _
Partial Public Class RegimiOe
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Codice As String
	
	Private _Descrizione As String
	
	Private _TranscodificaTipoContrattoCupRegimeOrderEntries As EntitySet(Of TranscodificaTipoContrattoCupRegimeOrderEntry)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCodiceChanging(value As String)
    End Sub
    Partial Private Sub OnCodiceChanged()
    End Sub
    Partial Private Sub OnDescrizioneChanging(value As String)
    End Sub
    Partial Private Sub OnDescrizioneChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._TranscodificaTipoContrattoCupRegimeOrderEntries = New EntitySet(Of TranscodificaTipoContrattoCupRegimeOrderEntry)(AddressOf Me.attach_TranscodificaTipoContrattoCupRegimeOrderEntries, AddressOf Me.detach_TranscodificaTipoContrattoCupRegimeOrderEntries)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Codice", DbType:="VarChar(16) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property Codice() As String
		Get
			Return Me._Codice
		End Get
		Set
			If (String.Equals(Me._Codice, value) = false) Then
				Me.OnCodiceChanging(value)
				Me.SendPropertyChanging
				Me._Codice = value
				Me.SendPropertyChanged("Codice")
				Me.OnCodiceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Descrizione", DbType:="VarChar(100) NOT NULL", CanBeNull:=false)>  _
	Public Property Descrizione() As String
		Get
			Return Me._Descrizione
		End Get
		Set
			If (String.Equals(Me._Descrizione, value) = false) Then
				Me.OnDescrizioneChanging(value)
				Me.SendPropertyChanging
				Me._Descrizione = value
				Me.SendPropertyChanged("Descrizione")
				Me.OnDescrizioneChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="RegimiOe_TranscodificaTipoContrattoCupRegimeOrderEntry", Storage:="_TranscodificaTipoContrattoCupRegimeOrderEntries", ThisKey:="Codice", OtherKey:="CodiceRegimeOe")>  _
	Public Property TranscodificaTipoContrattoCupRegimeOrderEntries() As EntitySet(Of TranscodificaTipoContrattoCupRegimeOrderEntry)
		Get
			Return Me._TranscodificaTipoContrattoCupRegimeOrderEntries
		End Get
		Set
			Me._TranscodificaTipoContrattoCupRegimeOrderEntries.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_TranscodificaTipoContrattoCupRegimeOrderEntries(ByVal entity As TranscodificaTipoContrattoCupRegimeOrderEntry)
		Me.SendPropertyChanging
		entity.RegimiOe = Me
	End Sub
	
	Private Sub detach_TranscodificaTipoContrattoCupRegimeOrderEntries(ByVal entity As TranscodificaTipoContrattoCupRegimeOrderEntry)
		Me.SendPropertyChanging
		entity.RegimiOe = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.AttributiNomi")>  _
Partial Public Class AttributiNomi
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Nome As String
	
	Private _TranscodificaAttributiPrestazioniCupErogantes As EntitySet(Of TranscodificaAttributiPrestazioniCupErogante)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnNomeChanging(value As String)
    End Sub
    Partial Private Sub OnNomeChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._TranscodificaAttributiPrestazioniCupErogantes = New EntitySet(Of TranscodificaAttributiPrestazioniCupErogante)(AddressOf Me.attach_TranscodificaAttributiPrestazioniCupErogantes, AddressOf Me.detach_TranscodificaAttributiPrestazioniCupErogantes)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Nome", DbType:="VarChar(64) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property Nome() As String
		Get
			Return Me._Nome
		End Get
		Set
			If (String.Equals(Me._Nome, value) = false) Then
				Me.OnNomeChanging(value)
				Me.SendPropertyChanging
				Me._Nome = value
				Me.SendPropertyChanged("Nome")
				Me.OnNomeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="AttributiNomi_TranscodificaAttributiPrestazioniCupErogante", Storage:="_TranscodificaAttributiPrestazioniCupErogantes", ThisKey:="Nome", OtherKey:="Nome")>  _
	Public Property TranscodificaAttributiPrestazioniCupErogantes() As EntitySet(Of TranscodificaAttributiPrestazioniCupErogante)
		Get
			Return Me._TranscodificaAttributiPrestazioniCupErogantes
		End Get
		Set
			Me._TranscodificaAttributiPrestazioniCupErogantes.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_TranscodificaAttributiPrestazioniCupErogantes(ByVal entity As TranscodificaAttributiPrestazioniCupErogante)
		Me.SendPropertyChanging
		entity.AttributiNomi = Me
	End Sub
	
	Private Sub detach_TranscodificaAttributiPrestazioniCupErogantes(ByVal entity As TranscodificaAttributiPrestazioniCupErogante)
		Me.SendPropertyChanging
		entity.AttributiNomi = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.SistemiEroganti")>  _
Partial Public Class ocup_SistemiEroganti
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _CodiceAzienda As String
	
	Private _CodiceSistema As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCodiceAziendaChanging(value As String)
    End Sub
    Partial Private Sub OnCodiceAziendaChanged()
    End Sub
    Partial Private Sub OnCodiceSistemaChanging(value As String)
    End Sub
    Partial Private Sub OnCodiceSistemaChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CodiceAzienda", DbType:="VarChar(16) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property CodiceAzienda() As String
		Get
			Return Me._CodiceAzienda
		End Get
		Set
			If (String.Equals(Me._CodiceAzienda, value) = false) Then
				Me.OnCodiceAziendaChanging(value)
				Me.SendPropertyChanging
				Me._CodiceAzienda = value
				Me.SendPropertyChanged("CodiceAzienda")
				Me.OnCodiceAziendaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CodiceSistema", DbType:="VarChar(100) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property CodiceSistema() As String
		Get
			Return Me._CodiceSistema
		End Get
		Set
			If (String.Equals(Me._CodiceSistema, value) = false) Then
				Me.OnCodiceSistemaChanging(value)
				Me.SendPropertyChanging
				Me._CodiceSistema = value
				Me.SendPropertyChanged("CodiceSistema")
				Me.OnCodiceSistemaChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="admin.Enum_CodiciSistemiEroganti")>  _
Partial Public Class Enum_CodiciSistemiEroganti
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _CodiceSistema As String
	
	Private _TranscodificaAgendaCupStrutturaErogantes As EntitySet(Of TranscodificaAgendaCupStrutturaErogante)
	
	Private _TranscodificaAttributiPrestazioniCupErogantes As EntitySet(Of TranscodificaAttributiPrestazioniCupErogante)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCodiceSistemaChanging(value As String)
    End Sub
    Partial Private Sub OnCodiceSistemaChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._TranscodificaAgendaCupStrutturaErogantes = New EntitySet(Of TranscodificaAgendaCupStrutturaErogante)(AddressOf Me.attach_TranscodificaAgendaCupStrutturaErogantes, AddressOf Me.detach_TranscodificaAgendaCupStrutturaErogantes)
		Me._TranscodificaAttributiPrestazioniCupErogantes = New EntitySet(Of TranscodificaAttributiPrestazioniCupErogante)(AddressOf Me.attach_TranscodificaAttributiPrestazioniCupErogantes, AddressOf Me.detach_TranscodificaAttributiPrestazioniCupErogantes)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CodiceSistema", DbType:="VarChar(100) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property CodiceSistema() As String
		Get
			Return Me._CodiceSistema
		End Get
		Set
			If (String.Equals(Me._CodiceSistema, value) = false) Then
				Me.OnCodiceSistemaChanging(value)
				Me.SendPropertyChanging
				Me._CodiceSistema = value
				Me.SendPropertyChanged("CodiceSistema")
				Me.OnCodiceSistemaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Enum_CodiciSistemiEroganti_TranscodificaAgendaCupStrutturaErogante", Storage:="_TranscodificaAgendaCupStrutturaErogantes", ThisKey:="CodiceSistema", OtherKey:="CodiceSistemaErogante")>  _
	Public Property TranscodificaAgendaCupStrutturaErogantes() As EntitySet(Of TranscodificaAgendaCupStrutturaErogante)
		Get
			Return Me._TranscodificaAgendaCupStrutturaErogantes
		End Get
		Set
			Me._TranscodificaAgendaCupStrutturaErogantes.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Enum_CodiciSistemiEroganti_TranscodificaAttributiPrestazioniCupErogante", Storage:="_TranscodificaAttributiPrestazioniCupErogantes", ThisKey:="CodiceSistema", OtherKey:="CodiceSistemaErogante")>  _
	Public Property TranscodificaAttributiPrestazioniCupErogantes() As EntitySet(Of TranscodificaAttributiPrestazioniCupErogante)
		Get
			Return Me._TranscodificaAttributiPrestazioniCupErogantes
		End Get
		Set
			Me._TranscodificaAttributiPrestazioniCupErogantes.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_TranscodificaAgendaCupStrutturaErogantes(ByVal entity As TranscodificaAgendaCupStrutturaErogante)
		Me.SendPropertyChanging
		entity.Enum_CodiciSistemiEroganti = Me
	End Sub
	
	Private Sub detach_TranscodificaAgendaCupStrutturaErogantes(ByVal entity As TranscodificaAgendaCupStrutturaErogante)
		Me.SendPropertyChanging
		entity.Enum_CodiciSistemiEroganti = Nothing
	End Sub
	
	Private Sub attach_TranscodificaAttributiPrestazioniCupErogantes(ByVal entity As TranscodificaAttributiPrestazioniCupErogante)
		Me.SendPropertyChanging
		entity.Enum_CodiciSistemiEroganti = Me
	End Sub
	
	Private Sub detach_TranscodificaAttributiPrestazioniCupErogantes(ByVal entity As TranscodificaAttributiPrestazioniCupErogante)
		Me.SendPropertyChanging
		entity.Enum_CodiciSistemiEroganti = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="admin.Enum_CodiciAziendeEroganti")>  _
Partial Public Class Enum_CodiciAziendeEroganti
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _CodiceAzienda As String
	
	Private _TranscodificaAgendaCupStrutturaErogantes As EntitySet(Of TranscodificaAgendaCupStrutturaErogante)
	
	Private _TranscodificaAttributiPrestazioniCupErogantes As EntitySet(Of TranscodificaAttributiPrestazioniCupErogante)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCodiceAziendaChanging(value As String)
    End Sub
    Partial Private Sub OnCodiceAziendaChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._TranscodificaAgendaCupStrutturaErogantes = New EntitySet(Of TranscodificaAgendaCupStrutturaErogante)(AddressOf Me.attach_TranscodificaAgendaCupStrutturaErogantes, AddressOf Me.detach_TranscodificaAgendaCupStrutturaErogantes)
		Me._TranscodificaAttributiPrestazioniCupErogantes = New EntitySet(Of TranscodificaAttributiPrestazioniCupErogante)(AddressOf Me.attach_TranscodificaAttributiPrestazioniCupErogantes, AddressOf Me.detach_TranscodificaAttributiPrestazioniCupErogantes)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CodiceAzienda", DbType:="VarChar(16) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property CodiceAzienda() As String
		Get
			Return Me._CodiceAzienda
		End Get
		Set
			If (String.Equals(Me._CodiceAzienda, value) = false) Then
				Me.OnCodiceAziendaChanging(value)
				Me.SendPropertyChanging
				Me._CodiceAzienda = value
				Me.SendPropertyChanged("CodiceAzienda")
				Me.OnCodiceAziendaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Enum_CodiciAziendeEroganti_TranscodificaAgendaCupStrutturaErogante", Storage:="_TranscodificaAgendaCupStrutturaErogantes", ThisKey:="CodiceAzienda", OtherKey:="CodiceAziendaErogante")>  _
	Public Property TranscodificaAgendaCupStrutturaErogantes() As EntitySet(Of TranscodificaAgendaCupStrutturaErogante)
		Get
			Return Me._TranscodificaAgendaCupStrutturaErogantes
		End Get
		Set
			Me._TranscodificaAgendaCupStrutturaErogantes.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Enum_CodiciAziendeEroganti_TranscodificaAttributiPrestazioniCupErogante", Storage:="_TranscodificaAttributiPrestazioniCupErogantes", ThisKey:="CodiceAzienda", OtherKey:="CodiceAziendaErogante")>  _
	Public Property TranscodificaAttributiPrestazioniCupErogantes() As EntitySet(Of TranscodificaAttributiPrestazioniCupErogante)
		Get
			Return Me._TranscodificaAttributiPrestazioniCupErogantes
		End Get
		Set
			Me._TranscodificaAttributiPrestazioniCupErogantes.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_TranscodificaAgendaCupStrutturaErogantes(ByVal entity As TranscodificaAgendaCupStrutturaErogante)
		Me.SendPropertyChanging
		entity.Enum_CodiciAziendeEroganti = Me
	End Sub
	
	Private Sub detach_TranscodificaAgendaCupStrutturaErogantes(ByVal entity As TranscodificaAgendaCupStrutturaErogante)
		Me.SendPropertyChanging
		entity.Enum_CodiciAziendeEroganti = Nothing
	End Sub
	
	Private Sub attach_TranscodificaAttributiPrestazioniCupErogantes(ByVal entity As TranscodificaAttributiPrestazioniCupErogante)
		Me.SendPropertyChanging
		entity.Enum_CodiciAziendeEroganti = Me
	End Sub
	
	Private Sub detach_TranscodificaAttributiPrestazioniCupErogantes(ByVal entity As TranscodificaAttributiPrestazioniCupErogante)
		Me.SendPropertyChanging
		entity.Enum_CodiciAziendeEroganti = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.TipiContrattoCup")>  _
Partial Public Class TipiContrattoCup
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Codice As String
	
	Private _TranscodificaTipoContrattoCupErogantes As EntitySet(Of TranscodificaTipoContrattoCupErogante)
	
	Private _TranscodificaTipoContrattoCupRegimeOrderEntries As EntitySet(Of TranscodificaTipoContrattoCupRegimeOrderEntry)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCodiceChanging(value As String)
    End Sub
    Partial Private Sub OnCodiceChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._TranscodificaTipoContrattoCupErogantes = New EntitySet(Of TranscodificaTipoContrattoCupErogante)(AddressOf Me.attach_TranscodificaTipoContrattoCupErogantes, AddressOf Me.detach_TranscodificaTipoContrattoCupErogantes)
		Me._TranscodificaTipoContrattoCupRegimeOrderEntries = New EntitySet(Of TranscodificaTipoContrattoCupRegimeOrderEntry)(AddressOf Me.attach_TranscodificaTipoContrattoCupRegimeOrderEntries, AddressOf Me.detach_TranscodificaTipoContrattoCupRegimeOrderEntries)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Codice", DbType:="VarChar(16) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property Codice() As String
		Get
			Return Me._Codice
		End Get
		Set
			If (String.Equals(Me._Codice, value) = false) Then
				Me.OnCodiceChanging(value)
				Me.SendPropertyChanging
				Me._Codice = value
				Me.SendPropertyChanged("Codice")
				Me.OnCodiceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="TipiContrattoCup_TranscodificaTipoContrattoCupErogante", Storage:="_TranscodificaTipoContrattoCupErogantes", ThisKey:="Codice", OtherKey:="CodiceTipoContrattoCup")>  _
	Public Property TranscodificaTipoContrattoCupErogantes() As EntitySet(Of TranscodificaTipoContrattoCupErogante)
		Get
			Return Me._TranscodificaTipoContrattoCupErogantes
		End Get
		Set
			Me._TranscodificaTipoContrattoCupErogantes.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="TipiContrattoCup_TranscodificaTipoContrattoCupRegimeOrderEntry", Storage:="_TranscodificaTipoContrattoCupRegimeOrderEntries", ThisKey:="Codice", OtherKey:="CodiceTipoContrattoCup")>  _
	Public Property TranscodificaTipoContrattoCupRegimeOrderEntries() As EntitySet(Of TranscodificaTipoContrattoCupRegimeOrderEntry)
		Get
			Return Me._TranscodificaTipoContrattoCupRegimeOrderEntries
		End Get
		Set
			Me._TranscodificaTipoContrattoCupRegimeOrderEntries.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_TranscodificaTipoContrattoCupErogantes(ByVal entity As TranscodificaTipoContrattoCupErogante)
		Me.SendPropertyChanging
		entity.TipiContrattoCup = Me
	End Sub
	
	Private Sub detach_TranscodificaTipoContrattoCupErogantes(ByVal entity As TranscodificaTipoContrattoCupErogante)
		Me.SendPropertyChanging
		entity.TipiContrattoCup = Nothing
	End Sub
	
	Private Sub attach_TranscodificaTipoContrattoCupRegimeOrderEntries(ByVal entity As TranscodificaTipoContrattoCupRegimeOrderEntry)
		Me.SendPropertyChanging
		entity.TipiContrattoCup = Me
	End Sub
	
	Private Sub detach_TranscodificaTipoContrattoCupRegimeOrderEntries(ByVal entity As TranscodificaTipoContrattoCupRegimeOrderEntry)
		Me.SendPropertyChanging
		entity.TipiContrattoCup = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.TranscodificaTipoContrattoCupRegimeOrderEntry")>  _
Partial Public Class TranscodificaTipoContrattoCupRegimeOrderEntry
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _CodiceTipoContrattoCup As String
	
	Private _CodiceRegimeOe As String
	
	Private _DescrizioneRegimeOe As String
	
	Private _RegimiOe As EntityRef(Of RegimiOe)
	
	Private _TipiContrattoCup As EntityRef(Of TipiContrattoCup)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCodiceTipoContrattoCupChanging(value As String)
    End Sub
    Partial Private Sub OnCodiceTipoContrattoCupChanged()
    End Sub
    Partial Private Sub OnCodiceRegimeOeChanging(value As String)
    End Sub
    Partial Private Sub OnCodiceRegimeOeChanged()
    End Sub
    Partial Private Sub OnDescrizioneRegimeOeChanging(value As String)
    End Sub
    Partial Private Sub OnDescrizioneRegimeOeChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._RegimiOe = CType(Nothing, EntityRef(Of RegimiOe))
		Me._TipiContrattoCup = CType(Nothing, EntityRef(Of TipiContrattoCup))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CodiceTipoContrattoCup", DbType:="VarChar(16) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property CodiceTipoContrattoCup() As String
		Get
			Return Me._CodiceTipoContrattoCup
		End Get
		Set
			If (String.Equals(Me._CodiceTipoContrattoCup, value) = false) Then
				If Me._TipiContrattoCup.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnCodiceTipoContrattoCupChanging(value)
				Me.SendPropertyChanging
				Me._CodiceTipoContrattoCup = value
				Me.SendPropertyChanged("CodiceTipoContrattoCup")
				Me.OnCodiceTipoContrattoCupChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CodiceRegimeOe", DbType:="VarChar(16) NOT NULL", CanBeNull:=false)>  _
	Public Property CodiceRegimeOe() As String
		Get
			Return Me._CodiceRegimeOe
		End Get
		Set
			If (String.Equals(Me._CodiceRegimeOe, value) = false) Then
				If Me._RegimiOe.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnCodiceRegimeOeChanging(value)
				Me.SendPropertyChanging
				Me._CodiceRegimeOe = value
				Me.SendPropertyChanged("CodiceRegimeOe")
				Me.OnCodiceRegimeOeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DescrizioneRegimeOe", DbType:="VarChar(100) NOT NULL", CanBeNull:=false)>  _
	Public Property DescrizioneRegimeOe() As String
		Get
			Return Me._DescrizioneRegimeOe
		End Get
		Set
			If (String.Equals(Me._DescrizioneRegimeOe, value) = false) Then
				Me.OnDescrizioneRegimeOeChanging(value)
				Me.SendPropertyChanging
				Me._DescrizioneRegimeOe = value
				Me.SendPropertyChanged("DescrizioneRegimeOe")
				Me.OnDescrizioneRegimeOeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="RegimiOe_TranscodificaTipoContrattoCupRegimeOrderEntry", Storage:="_RegimiOe", ThisKey:="CodiceRegimeOe", OtherKey:="Codice", IsForeignKey:=true)>  _
	Public Property RegimiOe() As RegimiOe
		Get
			Return Me._RegimiOe.Entity
		End Get
		Set
			Dim previousValue As RegimiOe = Me._RegimiOe.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._RegimiOe.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._RegimiOe.Entity = Nothing
					previousValue.TranscodificaTipoContrattoCupRegimeOrderEntries.Remove(Me)
				End If
				Me._RegimiOe.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.TranscodificaTipoContrattoCupRegimeOrderEntries.Add(Me)
					Me._CodiceRegimeOe = value.Codice
				Else
					Me._CodiceRegimeOe = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("RegimiOe")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="TipiContrattoCup_TranscodificaTipoContrattoCupRegimeOrderEntry", Storage:="_TipiContrattoCup", ThisKey:="CodiceTipoContrattoCup", OtherKey:="Codice", IsForeignKey:=true)>  _
	Public Property TipiContrattoCup() As TipiContrattoCup
		Get
			Return Me._TipiContrattoCup.Entity
		End Get
		Set
			Dim previousValue As TipiContrattoCup = Me._TipiContrattoCup.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._TipiContrattoCup.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._TipiContrattoCup.Entity = Nothing
					previousValue.TranscodificaTipoContrattoCupRegimeOrderEntries.Remove(Me)
				End If
				Me._TipiContrattoCup.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.TranscodificaTipoContrattoCupRegimeOrderEntries.Add(Me)
					Me._CodiceTipoContrattoCup = value.Codice
				Else
					Me._CodiceTipoContrattoCup = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("TipiContrattoCup")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="admin.DiffAgendeEsistentiPrestazioniMancanti")>  _
Partial Public Class DiffAgendeEsistentiPrestazioniMancanti
	
	Private _CodiceAgendaCup As String
	
	Private _DescrizioneAgendaCup As String
	
	Private _TranscodificaCodiceAgendaCup As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CodiceAgendaCup", DbType:="VarChar(16) NOT NULL", CanBeNull:=false)>  _
	Public Property CodiceAgendaCup() As String
		Get
			Return Me._CodiceAgendaCup
		End Get
		Set
			If (String.Equals(Me._CodiceAgendaCup, value) = false) Then
				Me._CodiceAgendaCup = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DescrizioneAgendaCup", DbType:="VarChar(200) NOT NULL", CanBeNull:=false)>  _
	Public Property DescrizioneAgendaCup() As String
		Get
			Return Me._DescrizioneAgendaCup
		End Get
		Set
			If (String.Equals(Me._DescrizioneAgendaCup, value) = false) Then
				Me._DescrizioneAgendaCup = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TranscodificaCodiceAgendaCup", DbType:="VarChar(16)")>  _
	Public Property TranscodificaCodiceAgendaCup() As String
		Get
			Return Me._TranscodificaCodiceAgendaCup
		End Get
		Set
			If (String.Equals(Me._TranscodificaCodiceAgendaCup, value) = false) Then
				Me._TranscodificaCodiceAgendaCup = value
			End If
		End Set
	End Property
End Class
