'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("UtentiDataSet"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class UtentiDataSet
    Inherits Global.System.Data.DataSet
    
    Private tableFevsTracciaAccessiAggiungi As FevsTracciaAccessiAggiungiDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("FevsTracciaAccessiAggiungi")) Is Nothing) Then
                MyBase.Tables.Add(New FevsTracciaAccessiAggiungiDataTable(ds.Tables("FevsTracciaAccessiAggiungi")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property FevsTracciaAccessiAggiungi() As FevsTracciaAccessiAggiungiDataTable
        Get
            Return Me.tableFevsTracciaAccessiAggiungi
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As UtentiDataSet = CType(MyBase.Clone,UtentiDataSet)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("FevsTracciaAccessiAggiungi")) Is Nothing) Then
                MyBase.Tables.Add(New FevsTracciaAccessiAggiungiDataTable(ds.Tables("FevsTracciaAccessiAggiungi")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableFevsTracciaAccessiAggiungi = CType(MyBase.Tables("FevsTracciaAccessiAggiungi"),FevsTracciaAccessiAggiungiDataTable)
        If (initTable = true) Then
            If (Not (Me.tableFevsTracciaAccessiAggiungi) Is Nothing) Then
                Me.tableFevsTracciaAccessiAggiungi.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "UtentiDataSet"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/UtentiDataSet.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableFevsTracciaAccessiAggiungi = New FevsTracciaAccessiAggiungiDataTable()
        MyBase.Tables.Add(Me.tableFevsTracciaAccessiAggiungi)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeFevsTracciaAccessiAggiungi() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As UtentiDataSet = New UtentiDataSet()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub FevsTracciaAccessiAggiungiRowChangeEventHandler(ByVal sender As Object, ByVal e As FevsTracciaAccessiAggiungiRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class FevsTracciaAccessiAggiungiDataTable
        Inherits Global.System.Data.TypedTableBase(Of FevsTracciaAccessiAggiungiRow)
        
        Private columnId As Global.System.Data.DataColumn
        
        Private columnNomeRichiedente As Global.System.Data.DataColumn
        
        Private columnUtenteRichiedente As Global.System.Data.DataColumn
        
        Private columnIdUtenteRichiedente As Global.System.Data.DataColumn
        
        Private columnIdPazienti As Global.System.Data.DataColumn
        
        Private columnIdReferti As Global.System.Data.DataColumn
        
        Private columnOperazione As Global.System.Data.DataColumn
        
        Private columnNomeHostRichiedente As Global.System.Data.DataColumn
        
        Private columnIndirizzoIPHostRichiedente As Global.System.Data.DataColumn
        
        Private columnIdRicoveri As Global.System.Data.DataColumn
        
        Private columnIdEventi As Global.System.Data.DataColumn
        
        Private columnIdEsterno As Global.System.Data.DataColumn
        
        Private columnRuoloUtenteCodice As Global.System.Data.DataColumn
        
        Private columnRuoloUtenteDescrizione As Global.System.Data.DataColumn
        
        Private columnMotivoAccesso As Global.System.Data.DataColumn
        
        Private columnNote As Global.System.Data.DataColumn
        
        Private columnNumeroRecord As Global.System.Data.DataColumn
        
        Private columnConsensoPaziente As Global.System.Data.DataColumn
        
        Private columnIdNotaAnamnestica As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "FevsTracciaAccessiAggiungi"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property NomeRichiedenteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNomeRichiedente
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property UtenteRichiedenteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUtenteRichiedente
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IdUtenteRichiedenteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIdUtenteRichiedente
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IdPazientiColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIdPazienti
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IdRefertiColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIdReferti
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property OperazioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOperazione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property NomeHostRichiedenteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNomeHostRichiedente
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IndirizzoIPHostRichiedenteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIndirizzoIPHostRichiedente
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IdRicoveriColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIdRicoveri
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IdEventiColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIdEventi
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IdEsternoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIdEsterno
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property RuoloUtenteCodiceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRuoloUtenteCodice
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property RuoloUtenteDescrizioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRuoloUtenteDescrizione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property MotivoAccessoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMotivoAccesso
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property NoteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNote
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property NumeroRecordColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNumeroRecord
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ConsensoPazienteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnConsensoPaziente
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IdNotaAnamnesticaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIdNotaAnamnestica
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As FevsTracciaAccessiAggiungiRow
            Get
                Return CType(Me.Rows(index),FevsTracciaAccessiAggiungiRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event FevsTracciaAccessiAggiungiRowChanging As FevsTracciaAccessiAggiungiRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event FevsTracciaAccessiAggiungiRowChanged As FevsTracciaAccessiAggiungiRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event FevsTracciaAccessiAggiungiRowDeleting As FevsTracciaAccessiAggiungiRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event FevsTracciaAccessiAggiungiRowDeleted As FevsTracciaAccessiAggiungiRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddFevsTracciaAccessiAggiungiRow(ByVal row As FevsTracciaAccessiAggiungiRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddFevsTracciaAccessiAggiungiRow( _
                    ByVal Id As System.Guid,  _
                    ByVal NomeRichiedente As String,  _
                    ByVal UtenteRichiedente As String,  _
                    ByVal IdUtenteRichiedente As System.Guid,  _
                    ByVal IdPazienti As System.Guid,  _
                    ByVal IdReferti As System.Guid,  _
                    ByVal Operazione As String,  _
                    ByVal NomeHostRichiedente As String,  _
                    ByVal IndirizzoIPHostRichiedente As String,  _
                    ByVal IdRicoveri As System.Guid,  _
                    ByVal IdEventi As System.Guid,  _
                    ByVal IdEsterno As String,  _
                    ByVal RuoloUtenteCodice As String,  _
                    ByVal RuoloUtenteDescrizione As String,  _
                    ByVal MotivoAccesso As String,  _
                    ByVal Note As String,  _
                    ByVal NumeroRecord As Integer,  _
                    ByVal ConsensoPaziente As String,  _
                    ByVal IdNotaAnamnestica As System.Guid) As FevsTracciaAccessiAggiungiRow
            Dim rowFevsTracciaAccessiAggiungiRow As FevsTracciaAccessiAggiungiRow = CType(Me.NewRow,FevsTracciaAccessiAggiungiRow)
            Dim columnValuesArray() As Object = New Object() {Id, NomeRichiedente, UtenteRichiedente, IdUtenteRichiedente, IdPazienti, IdReferti, Operazione, NomeHostRichiedente, IndirizzoIPHostRichiedente, IdRicoveri, IdEventi, IdEsterno, RuoloUtenteCodice, RuoloUtenteDescrizione, MotivoAccesso, Note, NumeroRecord, ConsensoPaziente, IdNotaAnamnestica}
            rowFevsTracciaAccessiAggiungiRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowFevsTracciaAccessiAggiungiRow)
            Return rowFevsTracciaAccessiAggiungiRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function FindById(ByVal Id As System.Guid) As FevsTracciaAccessiAggiungiRow
            Return CType(Me.Rows.Find(New Object() {Id}),FevsTracciaAccessiAggiungiRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As FevsTracciaAccessiAggiungiDataTable = CType(MyBase.Clone,FevsTracciaAccessiAggiungiDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New FevsTracciaAccessiAggiungiDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnId = MyBase.Columns("Id")
            Me.columnNomeRichiedente = MyBase.Columns("NomeRichiedente")
            Me.columnUtenteRichiedente = MyBase.Columns("UtenteRichiedente")
            Me.columnIdUtenteRichiedente = MyBase.Columns("IdUtenteRichiedente")
            Me.columnIdPazienti = MyBase.Columns("IdPazienti")
            Me.columnIdReferti = MyBase.Columns("IdReferti")
            Me.columnOperazione = MyBase.Columns("Operazione")
            Me.columnNomeHostRichiedente = MyBase.Columns("NomeHostRichiedente")
            Me.columnIndirizzoIPHostRichiedente = MyBase.Columns("IndirizzoIPHostRichiedente")
            Me.columnIdRicoveri = MyBase.Columns("IdRicoveri")
            Me.columnIdEventi = MyBase.Columns("IdEventi")
            Me.columnIdEsterno = MyBase.Columns("IdEsterno")
            Me.columnRuoloUtenteCodice = MyBase.Columns("RuoloUtenteCodice")
            Me.columnRuoloUtenteDescrizione = MyBase.Columns("RuoloUtenteDescrizione")
            Me.columnMotivoAccesso = MyBase.Columns("MotivoAccesso")
            Me.columnNote = MyBase.Columns("Note")
            Me.columnNumeroRecord = MyBase.Columns("NumeroRecord")
            Me.columnConsensoPaziente = MyBase.Columns("ConsensoPaziente")
            Me.columnIdNotaAnamnestica = MyBase.Columns("IdNotaAnamnestica")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnId = New Global.System.Data.DataColumn("Id", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnId)
            Me.columnNomeRichiedente = New Global.System.Data.DataColumn("NomeRichiedente", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNomeRichiedente)
            Me.columnUtenteRichiedente = New Global.System.Data.DataColumn("UtenteRichiedente", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUtenteRichiedente)
            Me.columnIdUtenteRichiedente = New Global.System.Data.DataColumn("IdUtenteRichiedente", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIdUtenteRichiedente)
            Me.columnIdPazienti = New Global.System.Data.DataColumn("IdPazienti", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIdPazienti)
            Me.columnIdReferti = New Global.System.Data.DataColumn("IdReferti", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIdReferti)
            Me.columnOperazione = New Global.System.Data.DataColumn("Operazione", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOperazione)
            Me.columnNomeHostRichiedente = New Global.System.Data.DataColumn("NomeHostRichiedente", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNomeHostRichiedente)
            Me.columnIndirizzoIPHostRichiedente = New Global.System.Data.DataColumn("IndirizzoIPHostRichiedente", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIndirizzoIPHostRichiedente)
            Me.columnIdRicoveri = New Global.System.Data.DataColumn("IdRicoveri", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIdRicoveri)
            Me.columnIdEventi = New Global.System.Data.DataColumn("IdEventi", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIdEventi)
            Me.columnIdEsterno = New Global.System.Data.DataColumn("IdEsterno", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIdEsterno)
            Me.columnRuoloUtenteCodice = New Global.System.Data.DataColumn("RuoloUtenteCodice", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRuoloUtenteCodice)
            Me.columnRuoloUtenteDescrizione = New Global.System.Data.DataColumn("RuoloUtenteDescrizione", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRuoloUtenteDescrizione)
            Me.columnMotivoAccesso = New Global.System.Data.DataColumn("MotivoAccesso", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMotivoAccesso)
            Me.columnNote = New Global.System.Data.DataColumn("Note", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNote)
            Me.columnNumeroRecord = New Global.System.Data.DataColumn("NumeroRecord", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNumeroRecord)
            Me.columnConsensoPaziente = New Global.System.Data.DataColumn("ConsensoPaziente", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnConsensoPaziente)
            Me.columnIdNotaAnamnestica = New Global.System.Data.DataColumn("IdNotaAnamnestica", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIdNotaAnamnestica)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnId}, true))
            Me.columnId.AllowDBNull = false
            Me.columnId.Unique = true
            Me.columnNomeRichiedente.MaxLength = 100
            Me.columnUtenteRichiedente.MaxLength = 100
            Me.columnIdPazienti.AllowDBNull = false
            Me.columnOperazione.MaxLength = 200
            Me.columnNomeHostRichiedente.MaxLength = 50
            Me.columnIndirizzoIPHostRichiedente.MaxLength = 50
            Me.columnIdEsterno.MaxLength = 64
            Me.columnRuoloUtenteCodice.MaxLength = 16
            Me.columnRuoloUtenteDescrizione.MaxLength = 128
            Me.columnMotivoAccesso.MaxLength = 128
            Me.columnNote.MaxLength = 254
            Me.columnConsensoPaziente.MaxLength = 64
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewFevsTracciaAccessiAggiungiRow() As FevsTracciaAccessiAggiungiRow
            Return CType(Me.NewRow,FevsTracciaAccessiAggiungiRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New FevsTracciaAccessiAggiungiRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(FevsTracciaAccessiAggiungiRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.FevsTracciaAccessiAggiungiRowChangedEvent) Is Nothing) Then
                RaiseEvent FevsTracciaAccessiAggiungiRowChanged(Me, New FevsTracciaAccessiAggiungiRowChangeEvent(CType(e.Row,FevsTracciaAccessiAggiungiRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.FevsTracciaAccessiAggiungiRowChangingEvent) Is Nothing) Then
                RaiseEvent FevsTracciaAccessiAggiungiRowChanging(Me, New FevsTracciaAccessiAggiungiRowChangeEvent(CType(e.Row,FevsTracciaAccessiAggiungiRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.FevsTracciaAccessiAggiungiRowDeletedEvent) Is Nothing) Then
                RaiseEvent FevsTracciaAccessiAggiungiRowDeleted(Me, New FevsTracciaAccessiAggiungiRowChangeEvent(CType(e.Row,FevsTracciaAccessiAggiungiRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.FevsTracciaAccessiAggiungiRowDeletingEvent) Is Nothing) Then
                RaiseEvent FevsTracciaAccessiAggiungiRowDeleting(Me, New FevsTracciaAccessiAggiungiRowChangeEvent(CType(e.Row,FevsTracciaAccessiAggiungiRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveFevsTracciaAccessiAggiungiRow(ByVal row As FevsTracciaAccessiAggiungiRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As UtentiDataSet = New UtentiDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "FevsTracciaAccessiAggiungiDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class FevsTracciaAccessiAggiungiRow
        Inherits Global.System.Data.DataRow
        
        Private tableFevsTracciaAccessiAggiungi As FevsTracciaAccessiAggiungiDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableFevsTracciaAccessiAggiungi = CType(Me.Table,FevsTracciaAccessiAggiungiDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Id() As System.Guid
            Get
                Return CType(Me(Me.tableFevsTracciaAccessiAggiungi.IdColumn),Global.System.Guid)
            End Get
            Set
                Me(Me.tableFevsTracciaAccessiAggiungi.IdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property NomeRichiedente() As String
            Get
                Try 
                    Return CType(Me(Me.tableFevsTracciaAccessiAggiungi.NomeRichiedenteColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NomeRichiedente' in table 'FevsTracciaAccessiAggiungi' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFevsTracciaAccessiAggiungi.NomeRichiedenteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property UtenteRichiedente() As String
            Get
                Try 
                    Return CType(Me(Me.tableFevsTracciaAccessiAggiungi.UtenteRichiedenteColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UtenteRichiedente' in table 'FevsTracciaAccessiAggiungi' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFevsTracciaAccessiAggiungi.UtenteRichiedenteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IdUtenteRichiedente() As System.Guid
            Get
                Try 
                    Return CType(Me(Me.tableFevsTracciaAccessiAggiungi.IdUtenteRichiedenteColumn),Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IdUtenteRichiedente' in table 'FevsTracciaAccessiAggiungi' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFevsTracciaAccessiAggiungi.IdUtenteRichiedenteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IdPazienti() As System.Guid
            Get
                Return CType(Me(Me.tableFevsTracciaAccessiAggiungi.IdPazientiColumn),Global.System.Guid)
            End Get
            Set
                Me(Me.tableFevsTracciaAccessiAggiungi.IdPazientiColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IdReferti() As System.Guid
            Get
                Try 
                    Return CType(Me(Me.tableFevsTracciaAccessiAggiungi.IdRefertiColumn),Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IdReferti' in table 'FevsTracciaAccessiAggiungi' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableFevsTracciaAccessiAggiungi.IdRefertiColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Operazione() As String
            Get
                Try 
                    Return CType(Me(Me.tableFevsTracciaAccessiAggiungi.OperazioneColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Operazione' in table 'FevsTracciaAccessiAggiungi' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableFevsTracciaAccessiAggiungi.OperazioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property NomeHostRichiedente() As String
            Get
                Try 
                    Return CType(Me(Me.tableFevsTracciaAccessiAggiungi.NomeHostRichiedenteColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NomeHostRichiedente' in table 'FevsTracciaAccessiAggiungi' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFevsTracciaAccessiAggiungi.NomeHostRichiedenteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IndirizzoIPHostRichiedente() As String
            Get
                Try 
                    Return CType(Me(Me.tableFevsTracciaAccessiAggiungi.IndirizzoIPHostRichiedenteColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IndirizzoIPHostRichiedente' in table 'FevsTracciaAccessiAgg"& _ 
                            "iungi' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFevsTracciaAccessiAggiungi.IndirizzoIPHostRichiedenteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IdRicoveri() As System.Guid
            Get
                Try 
                    Return CType(Me(Me.tableFevsTracciaAccessiAggiungi.IdRicoveriColumn),Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IdRicoveri' in table 'FevsTracciaAccessiAggiungi' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableFevsTracciaAccessiAggiungi.IdRicoveriColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IdEventi() As System.Guid
            Get
                Try 
                    Return CType(Me(Me.tableFevsTracciaAccessiAggiungi.IdEventiColumn),Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IdEventi' in table 'FevsTracciaAccessiAggiungi' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFevsTracciaAccessiAggiungi.IdEventiColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IdEsterno() As String
            Get
                Try 
                    Return CType(Me(Me.tableFevsTracciaAccessiAggiungi.IdEsternoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IdEsterno' in table 'FevsTracciaAccessiAggiungi' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableFevsTracciaAccessiAggiungi.IdEsternoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property RuoloUtenteCodice() As String
            Get
                Try 
                    Return CType(Me(Me.tableFevsTracciaAccessiAggiungi.RuoloUtenteCodiceColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RuoloUtenteCodice' in table 'FevsTracciaAccessiAggiungi' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFevsTracciaAccessiAggiungi.RuoloUtenteCodiceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property RuoloUtenteDescrizione() As String
            Get
                Try 
                    Return CType(Me(Me.tableFevsTracciaAccessiAggiungi.RuoloUtenteDescrizioneColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RuoloUtenteDescrizione' in table 'FevsTracciaAccessiAggiung"& _ 
                            "i' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFevsTracciaAccessiAggiungi.RuoloUtenteDescrizioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property MotivoAccesso() As String
            Get
                Try 
                    Return CType(Me(Me.tableFevsTracciaAccessiAggiungi.MotivoAccessoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MotivoAccesso' in table 'FevsTracciaAccessiAggiungi' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFevsTracciaAccessiAggiungi.MotivoAccessoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Note() As String
            Get
                Try 
                    Return CType(Me(Me.tableFevsTracciaAccessiAggiungi.NoteColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Note' in table 'FevsTracciaAccessiAggiungi' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFevsTracciaAccessiAggiungi.NoteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property NumeroRecord() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableFevsTracciaAccessiAggiungi.NumeroRecordColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NumeroRecord' in table 'FevsTracciaAccessiAggiungi' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableFevsTracciaAccessiAggiungi.NumeroRecordColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ConsensoPaziente() As String
            Get
                Try 
                    Return CType(Me(Me.tableFevsTracciaAccessiAggiungi.ConsensoPazienteColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ConsensoPaziente' in table 'FevsTracciaAccessiAggiungi' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFevsTracciaAccessiAggiungi.ConsensoPazienteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IdNotaAnamnestica() As System.Guid
            Get
                Try 
                    Return CType(Me(Me.tableFevsTracciaAccessiAggiungi.IdNotaAnamnesticaColumn),Global.System.Guid)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IdNotaAnamnestica' in table 'FevsTracciaAccessiAggiungi' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFevsTracciaAccessiAggiungi.IdNotaAnamnesticaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsNomeRichiedenteNull() As Boolean
            Return Me.IsNull(Me.tableFevsTracciaAccessiAggiungi.NomeRichiedenteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetNomeRichiedenteNull()
            Me(Me.tableFevsTracciaAccessiAggiungi.NomeRichiedenteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsUtenteRichiedenteNull() As Boolean
            Return Me.IsNull(Me.tableFevsTracciaAccessiAggiungi.UtenteRichiedenteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetUtenteRichiedenteNull()
            Me(Me.tableFevsTracciaAccessiAggiungi.UtenteRichiedenteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsIdUtenteRichiedenteNull() As Boolean
            Return Me.IsNull(Me.tableFevsTracciaAccessiAggiungi.IdUtenteRichiedenteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetIdUtenteRichiedenteNull()
            Me(Me.tableFevsTracciaAccessiAggiungi.IdUtenteRichiedenteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsIdRefertiNull() As Boolean
            Return Me.IsNull(Me.tableFevsTracciaAccessiAggiungi.IdRefertiColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetIdRefertiNull()
            Me(Me.tableFevsTracciaAccessiAggiungi.IdRefertiColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsOperazioneNull() As Boolean
            Return Me.IsNull(Me.tableFevsTracciaAccessiAggiungi.OperazioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetOperazioneNull()
            Me(Me.tableFevsTracciaAccessiAggiungi.OperazioneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsNomeHostRichiedenteNull() As Boolean
            Return Me.IsNull(Me.tableFevsTracciaAccessiAggiungi.NomeHostRichiedenteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetNomeHostRichiedenteNull()
            Me(Me.tableFevsTracciaAccessiAggiungi.NomeHostRichiedenteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsIndirizzoIPHostRichiedenteNull() As Boolean
            Return Me.IsNull(Me.tableFevsTracciaAccessiAggiungi.IndirizzoIPHostRichiedenteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetIndirizzoIPHostRichiedenteNull()
            Me(Me.tableFevsTracciaAccessiAggiungi.IndirizzoIPHostRichiedenteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsIdRicoveriNull() As Boolean
            Return Me.IsNull(Me.tableFevsTracciaAccessiAggiungi.IdRicoveriColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetIdRicoveriNull()
            Me(Me.tableFevsTracciaAccessiAggiungi.IdRicoveriColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsIdEventiNull() As Boolean
            Return Me.IsNull(Me.tableFevsTracciaAccessiAggiungi.IdEventiColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetIdEventiNull()
            Me(Me.tableFevsTracciaAccessiAggiungi.IdEventiColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsIdEsternoNull() As Boolean
            Return Me.IsNull(Me.tableFevsTracciaAccessiAggiungi.IdEsternoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetIdEsternoNull()
            Me(Me.tableFevsTracciaAccessiAggiungi.IdEsternoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsRuoloUtenteCodiceNull() As Boolean
            Return Me.IsNull(Me.tableFevsTracciaAccessiAggiungi.RuoloUtenteCodiceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetRuoloUtenteCodiceNull()
            Me(Me.tableFevsTracciaAccessiAggiungi.RuoloUtenteCodiceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsRuoloUtenteDescrizioneNull() As Boolean
            Return Me.IsNull(Me.tableFevsTracciaAccessiAggiungi.RuoloUtenteDescrizioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetRuoloUtenteDescrizioneNull()
            Me(Me.tableFevsTracciaAccessiAggiungi.RuoloUtenteDescrizioneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsMotivoAccessoNull() As Boolean
            Return Me.IsNull(Me.tableFevsTracciaAccessiAggiungi.MotivoAccessoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetMotivoAccessoNull()
            Me(Me.tableFevsTracciaAccessiAggiungi.MotivoAccessoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsNoteNull() As Boolean
            Return Me.IsNull(Me.tableFevsTracciaAccessiAggiungi.NoteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetNoteNull()
            Me(Me.tableFevsTracciaAccessiAggiungi.NoteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsNumeroRecordNull() As Boolean
            Return Me.IsNull(Me.tableFevsTracciaAccessiAggiungi.NumeroRecordColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetNumeroRecordNull()
            Me(Me.tableFevsTracciaAccessiAggiungi.NumeroRecordColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsConsensoPazienteNull() As Boolean
            Return Me.IsNull(Me.tableFevsTracciaAccessiAggiungi.ConsensoPazienteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetConsensoPazienteNull()
            Me(Me.tableFevsTracciaAccessiAggiungi.ConsensoPazienteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsIdNotaAnamnesticaNull() As Boolean
            Return Me.IsNull(Me.tableFevsTracciaAccessiAggiungi.IdNotaAnamnesticaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetIdNotaAnamnesticaNull()
            Me(Me.tableFevsTracciaAccessiAggiungi.IdNotaAnamnesticaColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class FevsTracciaAccessiAggiungiRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As FevsTracciaAccessiAggiungiRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As FevsTracciaAccessiAggiungiRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As FevsTracciaAccessiAggiungiRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace UtentiDataSetTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class FevsTracciaAccessiAggiungiTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "FevsTracciaAccessiAggiungi"
            tableMapping.ColumnMappings.Add("Id", "Id")
            tableMapping.ColumnMappings.Add("NomeRichiedente", "NomeRichiedente")
            tableMapping.ColumnMappings.Add("UtenteRichiedente", "UtenteRichiedente")
            tableMapping.ColumnMappings.Add("IdUtenteRichiedente", "IdUtenteRichiedente")
            tableMapping.ColumnMappings.Add("IdPazienti", "IdPazienti")
            tableMapping.ColumnMappings.Add("IdReferti", "IdReferti")
            tableMapping.ColumnMappings.Add("Operazione", "Operazione")
            tableMapping.ColumnMappings.Add("NomeHostRichiedente", "NomeHostRichiedente")
            tableMapping.ColumnMappings.Add("IndirizzoIPHostRichiedente", "IndirizzoIPHostRichiedente")
            tableMapping.ColumnMappings.Add("IdRicoveri", "IdRicoveri")
            tableMapping.ColumnMappings.Add("IdEventi", "IdEventi")
            tableMapping.ColumnMappings.Add("IdEsterno", "IdEsterno")
            tableMapping.ColumnMappings.Add("RuoloUtenteCodice", "RuoloUtenteCodice")
            tableMapping.ColumnMappings.Add("RuoloUtenteDescrizione", "RuoloUtenteDescrizione")
            tableMapping.ColumnMappings.Add("MotivoAccesso", "MotivoAccesso")
            tableMapping.ColumnMappings.Add("Note", "Note")
            tableMapping.ColumnMappings.Add("NumeroRecord", "NumeroRecord")
            tableMapping.ColumnMappings.Add("ConsensoPaziente", "ConsensoPaziente")
            tableMapping.ColumnMappings.Add("IdNotaAnamnestica", "IdNotaAnamnestica")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.DwhClinico.Data.My.MySettings.Default.AuslAsmnRe_DwhClinicoConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "frontend.TracciaAccessiAggiungi"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdUtente", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DomainName", Global.System.Data.SqlDbType.VarChar, 32, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AccountName", Global.System.Data.SqlDbType.VarChar, 64, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Cognome", Global.System.Data.SqlDbType.VarChar, 64, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Nome", Global.System.Data.SqlDbType.VarChar, 64, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NomeHost", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IpHost", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Operazione", Global.System.Data.SqlDbType.VarChar, 200, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdPazienti", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdReferti", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdRicoveri", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdEventi", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RuoloUtenteCodice", Global.System.Data.SqlDbType.VarChar, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RuoloUtenteDescrizione", Global.System.Data.SqlDbType.VarChar, 128, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MotivoAccesso", Global.System.Data.SqlDbType.VarChar, 128, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Note", Global.System.Data.SqlDbType.VarChar, 254, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NumeroRecord", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ConsensoPaziente", Global.System.Data.SqlDbType.VarChar, 64, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdNotaAnamnestica", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill( _
                    ByVal dataTable As UtentiDataSet.FevsTracciaAccessiAggiungiDataTable,  _
                    ByVal IdUtente As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal DomainName As String,  _
                    ByVal AccountName As String,  _
                    ByVal Cognome As String,  _
                    ByVal Nome As String,  _
                    ByVal NomeHost As String,  _
                    ByVal IpHost As String,  _
                    ByVal Operazione As String,  _
                    ByVal IdPazienti As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal IdReferti As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal IdRicoveri As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal IdEventi As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal RuoloUtenteCodice As String,  _
                    ByVal RuoloUtenteDescrizione As String,  _
                    ByVal MotivoAccesso As String,  _
                    ByVal Note As String,  _
                    ByVal NumeroRecord As Global.System.Nullable(Of Integer),  _
                    ByVal ConsensoPaziente As String,  _
                    ByVal IdNotaAnamnestica As Global.System.Nullable(Of Global.System.Guid)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (IdUtente.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(IdUtente.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (DomainName Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(DomainName,String)
            End If
            If (AccountName Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(AccountName,String)
            End If
            If (Cognome Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(Cognome,String)
            End If
            If (Nome Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(Nome,String)
            End If
            If (NomeHost Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(6).Value = CType(NomeHost,String)
            End If
            If (IpHost Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(7).Value = CType(IpHost,String)
            End If
            If (Operazione Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(8).Value = CType(Operazione,String)
            End If
            If (IdPazienti.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(9).Value = CType(IdPazienti.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (IdReferti.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(10).Value = CType(IdReferti.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (IdRicoveri.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(11).Value = CType(IdRicoveri.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (IdEventi.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(12).Value = CType(IdEventi.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (RuoloUtenteCodice Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(13).Value = CType(RuoloUtenteCodice,String)
            End If
            If (RuoloUtenteDescrizione Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(14).Value = CType(RuoloUtenteDescrizione,String)
            End If
            If (MotivoAccesso Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(15).Value = CType(MotivoAccesso,String)
            End If
            If (Note Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(16).Value = CType(Note,String)
            End If
            If (NumeroRecord.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(17).Value = CType(NumeroRecord.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (ConsensoPaziente Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(18).Value = CType(ConsensoPaziente,String)
            End If
            If (IdNotaAnamnestica.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(19).Value = CType(IdNotaAnamnestica.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData( _
                    ByVal IdUtente As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal DomainName As String,  _
                    ByVal AccountName As String,  _
                    ByVal Cognome As String,  _
                    ByVal Nome As String,  _
                    ByVal NomeHost As String,  _
                    ByVal IpHost As String,  _
                    ByVal Operazione As String,  _
                    ByVal IdPazienti As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal IdReferti As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal IdRicoveri As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal IdEventi As Global.System.Nullable(Of Global.System.Guid),  _
                    ByVal RuoloUtenteCodice As String,  _
                    ByVal RuoloUtenteDescrizione As String,  _
                    ByVal MotivoAccesso As String,  _
                    ByVal Note As String,  _
                    ByVal NumeroRecord As Global.System.Nullable(Of Integer),  _
                    ByVal ConsensoPaziente As String,  _
                    ByVal IdNotaAnamnestica As Global.System.Nullable(Of Global.System.Guid)) As UtentiDataSet.FevsTracciaAccessiAggiungiDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (IdUtente.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(IdUtente.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (DomainName Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(DomainName,String)
            End If
            If (AccountName Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(AccountName,String)
            End If
            If (Cognome Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(Cognome,String)
            End If
            If (Nome Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(Nome,String)
            End If
            If (NomeHost Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(6).Value = CType(NomeHost,String)
            End If
            If (IpHost Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(7).Value = CType(IpHost,String)
            End If
            If (Operazione Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(8).Value = CType(Operazione,String)
            End If
            If (IdPazienti.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(9).Value = CType(IdPazienti.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (IdReferti.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(10).Value = CType(IdReferti.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (IdRicoveri.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(11).Value = CType(IdRicoveri.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (IdEventi.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(12).Value = CType(IdEventi.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (RuoloUtenteCodice Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(13).Value = CType(RuoloUtenteCodice,String)
            End If
            If (RuoloUtenteDescrizione Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(14).Value = CType(RuoloUtenteDescrizione,String)
            End If
            If (MotivoAccesso Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(15).Value = CType(MotivoAccesso,String)
            End If
            If (Note Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(16).Value = CType(Note,String)
            End If
            If (NumeroRecord.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(17).Value = CType(NumeroRecord.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (ConsensoPaziente Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(18).Value = CType(ConsensoPaziente,String)
            End If
            If (IdNotaAnamnestica.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(19).Value = CType(IdNotaAnamnestica.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As UtentiDataSet.FevsTracciaAccessiAggiungiDataTable = New UtentiDataSet.FevsTracciaAccessiAggiungiDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
End Namespace
