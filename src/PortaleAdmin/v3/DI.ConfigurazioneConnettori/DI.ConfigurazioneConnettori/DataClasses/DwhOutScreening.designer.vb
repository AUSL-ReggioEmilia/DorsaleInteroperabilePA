'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="Asmn_DwhOut_Screening")>  _
Partial Public Class DwhOutScreeningDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertFiltriMammografia(instance As FiltriMammografia)
    End Sub
  Partial Private Sub UpdateFiltriMammografia(instance As FiltriMammografia)
    End Sub
  Partial Private Sub DeleteFiltriMammografia(instance As FiltriMammografia)
    End Sub
  Partial Private Sub InsertFiltriMammografiaAziendeEroganti(instance As FiltriMammografiaAziendeEroganti)
    End Sub
  Partial Private Sub UpdateFiltriMammografiaAziendeEroganti(instance As FiltriMammografiaAziendeEroganti)
    End Sub
  Partial Private Sub DeleteFiltriMammografiaAziendeEroganti(instance As FiltriMammografiaAziendeEroganti)
    End Sub
  Partial Private Sub InsertFiltriMammografiaSistemiEroganti(instance As FiltriMammografiaSistemiEroganti)
    End Sub
  Partial Private Sub UpdateFiltriMammografiaSistemiEroganti(instance As FiltriMammografiaSistemiEroganti)
    End Sub
  Partial Private Sub DeleteFiltriMammografiaSistemiEroganti(instance As FiltriMammografiaSistemiEroganti)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.System.Configuration.ConfigurationManager.ConnectionStrings("Asmn_DwhOut_ScreeningConnectionString").ConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property FiltriMammografia() As System.Data.Linq.Table(Of FiltriMammografia)
		Get
			Return Me.GetTable(Of FiltriMammografia)
		End Get
	End Property
	
	Public ReadOnly Property FiltriMammografiaAziendeEroganti() As System.Data.Linq.Table(Of FiltriMammografiaAziendeEroganti)
		Get
			Return Me.GetTable(Of FiltriMammografiaAziendeEroganti)
		End Get
	End Property
	
	Public ReadOnly Property FiltriMammografiaSistemiEroganti() As System.Data.Linq.Table(Of FiltriMammografiaSistemiEroganti)
		Get
			Return Me.GetTable(Of FiltriMammografiaSistemiEroganti)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.FiltriMammografia")>  _
Partial Public Class FiltriMammografia
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _AziendaErogante As String
	
	Private _SistemaErogante As String
	
	Private _PrestazioneCodice As String
	
	Private _FiltriMammografiaAziendeEroganti As EntityRef(Of FiltriMammografiaAziendeEroganti)
	
	Private _FiltriMammografiaSistemiEroganti As EntityRef(Of FiltriMammografiaSistemiEroganti)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnAziendaEroganteChanging(value As String)
    End Sub
    Partial Private Sub OnAziendaEroganteChanged()
    End Sub
    Partial Private Sub OnSistemaEroganteChanging(value As String)
    End Sub
    Partial Private Sub OnSistemaEroganteChanged()
    End Sub
    Partial Private Sub OnPrestazioneCodiceChanging(value As String)
    End Sub
    Partial Private Sub OnPrestazioneCodiceChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._FiltriMammografiaAziendeEroganti = CType(Nothing, EntityRef(Of FiltriMammografiaAziendeEroganti))
		Me._FiltriMammografiaSistemiEroganti = CType(Nothing, EntityRef(Of FiltriMammografiaSistemiEroganti))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AziendaErogante", DbType:="VarChar(16) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property AziendaErogante() As String
		Get
			Return Me._AziendaErogante
		End Get
		Set
			If (String.Equals(Me._AziendaErogante, value) = false) Then
				If Me._FiltriMammografiaAziendeEroganti.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnAziendaEroganteChanging(value)
				Me.SendPropertyChanging
				Me._AziendaErogante = value
				Me.SendPropertyChanged("AziendaErogante")
				Me.OnAziendaEroganteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SistemaErogante", DbType:="VarChar(16) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property SistemaErogante() As String
		Get
			Return Me._SistemaErogante
		End Get
		Set
			If (String.Equals(Me._SistemaErogante, value) = false) Then
				If Me._FiltriMammografiaSistemiEroganti.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnSistemaEroganteChanging(value)
				Me.SendPropertyChanging
				Me._SistemaErogante = value
				Me.SendPropertyChanged("SistemaErogante")
				Me.OnSistemaEroganteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PrestazioneCodice", DbType:="VarChar(12) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property PrestazioneCodice() As String
		Get
			Return Me._PrestazioneCodice
		End Get
		Set
			If (String.Equals(Me._PrestazioneCodice, value) = false) Then
				Me.OnPrestazioneCodiceChanging(value)
				Me.SendPropertyChanging
				Me._PrestazioneCodice = value
				Me.SendPropertyChanged("PrestazioneCodice")
				Me.OnPrestazioneCodiceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="FiltriMammografiaAziendaErogante_FiltriMammografia", Storage:="_FiltriMammografiaAziendeEroganti", ThisKey:="AziendaErogante", OtherKey:="AziendaErogante", IsForeignKey:=true)>  _
	Public Property FiltriMammografiaAziendeEroganti() As FiltriMammografiaAziendeEroganti
		Get
			Return Me._FiltriMammografiaAziendeEroganti.Entity
		End Get
		Set
			Dim previousValue As FiltriMammografiaAziendeEroganti = Me._FiltriMammografiaAziendeEroganti.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._FiltriMammografiaAziendeEroganti.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._FiltriMammografiaAziendeEroganti.Entity = Nothing
					previousValue.FiltriMammografia.Remove(Me)
				End If
				Me._FiltriMammografiaAziendeEroganti.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.FiltriMammografia.Add(Me)
					Me._AziendaErogante = value.AziendaErogante
				Else
					Me._AziendaErogante = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("FiltriMammografiaAziendeEroganti")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="FiltriMammografiaSistemiErogante_FiltriMammografia", Storage:="_FiltriMammografiaSistemiEroganti", ThisKey:="SistemaErogante", OtherKey:="SistemaErogante", IsForeignKey:=true)>  _
	Public Property FiltriMammografiaSistemiEroganti() As FiltriMammografiaSistemiEroganti
		Get
			Return Me._FiltriMammografiaSistemiEroganti.Entity
		End Get
		Set
			Dim previousValue As FiltriMammografiaSistemiEroganti = Me._FiltriMammografiaSistemiEroganti.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._FiltriMammografiaSistemiEroganti.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._FiltriMammografiaSistemiEroganti.Entity = Nothing
					previousValue.FiltriMammografia = Nothing
				End If
				Me._FiltriMammografiaSistemiEroganti.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.FiltriMammografia = Me
					Me._SistemaErogante = value.SistemaErogante
				Else
					Me._SistemaErogante = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("FiltriMammografiaSistemiEroganti")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="admin.FiltriMammografiaAziendeEroganti")>  _
Partial Public Class FiltriMammografiaAziendeEroganti
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _AziendaErogante As String
	
	Private _FiltriMammografia As EntitySet(Of FiltriMammografia)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnAziendaEroganteChanging(value As String)
    End Sub
    Partial Private Sub OnAziendaEroganteChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._FiltriMammografia = New EntitySet(Of FiltriMammografia)(AddressOf Me.attach_FiltriMammografia, AddressOf Me.detach_FiltriMammografia)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AziendaErogante", DbType:="VarChar(16) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property AziendaErogante() As String
		Get
			Return Me._AziendaErogante
		End Get
		Set
			If (String.Equals(Me._AziendaErogante, value) = false) Then
				Me.OnAziendaEroganteChanging(value)
				Me.SendPropertyChanging
				Me._AziendaErogante = value
				Me.SendPropertyChanged("AziendaErogante")
				Me.OnAziendaEroganteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="FiltriMammografiaAziendaErogante_FiltriMammografia", Storage:="_FiltriMammografia", ThisKey:="AziendaErogante", OtherKey:="AziendaErogante")>  _
	Public Property FiltriMammografia() As EntitySet(Of FiltriMammografia)
		Get
			Return Me._FiltriMammografia
		End Get
		Set
			Me._FiltriMammografia.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_FiltriMammografia(ByVal entity As FiltriMammografia)
		Me.SendPropertyChanging
		entity.FiltriMammografiaAziendeEroganti = Me
	End Sub
	
	Private Sub detach_FiltriMammografia(ByVal entity As FiltriMammografia)
		Me.SendPropertyChanging
		entity.FiltriMammografiaAziendeEroganti = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="admin.FiltriMammografiaSistemiEroganti")>  _
Partial Public Class FiltriMammografiaSistemiEroganti
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _SistemaErogante As String
	
	Private _FiltriMammografia As EntityRef(Of FiltriMammografia)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnSistemaEroganteChanging(value As String)
    End Sub
    Partial Private Sub OnSistemaEroganteChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._FiltriMammografia = CType(Nothing, EntityRef(Of FiltriMammografia))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SistemaErogante", DbType:="VarChar(16) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property SistemaErogante() As String
		Get
			Return Me._SistemaErogante
		End Get
		Set
			If (String.Equals(Me._SistemaErogante, value) = false) Then
				Me.OnSistemaEroganteChanging(value)
				Me.SendPropertyChanging
				Me._SistemaErogante = value
				Me.SendPropertyChanged("SistemaErogante")
				Me.OnSistemaEroganteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="FiltriMammografiaSistemiErogante_FiltriMammografia", Storage:="_FiltriMammografia", ThisKey:="SistemaErogante", OtherKey:="SistemaErogante", IsUnique:=true, IsForeignKey:=false)>  _
	Public Property FiltriMammografia() As FiltriMammografia
		Get
			Return Me._FiltriMammografia.Entity
		End Get
		Set
			Dim previousValue As FiltriMammografia = Me._FiltriMammografia.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._FiltriMammografia.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._FiltriMammografia.Entity = Nothing
					previousValue.FiltriMammografiaSistemiEroganti = Nothing
				End If
				Me._FiltriMammografia.Entity = value
				If (Object.Equals(value, Nothing) = false) Then
					value.FiltriMammografiaSistemiEroganti = Me
				End If
				Me.SendPropertyChanged("FiltriMammografia")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
