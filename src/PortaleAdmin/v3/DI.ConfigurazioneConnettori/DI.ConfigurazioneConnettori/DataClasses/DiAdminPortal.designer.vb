'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="AuslAsmnRe_DiAdminPortal")>
Partial Public Class DiAdminPortalDataContext
	Inherits System.Data.Linq.DataContext

	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()

#Region "Extensibility Method Definitions"
	Partial Private Sub OnCreated()
	End Sub
	Partial Private Sub InsertConfigurazioneConnettoriRuoli(instance As ConfigurazioneConnettoriRuoli)
	End Sub
	Partial Private Sub UpdateConfigurazioneConnettoriRuoli(instance As ConfigurazioneConnettoriRuoli)
	End Sub
	Partial Private Sub DeleteConfigurazioneConnettoriRuoli(instance As ConfigurazioneConnettoriRuoli)
	End Sub
#End Region

	Public Sub New()
		MyBase.New(Global.System.Configuration.ConfigurationManager.ConnectionStrings("AuslAsmnRe_PortalAdminConnectionString").ConnectionString, mappingSource)
		OnCreated()
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property ConfigurazioneConnettoriRuolis() As System.Data.Linq.Table(Of ConfigurazioneConnettoriRuoli)
		Get
			Return Me.GetTable(Of ConfigurazioneConnettoriRuoli)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ConfigurazioneConnettoriRuoli")>  _
Partial Public Class ConfigurazioneConnettoriRuoli
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Ruolo As String
	
	Private _Claims As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnRuoloChanging(value As String)
    End Sub
    Partial Private Sub OnRuoloChanged()
    End Sub
    Partial Private Sub OnClaimsChanging(value As String)
    End Sub
    Partial Private Sub OnClaimsChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Ruolo", DbType:="VarChar(64) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property Ruolo() As String
		Get
			Return Me._Ruolo
		End Get
		Set
			If (String.Equals(Me._Ruolo, value) = false) Then
				Me.OnRuoloChanging(value)
				Me.SendPropertyChanging
				Me._Ruolo = value
				Me.SendPropertyChanged("Ruolo")
				Me.OnRuoloChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Claims", DbType:="VarChar(1024) NOT NULL", CanBeNull:=false)>  _
	Public Property Claims() As String
		Get
			Return Me._Claims
		End Get
		Set
			If (String.Equals(Me._Claims, value) = false) Then
				Me.OnClaimsChanging(value)
				Me.SendPropertyChanging
				Me._Claims = value
				Me.SendPropertyChanged("Claims")
				Me.OnClaimsChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
