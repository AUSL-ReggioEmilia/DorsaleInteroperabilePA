'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="AuslAsmnRe_OeConnAnthema")>  _
Partial Public Class OeConnAnthemaDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertTranscodificaAttributiPrestazioniMetaforaAnthema(instance As TranscodificaAttributiPrestazioniMetaforaAnthema)
    End Sub
  Partial Private Sub UpdateTranscodificaAttributiPrestazioniMetaforaAnthema(instance As TranscodificaAttributiPrestazioniMetaforaAnthema)
    End Sub
  Partial Private Sub DeleteTranscodificaAttributiPrestazioniMetaforaAnthema(instance As TranscodificaAttributiPrestazioniMetaforaAnthema)
    End Sub
  Partial Private Sub InsertTranscodificaAttributiPrestazioniAnthemaMetafora(instance As TranscodificaAttributiPrestazioniAnthemaMetafora)
    End Sub
  Partial Private Sub UpdateTranscodificaAttributiPrestazioniAnthemaMetafora(instance As TranscodificaAttributiPrestazioniAnthemaMetafora)
    End Sub
  Partial Private Sub DeleteTranscodificaAttributiPrestazioniAnthemaMetafora(instance As TranscodificaAttributiPrestazioniAnthemaMetafora)
    End Sub
  Partial Private Sub InsertOeConnAnthema_CentriRichiedenti(instance As OeConnAnthema_CentriRichiedenti)
    End Sub
  Partial Private Sub UpdateOeConnAnthema_CentriRichiedenti(instance As OeConnAnthema_CentriRichiedenti)
    End Sub
  Partial Private Sub DeleteOeConnAnthema_CentriRichiedenti(instance As OeConnAnthema_CentriRichiedenti)
    End Sub
  Partial Private Sub InsertTranscodificaAttributiPrestazioniMetaforaAnthemaStrutturaErogante(instance As TranscodificaAttributiPrestazioniMetaforaAnthemaStrutturaErogante)
    End Sub
  Partial Private Sub UpdateTranscodificaAttributiPrestazioniMetaforaAnthemaStrutturaErogante(instance As TranscodificaAttributiPrestazioniMetaforaAnthemaStrutturaErogante)
    End Sub
  Partial Private Sub DeleteTranscodificaAttributiPrestazioniMetaforaAnthemaStrutturaErogante(instance As TranscodificaAttributiPrestazioniMetaforaAnthemaStrutturaErogante)
    End Sub
  Partial Private Sub InsertTranscodificaAttributiPrestazioniMetaforaAnthemaNomi(instance As TranscodificaAttributiPrestazioniMetaforaAnthemaNomi)
    End Sub
  Partial Private Sub UpdateTranscodificaAttributiPrestazioniMetaforaAnthemaNomi(instance As TranscodificaAttributiPrestazioniMetaforaAnthemaNomi)
    End Sub
  Partial Private Sub DeleteTranscodificaAttributiPrestazioniMetaforaAnthemaNomi(instance As TranscodificaAttributiPrestazioniMetaforaAnthemaNomi)
    End Sub
  Partial Private Sub InsertTranscodificaAttributiPrestazioniAnthemaMetaforaStruttureEroganti(instance As TranscodificaAttributiPrestazioniAnthemaMetaforaStruttureEroganti)
    End Sub
  Partial Private Sub UpdateTranscodificaAttributiPrestazioniAnthemaMetaforaStruttureEroganti(instance As TranscodificaAttributiPrestazioniAnthemaMetaforaStruttureEroganti)
    End Sub
  Partial Private Sub DeleteTranscodificaAttributiPrestazioniAnthemaMetaforaStruttureEroganti(instance As TranscodificaAttributiPrestazioniAnthemaMetaforaStruttureEroganti)
    End Sub
  Partial Private Sub InsertTranscodificaAttributiPrestazioniAnthemaMetaforaNomi(instance As TranscodificaAttributiPrestazioniAnthemaMetaforaNomi)
    End Sub
  Partial Private Sub UpdateTranscodificaAttributiPrestazioniAnthemaMetaforaNomi(instance As TranscodificaAttributiPrestazioniAnthemaMetaforaNomi)
    End Sub
  Partial Private Sub DeleteTranscodificaAttributiPrestazioniAnthemaMetaforaNomi(instance As TranscodificaAttributiPrestazioniAnthemaMetaforaNomi)
    End Sub
  Partial Private Sub InsertCentriRichiedentiAziendeEroganti(instance As CentriRichiedentiAziendeEroganti)
    End Sub
  Partial Private Sub UpdateCentriRichiedentiAziendeEroganti(instance As CentriRichiedentiAziendeEroganti)
    End Sub
  Partial Private Sub DeleteCentriRichiedentiAziendeEroganti(instance As CentriRichiedentiAziendeEroganti)
    End Sub
  Partial Private Sub InsertCentriRichiedentiSistemiEroganti(instance As CentriRichiedentiSistemiEroganti)
    End Sub
  Partial Private Sub UpdateCentriRichiedentiSistemiEroganti(instance As CentriRichiedentiSistemiEroganti)
    End Sub
  Partial Private Sub DeleteCentriRichiedentiSistemiEroganti(instance As CentriRichiedentiSistemiEroganti)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.System.Configuration.ConfigurationManager.ConnectionStrings("AuslAsmnRe_OeConnAnthemaConnectionString").ConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property TranscodificaAttributiPrestazioniMetaforaAnthema() As System.Data.Linq.Table(Of TranscodificaAttributiPrestazioniMetaforaAnthema)
		Get
			Return Me.GetTable(Of TranscodificaAttributiPrestazioniMetaforaAnthema)
		End Get
	End Property
	
	Public ReadOnly Property TranscodificaAttributiPrestazioniAnthemaMetafora() As System.Data.Linq.Table(Of TranscodificaAttributiPrestazioniAnthemaMetafora)
		Get
			Return Me.GetTable(Of TranscodificaAttributiPrestazioniAnthemaMetafora)
		End Get
	End Property
	
	Public ReadOnly Property OeConnAnthema_CentriRichiedenti() As System.Data.Linq.Table(Of OeConnAnthema_CentriRichiedenti)
		Get
			Return Me.GetTable(Of OeConnAnthema_CentriRichiedenti)
		End Get
	End Property
	
	Public ReadOnly Property TranscodificaAttributiPrestazioniMetaforaAnthemaStrutturaErogante() As System.Data.Linq.Table(Of TranscodificaAttributiPrestazioniMetaforaAnthemaStrutturaErogante)
		Get
			Return Me.GetTable(Of TranscodificaAttributiPrestazioniMetaforaAnthemaStrutturaErogante)
		End Get
	End Property
	
	Public ReadOnly Property TranscodificaAttributiPrestazioniMetaforaAnthemaNomi() As System.Data.Linq.Table(Of TranscodificaAttributiPrestazioniMetaforaAnthemaNomi)
		Get
			Return Me.GetTable(Of TranscodificaAttributiPrestazioniMetaforaAnthemaNomi)
		End Get
	End Property
	
	Public ReadOnly Property TranscodificaAttributiPrestazioniAnthemaMetaforaStruttureEroganti() As System.Data.Linq.Table(Of TranscodificaAttributiPrestazioniAnthemaMetaforaStruttureEroganti)
		Get
			Return Me.GetTable(Of TranscodificaAttributiPrestazioniAnthemaMetaforaStruttureEroganti)
		End Get
	End Property
	
	Public ReadOnly Property TranscodificaAttributiPrestazioniAnthemaMetaforaNomi() As System.Data.Linq.Table(Of TranscodificaAttributiPrestazioniAnthemaMetaforaNomi)
		Get
			Return Me.GetTable(Of TranscodificaAttributiPrestazioniAnthemaMetaforaNomi)
		End Get
	End Property
	
	Public ReadOnly Property CentriRichiedentiAziendeEroganti() As System.Data.Linq.Table(Of CentriRichiedentiAziendeEroganti)
		Get
			Return Me.GetTable(Of CentriRichiedentiAziendeEroganti)
		End Get
	End Property
	
	Public ReadOnly Property CentriRichiedentiSistemiEroganti() As System.Data.Linq.Table(Of CentriRichiedentiSistemiEroganti)
		Get
			Return Me.GetTable(Of CentriRichiedentiSistemiEroganti)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.TranscodificaAttributiPrestazioniMetaforaAnthema")>  _
Partial Public Class TranscodificaAttributiPrestazioniMetaforaAnthema
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _StrutturaErogante As String
	
	Private _IdPrestazioneAnthema As String
	
	Private _IdPrestazioneLis As String
	
	Private _Nome As String
	
	Private _Codice As String
	
	Private _Posizione As Integer
	
	Private _Descrizione As String
	
	Private _TipoDato As String
	
	Private _TipoContenuto As System.Nullable(Of Byte)
	
	Private _TranscodificaAttributiPrestazioniMetaforaAnthemaStrutturaErogante As EntityRef(Of TranscodificaAttributiPrestazioniMetaforaAnthemaStrutturaErogante)
	
	Private _TranscodificaAttributiPrestazioniMetaforaAnthemaNomi As EntityRef(Of TranscodificaAttributiPrestazioniMetaforaAnthemaNomi)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnStrutturaEroganteChanging(value As String)
    End Sub
    Partial Private Sub OnStrutturaEroganteChanged()
    End Sub
    Partial Private Sub OnIdPrestazioneAnthemaChanging(value As String)
    End Sub
    Partial Private Sub OnIdPrestazioneAnthemaChanged()
    End Sub
    Partial Private Sub OnIdPrestazioneLisChanging(value As String)
    End Sub
    Partial Private Sub OnIdPrestazioneLisChanged()
    End Sub
    Partial Private Sub OnNomeChanging(value As String)
    End Sub
    Partial Private Sub OnNomeChanged()
    End Sub
    Partial Private Sub OnCodiceChanging(value As String)
    End Sub
    Partial Private Sub OnCodiceChanged()
    End Sub
    Partial Private Sub OnPosizioneChanging(value As Integer)
    End Sub
    Partial Private Sub OnPosizioneChanged()
    End Sub
    Partial Private Sub OnDescrizioneChanging(value As String)
    End Sub
    Partial Private Sub OnDescrizioneChanged()
    End Sub
    Partial Private Sub OnTipoDatoChanging(value As String)
    End Sub
    Partial Private Sub OnTipoDatoChanged()
    End Sub
    Partial Private Sub OnTipoContenutoChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub OnTipoContenutoChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._TranscodificaAttributiPrestazioniMetaforaAnthemaStrutturaErogante = CType(Nothing, EntityRef(Of TranscodificaAttributiPrestazioniMetaforaAnthemaStrutturaErogante))
		Me._TranscodificaAttributiPrestazioniMetaforaAnthemaNomi = CType(Nothing, EntityRef(Of TranscodificaAttributiPrestazioniMetaforaAnthemaNomi))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StrutturaErogante", DbType:="VarChar(64) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property StrutturaErogante() As String
		Get
			Return Me._StrutturaErogante
		End Get
		Set
			If (String.Equals(Me._StrutturaErogante, value) = false) Then
				If Me._TranscodificaAttributiPrestazioniMetaforaAnthemaStrutturaErogante.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnStrutturaEroganteChanging(value)
				Me.SendPropertyChanging
				Me._StrutturaErogante = value
				Me.SendPropertyChanged("StrutturaErogante")
				Me.OnStrutturaEroganteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdPrestazioneAnthema", DbType:="VarChar(16) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property IdPrestazioneAnthema() As String
		Get
			Return Me._IdPrestazioneAnthema
		End Get
		Set
			If (String.Equals(Me._IdPrestazioneAnthema, value) = false) Then
				Me.OnIdPrestazioneAnthemaChanging(value)
				Me.SendPropertyChanging
				Me._IdPrestazioneAnthema = value
				Me.SendPropertyChanged("IdPrestazioneAnthema")
				Me.OnIdPrestazioneAnthemaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdPrestazioneLis", DbType:="VarChar(16) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property IdPrestazioneLis() As String
		Get
			Return Me._IdPrestazioneLis
		End Get
		Set
			If (String.Equals(Me._IdPrestazioneLis, value) = false) Then
				Me.OnIdPrestazioneLisChanging(value)
				Me.SendPropertyChanging
				Me._IdPrestazioneLis = value
				Me.SendPropertyChanged("IdPrestazioneLis")
				Me.OnIdPrestazioneLisChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Nome", DbType:="VarChar(64) NOT NULL", CanBeNull:=false)>  _
	Public Property Nome() As String
		Get
			Return Me._Nome
		End Get
		Set
			If (String.Equals(Me._Nome, value) = false) Then
				If Me._TranscodificaAttributiPrestazioniMetaforaAnthemaNomi.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnNomeChanging(value)
				Me.SendPropertyChanging
				Me._Nome = value
				Me.SendPropertyChanged("Nome")
				Me.OnNomeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Codice", DbType:="VarChar(64) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property Codice() As String
		Get
			Return Me._Codice
		End Get
		Set
			If (String.Equals(Me._Codice, value) = false) Then
				Me.OnCodiceChanging(value)
				Me.SendPropertyChanging
				Me._Codice = value
				Me.SendPropertyChanged("Codice")
				Me.OnCodiceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Posizione", DbType:="Int NOT NULL")>  _
	Public Property Posizione() As Integer
		Get
			Return Me._Posizione
		End Get
		Set
			If ((Me._Posizione = value)  _
						= false) Then
				Me.OnPosizioneChanging(value)
				Me.SendPropertyChanging
				Me._Posizione = value
				Me.SendPropertyChanged("Posizione")
				Me.OnPosizioneChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Descrizione", DbType:="VarChar(128)")>  _
	Public Property Descrizione() As String
		Get
			Return Me._Descrizione
		End Get
		Set
			If (String.Equals(Me._Descrizione, value) = false) Then
				Me.OnDescrizioneChanging(value)
				Me.SendPropertyChanging
				Me._Descrizione = value
				Me.SendPropertyChanged("Descrizione")
				Me.OnDescrizioneChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TipoDato", DbType:="VarChar(16)")>  _
	Public Property TipoDato() As String
		Get
			Return Me._TipoDato
		End Get
		Set
			If (String.Equals(Me._TipoDato, value) = false) Then
				Me.OnTipoDatoChanging(value)
				Me.SendPropertyChanging
				Me._TipoDato = value
				Me.SendPropertyChanged("TipoDato")
				Me.OnTipoDatoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TipoContenuto", DbType:="TinyInt")>  _
	Public Property TipoContenuto() As System.Nullable(Of Byte)
		Get
			Return Me._TipoContenuto
		End Get
		Set
			If (Me._TipoContenuto.Equals(value) = false) Then
				Me.OnTipoContenutoChanging(value)
				Me.SendPropertyChanging
				Me._TipoContenuto = value
				Me.SendPropertyChanged("TipoContenuto")
				Me.OnTipoContenutoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="TranscodificaAttributiPrestazioniMetaforaAnthemaStrutturaErogante_TranscodificaAt"& _ 
		"tributiPrestazioniMetaforaAnthema", Storage:="_TranscodificaAttributiPrestazioniMetaforaAnthemaStrutturaErogante", ThisKey:="StrutturaErogante", OtherKey:="StrutturaErogante", IsForeignKey:=true)>  _
	Public Property TranscodificaAttributiPrestazioniMetaforaAnthemaStrutturaErogante() As TranscodificaAttributiPrestazioniMetaforaAnthemaStrutturaErogante
		Get
			Return Me._TranscodificaAttributiPrestazioniMetaforaAnthemaStrutturaErogante.Entity
		End Get
		Set
			Dim previousValue As TranscodificaAttributiPrestazioniMetaforaAnthemaStrutturaErogante = Me._TranscodificaAttributiPrestazioniMetaforaAnthemaStrutturaErogante.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._TranscodificaAttributiPrestazioniMetaforaAnthemaStrutturaErogante.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._TranscodificaAttributiPrestazioniMetaforaAnthemaStrutturaErogante.Entity = Nothing
					previousValue.TranscodificaAttributiPrestazioniMetaforaAnthema = Nothing
				End If
				Me._TranscodificaAttributiPrestazioniMetaforaAnthemaStrutturaErogante.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.TranscodificaAttributiPrestazioniMetaforaAnthema = Me
					Me._StrutturaErogante = value.StrutturaErogante
				Else
					Me._StrutturaErogante = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("TranscodificaAttributiPrestazioniMetaforaAnthemaStrutturaErogante")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="TranscodificaAttributiPrestazioniMetaforaAnthemaNomi_TranscodificaAttributiPresta"& _ 
		"zioniMetaforaAnthema", Storage:="_TranscodificaAttributiPrestazioniMetaforaAnthemaNomi", ThisKey:="Nome", OtherKey:="Nome", IsForeignKey:=true)>  _
	Public Property TranscodificaAttributiPrestazioniMetaforaAnthemaNomi() As TranscodificaAttributiPrestazioniMetaforaAnthemaNomi
		Get
			Return Me._TranscodificaAttributiPrestazioniMetaforaAnthemaNomi.Entity
		End Get
		Set
			Dim previousValue As TranscodificaAttributiPrestazioniMetaforaAnthemaNomi = Me._TranscodificaAttributiPrestazioniMetaforaAnthemaNomi.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._TranscodificaAttributiPrestazioniMetaforaAnthemaNomi.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._TranscodificaAttributiPrestazioniMetaforaAnthemaNomi.Entity = Nothing
					previousValue.TranscodificaAttributiPrestazioniMetaforaAnthema.Remove(Me)
				End If
				Me._TranscodificaAttributiPrestazioniMetaforaAnthemaNomi.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.TranscodificaAttributiPrestazioniMetaforaAnthema.Add(Me)
					Me._Nome = value.Nome
				Else
					Me._Nome = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("TranscodificaAttributiPrestazioniMetaforaAnthemaNomi")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.TranscodificaAttributiPrestazioniAnthemaMetafora")>  _
Partial Public Class TranscodificaAttributiPrestazioniAnthemaMetafora
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _StrutturaErogante As String
	
	Private _IdPrestazioneAnthema As String
	
	Private _IdPrestazioneLis As String
	
	Private _Nome As String
	
	Private _Codice As String
	
	Private _Posizione As Integer
	
	Private _Descrizione As String
	
	Private _TipoDato As String
	
	Private _TipoContenuto As System.Nullable(Of Byte)
	
	Private _TranscodificaAttributiPrestazioniAnthemaMetaforaStruttureEroganti As EntityRef(Of TranscodificaAttributiPrestazioniAnthemaMetaforaStruttureEroganti)
	
	Private _TranscodificaAttributiPrestazioniAnthemaMetaforaNomi As EntityRef(Of TranscodificaAttributiPrestazioniAnthemaMetaforaNomi)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnStrutturaEroganteChanging(value As String)
    End Sub
    Partial Private Sub OnStrutturaEroganteChanged()
    End Sub
    Partial Private Sub OnIdPrestazioneAnthemaChanging(value As String)
    End Sub
    Partial Private Sub OnIdPrestazioneAnthemaChanged()
    End Sub
    Partial Private Sub OnIdPrestazioneLisChanging(value As String)
    End Sub
    Partial Private Sub OnIdPrestazioneLisChanged()
    End Sub
    Partial Private Sub OnNomeChanging(value As String)
    End Sub
    Partial Private Sub OnNomeChanged()
    End Sub
    Partial Private Sub OnCodiceChanging(value As String)
    End Sub
    Partial Private Sub OnCodiceChanged()
    End Sub
    Partial Private Sub OnPosizioneChanging(value As Integer)
    End Sub
    Partial Private Sub OnPosizioneChanged()
    End Sub
    Partial Private Sub OnDescrizioneChanging(value As String)
    End Sub
    Partial Private Sub OnDescrizioneChanged()
    End Sub
    Partial Private Sub OnTipoDatoChanging(value As String)
    End Sub
    Partial Private Sub OnTipoDatoChanged()
    End Sub
    Partial Private Sub OnTipoContenutoChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub OnTipoContenutoChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._TranscodificaAttributiPrestazioniAnthemaMetaforaStruttureEroganti = CType(Nothing, EntityRef(Of TranscodificaAttributiPrestazioniAnthemaMetaforaStruttureEroganti))
		Me._TranscodificaAttributiPrestazioniAnthemaMetaforaNomi = CType(Nothing, EntityRef(Of TranscodificaAttributiPrestazioniAnthemaMetaforaNomi))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StrutturaErogante", DbType:="VarChar(64) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property StrutturaErogante() As String
		Get
			Return Me._StrutturaErogante
		End Get
		Set
			If (String.Equals(Me._StrutturaErogante, value) = false) Then
				If Me._TranscodificaAttributiPrestazioniAnthemaMetaforaStruttureEroganti.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnStrutturaEroganteChanging(value)
				Me.SendPropertyChanging
				Me._StrutturaErogante = value
				Me.SendPropertyChanged("StrutturaErogante")
				Me.OnStrutturaEroganteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdPrestazioneAnthema", DbType:="VarChar(16) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property IdPrestazioneAnthema() As String
		Get
			Return Me._IdPrestazioneAnthema
		End Get
		Set
			If (String.Equals(Me._IdPrestazioneAnthema, value) = false) Then
				Me.OnIdPrestazioneAnthemaChanging(value)
				Me.SendPropertyChanging
				Me._IdPrestazioneAnthema = value
				Me.SendPropertyChanged("IdPrestazioneAnthema")
				Me.OnIdPrestazioneAnthemaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IdPrestazioneLis", DbType:="VarChar(16) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property IdPrestazioneLis() As String
		Get
			Return Me._IdPrestazioneLis
		End Get
		Set
			If (String.Equals(Me._IdPrestazioneLis, value) = false) Then
				Me.OnIdPrestazioneLisChanging(value)
				Me.SendPropertyChanging
				Me._IdPrestazioneLis = value
				Me.SendPropertyChanged("IdPrestazioneLis")
				Me.OnIdPrestazioneLisChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Nome", DbType:="VarChar(64) NOT NULL", CanBeNull:=false)>  _
	Public Property Nome() As String
		Get
			Return Me._Nome
		End Get
		Set
			If (String.Equals(Me._Nome, value) = false) Then
				If Me._TranscodificaAttributiPrestazioniAnthemaMetaforaNomi.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnNomeChanging(value)
				Me.SendPropertyChanging
				Me._Nome = value
				Me.SendPropertyChanged("Nome")
				Me.OnNomeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Codice", DbType:="VarChar(64) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property Codice() As String
		Get
			Return Me._Codice
		End Get
		Set
			If (String.Equals(Me._Codice, value) = false) Then
				Me.OnCodiceChanging(value)
				Me.SendPropertyChanging
				Me._Codice = value
				Me.SendPropertyChanged("Codice")
				Me.OnCodiceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Posizione", DbType:="Int NOT NULL")>  _
	Public Property Posizione() As Integer
		Get
			Return Me._Posizione
		End Get
		Set
			If ((Me._Posizione = value)  _
						= false) Then
				Me.OnPosizioneChanging(value)
				Me.SendPropertyChanging
				Me._Posizione = value
				Me.SendPropertyChanged("Posizione")
				Me.OnPosizioneChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Descrizione", DbType:="VarChar(128)")>  _
	Public Property Descrizione() As String
		Get
			Return Me._Descrizione
		End Get
		Set
			If (String.Equals(Me._Descrizione, value) = false) Then
				Me.OnDescrizioneChanging(value)
				Me.SendPropertyChanging
				Me._Descrizione = value
				Me.SendPropertyChanged("Descrizione")
				Me.OnDescrizioneChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TipoDato", DbType:="VarChar(16)")>  _
	Public Property TipoDato() As String
		Get
			Return Me._TipoDato
		End Get
		Set
			If (String.Equals(Me._TipoDato, value) = false) Then
				Me.OnTipoDatoChanging(value)
				Me.SendPropertyChanging
				Me._TipoDato = value
				Me.SendPropertyChanged("TipoDato")
				Me.OnTipoDatoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TipoContenuto", DbType:="TinyInt")>  _
	Public Property TipoContenuto() As System.Nullable(Of Byte)
		Get
			Return Me._TipoContenuto
		End Get
		Set
			If (Me._TipoContenuto.Equals(value) = false) Then
				Me.OnTipoContenutoChanging(value)
				Me.SendPropertyChanging
				Me._TipoContenuto = value
				Me.SendPropertyChanged("TipoContenuto")
				Me.OnTipoContenutoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="TranscodificaAttributiPrestazioniAnthemaMetaforaStruttureEroganti_TranscodificaAt"& _ 
		"tributiPrestazioniAnthemaMetafora", Storage:="_TranscodificaAttributiPrestazioniAnthemaMetaforaStruttureEroganti", ThisKey:="StrutturaErogante", OtherKey:="StrutturaErogante", IsForeignKey:=true)>  _
	Public Property TranscodificaAttributiPrestazioniAnthemaMetaforaStruttureEroganti() As TranscodificaAttributiPrestazioniAnthemaMetaforaStruttureEroganti
		Get
			Return Me._TranscodificaAttributiPrestazioniAnthemaMetaforaStruttureEroganti.Entity
		End Get
		Set
			Dim previousValue As TranscodificaAttributiPrestazioniAnthemaMetaforaStruttureEroganti = Me._TranscodificaAttributiPrestazioniAnthemaMetaforaStruttureEroganti.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._TranscodificaAttributiPrestazioniAnthemaMetaforaStruttureEroganti.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._TranscodificaAttributiPrestazioniAnthemaMetaforaStruttureEroganti.Entity = Nothing
					previousValue.TranscodificaAttributiPrestazioniAnthemaMetafora = Nothing
				End If
				Me._TranscodificaAttributiPrestazioniAnthemaMetaforaStruttureEroganti.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.TranscodificaAttributiPrestazioniAnthemaMetafora = Me
					Me._StrutturaErogante = value.StrutturaErogante
				Else
					Me._StrutturaErogante = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("TranscodificaAttributiPrestazioniAnthemaMetaforaStruttureEroganti")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="TranscodificaAttributiPrestazioniAnthemaMetaforaNomi_TranscodificaAttributiPresta"& _ 
		"zioniAnthemaMetafora", Storage:="_TranscodificaAttributiPrestazioniAnthemaMetaforaNomi", ThisKey:="Nome", OtherKey:="Nome", IsForeignKey:=true)>  _
	Public Property TranscodificaAttributiPrestazioniAnthemaMetaforaNomi() As TranscodificaAttributiPrestazioniAnthemaMetaforaNomi
		Get
			Return Me._TranscodificaAttributiPrestazioniAnthemaMetaforaNomi.Entity
		End Get
		Set
			Dim previousValue As TranscodificaAttributiPrestazioniAnthemaMetaforaNomi = Me._TranscodificaAttributiPrestazioniAnthemaMetaforaNomi.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._TranscodificaAttributiPrestazioniAnthemaMetaforaNomi.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._TranscodificaAttributiPrestazioniAnthemaMetaforaNomi.Entity = Nothing
					previousValue.TranscodificaAttributiPrestazioniAnthemaMetafora.Remove(Me)
				End If
				Me._TranscodificaAttributiPrestazioniAnthemaMetaforaNomi.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.TranscodificaAttributiPrestazioniAnthemaMetafora.Add(Me)
					Me._Nome = value.Nome
				Else
					Me._Nome = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("TranscodificaAttributiPrestazioniAnthemaMetaforaNomi")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.CentriRichiedenti")>  _
Partial Public Class OeConnAnthema_CentriRichiedenti
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Nome As String
	
	Private _Descrizione As String
	
	Private _Codice As String
	
	Private _PuntoPrelievo As String
	
	Private _CodiceLIS As String
	
	Private _AziendaErogante As String
	
	Private _SistemaErogante As String
	
	Private _AziendaRichiedente As String
	
	Private _SistemaRichiedente As String
	
	Private _PCInvioRichiesta As String
	
	Private _CentriRichiedentiAziendeEroganti As EntityRef(Of CentriRichiedentiAziendeEroganti)
	
	Private _CentriRichiedentiSistemiEroganti As EntityRef(Of CentriRichiedentiSistemiEroganti)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnNomeChanging(value As String)
    End Sub
    Partial Private Sub OnNomeChanged()
    End Sub
    Partial Private Sub OnDescrizioneChanging(value As String)
    End Sub
    Partial Private Sub OnDescrizioneChanged()
    End Sub
    Partial Private Sub OnCodiceChanging(value As String)
    End Sub
    Partial Private Sub OnCodiceChanged()
    End Sub
    Partial Private Sub OnPuntoPrelievoChanging(value As String)
    End Sub
    Partial Private Sub OnPuntoPrelievoChanged()
    End Sub
    Partial Private Sub OnCodiceLISChanging(value As String)
    End Sub
    Partial Private Sub OnCodiceLISChanged()
    End Sub
    Partial Private Sub OnAziendaEroganteChanging(value As String)
    End Sub
    Partial Private Sub OnAziendaEroganteChanged()
    End Sub
    Partial Private Sub OnSistemaEroganteChanging(value As String)
    End Sub
    Partial Private Sub OnSistemaEroganteChanged()
    End Sub
    Partial Private Sub OnAziendaRichiedenteChanging(value As String)
    End Sub
    Partial Private Sub OnAziendaRichiedenteChanged()
    End Sub
    Partial Private Sub OnSistemaRichiedenteChanging(value As String)
    End Sub
    Partial Private Sub OnSistemaRichiedenteChanged()
    End Sub
    Partial Private Sub OnPCInvioRichiestaChanging(value As String)
    End Sub
    Partial Private Sub OnPCInvioRichiestaChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._CentriRichiedentiAziendeEroganti = CType(Nothing, EntityRef(Of CentriRichiedentiAziendeEroganti))
		Me._CentriRichiedentiSistemiEroganti = CType(Nothing, EntityRef(Of CentriRichiedentiSistemiEroganti))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Nome", DbType:="VarChar(64) NOT NULL", CanBeNull:=false)>  _
	Public Property Nome() As String
		Get
			Return Me._Nome
		End Get
		Set
			If (String.Equals(Me._Nome, value) = false) Then
				Me.OnNomeChanging(value)
				Me.SendPropertyChanging
				Me._Nome = value
				Me.SendPropertyChanged("Nome")
				Me.OnNomeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Descrizione", DbType:="VarChar(128)")>  _
	Public Property Descrizione() As String
		Get
			Return Me._Descrizione
		End Get
		Set
			If (String.Equals(Me._Descrizione, value) = false) Then
				Me.OnDescrizioneChanging(value)
				Me.SendPropertyChanging
				Me._Descrizione = value
				Me.SendPropertyChanged("Descrizione")
				Me.OnDescrizioneChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Codice", DbType:="VarChar(64) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property Codice() As String
		Get
			Return Me._Codice
		End Get
		Set
			If (String.Equals(Me._Codice, value) = false) Then
				Me.OnCodiceChanging(value)
				Me.SendPropertyChanging
				Me._Codice = value
				Me.SendPropertyChanged("Codice")
				Me.OnCodiceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PuntoPrelievo", DbType:="VarChar(64) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property PuntoPrelievo() As String
		Get
			Return Me._PuntoPrelievo
		End Get
		Set
			If (String.Equals(Me._PuntoPrelievo, value) = false) Then
				Me.OnPuntoPrelievoChanging(value)
				Me.SendPropertyChanging
				Me._PuntoPrelievo = value
				Me.SendPropertyChanged("PuntoPrelievo")
				Me.OnPuntoPrelievoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CodiceLIS", DbType:="VarChar(64) NOT NULL", CanBeNull:=false)>  _
	Public Property CodiceLIS() As String
		Get
			Return Me._CodiceLIS
		End Get
		Set
			If (String.Equals(Me._CodiceLIS, value) = false) Then
				Me.OnCodiceLISChanging(value)
				Me.SendPropertyChanging
				Me._CodiceLIS = value
				Me.SendPropertyChanged("CodiceLIS")
				Me.OnCodiceLISChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AziendaErogante", DbType:="VarChar(16) NOT NULL", CanBeNull:=false)>  _
	Public Property AziendaErogante() As String
		Get
			Return Me._AziendaErogante
		End Get
		Set
			If (String.Equals(Me._AziendaErogante, value) = false) Then
				If Me._CentriRichiedentiAziendeEroganti.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnAziendaEroganteChanging(value)
				Me.SendPropertyChanging
				Me._AziendaErogante = value
				Me.SendPropertyChanged("AziendaErogante")
				Me.OnAziendaEroganteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SistemaErogante", DbType:="VarChar(16) NOT NULL", CanBeNull:=false)>  _
	Public Property SistemaErogante() As String
		Get
			Return Me._SistemaErogante
		End Get
		Set
			If (String.Equals(Me._SistemaErogante, value) = false) Then
				If Me._CentriRichiedentiSistemiEroganti.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnSistemaEroganteChanging(value)
				Me.SendPropertyChanging
				Me._SistemaErogante = value
				Me.SendPropertyChanged("SistemaErogante")
				Me.OnSistemaEroganteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AziendaRichiedente", DbType:="VarChar(16) NOT NULL", CanBeNull:=false)>  _
	Public Property AziendaRichiedente() As String
		Get
			Return Me._AziendaRichiedente
		End Get
		Set
			If (String.Equals(Me._AziendaRichiedente, value) = false) Then
				Me.OnAziendaRichiedenteChanging(value)
				Me.SendPropertyChanging
				Me._AziendaRichiedente = value
				Me.SendPropertyChanged("AziendaRichiedente")
				Me.OnAziendaRichiedenteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SistemaRichiedente", DbType:="VarChar(16) NOT NULL", CanBeNull:=false)>  _
	Public Property SistemaRichiedente() As String
		Get
			Return Me._SistemaRichiedente
		End Get
		Set
			If (String.Equals(Me._SistemaRichiedente, value) = false) Then
				Me.OnSistemaRichiedenteChanging(value)
				Me.SendPropertyChanging
				Me._SistemaRichiedente = value
				Me.SendPropertyChanged("SistemaRichiedente")
				Me.OnSistemaRichiedenteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PCInvioRichiesta", DbType:="VarChar(64) NOT NULL", CanBeNull:=false)>  _
	Public Property PCInvioRichiesta() As String
		Get
			Return Me._PCInvioRichiesta
		End Get
		Set
			If (String.Equals(Me._PCInvioRichiesta, value) = false) Then
				Me.OnPCInvioRichiestaChanging(value)
				Me.SendPropertyChanging
				Me._PCInvioRichiesta = value
				Me.SendPropertyChanged("PCInvioRichiesta")
				Me.OnPCInvioRichiestaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="CentriRichiedentiAziendeEroganti_OeConnAnthema_CentriRichiedenti", Storage:="_CentriRichiedentiAziendeEroganti", ThisKey:="AziendaErogante", OtherKey:="AziendaErogante", IsForeignKey:=true)>  _
	Public Property CentriRichiedentiAziendeEroganti() As CentriRichiedentiAziendeEroganti
		Get
			Return Me._CentriRichiedentiAziendeEroganti.Entity
		End Get
		Set
			Dim previousValue As CentriRichiedentiAziendeEroganti = Me._CentriRichiedentiAziendeEroganti.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._CentriRichiedentiAziendeEroganti.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._CentriRichiedentiAziendeEroganti.Entity = Nothing
					previousValue.OeConnAnthema_CentriRichiedenti.Remove(Me)
				End If
				Me._CentriRichiedentiAziendeEroganti.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.OeConnAnthema_CentriRichiedenti.Add(Me)
					Me._AziendaErogante = value.AziendaErogante
				Else
					Me._AziendaErogante = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("CentriRichiedentiAziendeEroganti")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="CentriRichiedentiSistemiEroganti_OeConnAnthema_CentriRichiedenti", Storage:="_CentriRichiedentiSistemiEroganti", ThisKey:="SistemaErogante", OtherKey:="SistemaErogante", IsForeignKey:=true)>  _
	Public Property CentriRichiedentiSistemiEroganti() As CentriRichiedentiSistemiEroganti
		Get
			Return Me._CentriRichiedentiSistemiEroganti.Entity
		End Get
		Set
			Dim previousValue As CentriRichiedentiSistemiEroganti = Me._CentriRichiedentiSistemiEroganti.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._CentriRichiedentiSistemiEroganti.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._CentriRichiedentiSistemiEroganti.Entity = Nothing
					previousValue.OeConnAnthema_CentriRichiedenti.Remove(Me)
				End If
				Me._CentriRichiedentiSistemiEroganti.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.OeConnAnthema_CentriRichiedenti.Add(Me)
					Me._SistemaErogante = value.SistemaErogante
				Else
					Me._SistemaErogante = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("CentriRichiedentiSistemiEroganti")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="admin.TranscodificaAttributiPrestazioniMetaforaAnthemaStrutturaErogante")>  _
Partial Public Class TranscodificaAttributiPrestazioniMetaforaAnthemaStrutturaErogante
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _StrutturaErogante As String
	
	Private _TranscodificaAttributiPrestazioniMetaforaAnthema As EntityRef(Of TranscodificaAttributiPrestazioniMetaforaAnthema)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnStrutturaEroganteChanging(value As String)
    End Sub
    Partial Private Sub OnStrutturaEroganteChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._TranscodificaAttributiPrestazioniMetaforaAnthema = CType(Nothing, EntityRef(Of TranscodificaAttributiPrestazioniMetaforaAnthema))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StrutturaErogante", DbType:="VarChar(64) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property StrutturaErogante() As String
		Get
			Return Me._StrutturaErogante
		End Get
		Set
			If (String.Equals(Me._StrutturaErogante, value) = false) Then
				Me.OnStrutturaEroganteChanging(value)
				Me.SendPropertyChanging
				Me._StrutturaErogante = value
				Me.SendPropertyChanged("StrutturaErogante")
				Me.OnStrutturaEroganteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="TranscodificaAttributiPrestazioniMetaforaAnthemaStrutturaErogante_TranscodificaAt"& _ 
		"tributiPrestazioniMetaforaAnthema", Storage:="_TranscodificaAttributiPrestazioniMetaforaAnthema", ThisKey:="StrutturaErogante", OtherKey:="StrutturaErogante", IsUnique:=true, IsForeignKey:=false)>  _
	Public Property TranscodificaAttributiPrestazioniMetaforaAnthema() As TranscodificaAttributiPrestazioniMetaforaAnthema
		Get
			Return Me._TranscodificaAttributiPrestazioniMetaforaAnthema.Entity
		End Get
		Set
			Dim previousValue As TranscodificaAttributiPrestazioniMetaforaAnthema = Me._TranscodificaAttributiPrestazioniMetaforaAnthema.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._TranscodificaAttributiPrestazioniMetaforaAnthema.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._TranscodificaAttributiPrestazioniMetaforaAnthema.Entity = Nothing
					previousValue.TranscodificaAttributiPrestazioniMetaforaAnthemaStrutturaErogante = Nothing
				End If
				Me._TranscodificaAttributiPrestazioniMetaforaAnthema.Entity = value
				If (Object.Equals(value, Nothing) = false) Then
					value.TranscodificaAttributiPrestazioniMetaforaAnthemaStrutturaErogante = Me
				End If
				Me.SendPropertyChanged("TranscodificaAttributiPrestazioniMetaforaAnthema")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="admin.TranscodificaAttributiPrestazioniMetaforaAnthemaNomi")>  _
Partial Public Class TranscodificaAttributiPrestazioniMetaforaAnthemaNomi
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Nome As String
	
	Private _TranscodificaAttributiPrestazioniMetaforaAnthema As EntitySet(Of TranscodificaAttributiPrestazioniMetaforaAnthema)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnNomeChanging(value As String)
    End Sub
    Partial Private Sub OnNomeChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._TranscodificaAttributiPrestazioniMetaforaAnthema = New EntitySet(Of TranscodificaAttributiPrestazioniMetaforaAnthema)(AddressOf Me.attach_TranscodificaAttributiPrestazioniMetaforaAnthema, AddressOf Me.detach_TranscodificaAttributiPrestazioniMetaforaAnthema)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Nome", DbType:="VarChar(64) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property Nome() As String
		Get
			Return Me._Nome
		End Get
		Set
			If (String.Equals(Me._Nome, value) = false) Then
				Me.OnNomeChanging(value)
				Me.SendPropertyChanging
				Me._Nome = value
				Me.SendPropertyChanged("Nome")
				Me.OnNomeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="TranscodificaAttributiPrestazioniMetaforaAnthemaNomi_TranscodificaAttributiPresta"& _ 
		"zioniMetaforaAnthema", Storage:="_TranscodificaAttributiPrestazioniMetaforaAnthema", ThisKey:="Nome", OtherKey:="Nome")>  _
	Public Property TranscodificaAttributiPrestazioniMetaforaAnthema() As EntitySet(Of TranscodificaAttributiPrestazioniMetaforaAnthema)
		Get
			Return Me._TranscodificaAttributiPrestazioniMetaforaAnthema
		End Get
		Set
			Me._TranscodificaAttributiPrestazioniMetaforaAnthema.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_TranscodificaAttributiPrestazioniMetaforaAnthema(ByVal entity As TranscodificaAttributiPrestazioniMetaforaAnthema)
		Me.SendPropertyChanging
		entity.TranscodificaAttributiPrestazioniMetaforaAnthemaNomi = Me
	End Sub
	
	Private Sub detach_TranscodificaAttributiPrestazioniMetaforaAnthema(ByVal entity As TranscodificaAttributiPrestazioniMetaforaAnthema)
		Me.SendPropertyChanging
		entity.TranscodificaAttributiPrestazioniMetaforaAnthemaNomi = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="admin.TranscodificaAttributiPrestazioniAnthemaMetaforaStruttureEroganti")>  _
Partial Public Class TranscodificaAttributiPrestazioniAnthemaMetaforaStruttureEroganti
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _StrutturaErogante As String
	
	Private _TranscodificaAttributiPrestazioniAnthemaMetafora As EntityRef(Of TranscodificaAttributiPrestazioniAnthemaMetafora)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnStrutturaEroganteChanging(value As String)
    End Sub
    Partial Private Sub OnStrutturaEroganteChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._TranscodificaAttributiPrestazioniAnthemaMetafora = CType(Nothing, EntityRef(Of TranscodificaAttributiPrestazioniAnthemaMetafora))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StrutturaErogante", DbType:="VarChar(64) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property StrutturaErogante() As String
		Get
			Return Me._StrutturaErogante
		End Get
		Set
			If (String.Equals(Me._StrutturaErogante, value) = false) Then
				Me.OnStrutturaEroganteChanging(value)
				Me.SendPropertyChanging
				Me._StrutturaErogante = value
				Me.SendPropertyChanged("StrutturaErogante")
				Me.OnStrutturaEroganteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="TranscodificaAttributiPrestazioniAnthemaMetaforaStruttureEroganti_TranscodificaAt"& _ 
		"tributiPrestazioniAnthemaMetafora", Storage:="_TranscodificaAttributiPrestazioniAnthemaMetafora", ThisKey:="StrutturaErogante", OtherKey:="StrutturaErogante", IsUnique:=true, IsForeignKey:=false)>  _
	Public Property TranscodificaAttributiPrestazioniAnthemaMetafora() As TranscodificaAttributiPrestazioniAnthemaMetafora
		Get
			Return Me._TranscodificaAttributiPrestazioniAnthemaMetafora.Entity
		End Get
		Set
			Dim previousValue As TranscodificaAttributiPrestazioniAnthemaMetafora = Me._TranscodificaAttributiPrestazioniAnthemaMetafora.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._TranscodificaAttributiPrestazioniAnthemaMetafora.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._TranscodificaAttributiPrestazioniAnthemaMetafora.Entity = Nothing
					previousValue.TranscodificaAttributiPrestazioniAnthemaMetaforaStruttureEroganti = Nothing
				End If
				Me._TranscodificaAttributiPrestazioniAnthemaMetafora.Entity = value
				If (Object.Equals(value, Nothing) = false) Then
					value.TranscodificaAttributiPrestazioniAnthemaMetaforaStruttureEroganti = Me
				End If
				Me.SendPropertyChanged("TranscodificaAttributiPrestazioniAnthemaMetafora")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="admin.TranscodificaAttributiPrestazioniAnthemaMetaforaNomi")>  _
Partial Public Class TranscodificaAttributiPrestazioniAnthemaMetaforaNomi
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Nome As String
	
	Private _TranscodificaAttributiPrestazioniAnthemaMetafora As EntitySet(Of TranscodificaAttributiPrestazioniAnthemaMetafora)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnNomeChanging(value As String)
    End Sub
    Partial Private Sub OnNomeChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._TranscodificaAttributiPrestazioniAnthemaMetafora = New EntitySet(Of TranscodificaAttributiPrestazioniAnthemaMetafora)(AddressOf Me.attach_TranscodificaAttributiPrestazioniAnthemaMetafora, AddressOf Me.detach_TranscodificaAttributiPrestazioniAnthemaMetafora)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Nome", DbType:="VarChar(64) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property Nome() As String
		Get
			Return Me._Nome
		End Get
		Set
			If (String.Equals(Me._Nome, value) = false) Then
				Me.OnNomeChanging(value)
				Me.SendPropertyChanging
				Me._Nome = value
				Me.SendPropertyChanged("Nome")
				Me.OnNomeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="TranscodificaAttributiPrestazioniAnthemaMetaforaNomi_TranscodificaAttributiPresta"& _ 
		"zioniAnthemaMetafora", Storage:="_TranscodificaAttributiPrestazioniAnthemaMetafora", ThisKey:="Nome", OtherKey:="Nome")>  _
	Public Property TranscodificaAttributiPrestazioniAnthemaMetafora() As EntitySet(Of TranscodificaAttributiPrestazioniAnthemaMetafora)
		Get
			Return Me._TranscodificaAttributiPrestazioniAnthemaMetafora
		End Get
		Set
			Me._TranscodificaAttributiPrestazioniAnthemaMetafora.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_TranscodificaAttributiPrestazioniAnthemaMetafora(ByVal entity As TranscodificaAttributiPrestazioniAnthemaMetafora)
		Me.SendPropertyChanging
		entity.TranscodificaAttributiPrestazioniAnthemaMetaforaNomi = Me
	End Sub
	
	Private Sub detach_TranscodificaAttributiPrestazioniAnthemaMetafora(ByVal entity As TranscodificaAttributiPrestazioniAnthemaMetafora)
		Me.SendPropertyChanging
		entity.TranscodificaAttributiPrestazioniAnthemaMetaforaNomi = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="admin.CentriRichiedentiAziendeEroganti")>  _
Partial Public Class CentriRichiedentiAziendeEroganti
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _AziendaErogante As String
	
	Private _OeConnAnthema_CentriRichiedenti As EntitySet(Of OeConnAnthema_CentriRichiedenti)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnAziendaEroganteChanging(value As String)
    End Sub
    Partial Private Sub OnAziendaEroganteChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._OeConnAnthema_CentriRichiedenti = New EntitySet(Of OeConnAnthema_CentriRichiedenti)(AddressOf Me.attach_OeConnAnthema_CentriRichiedenti, AddressOf Me.detach_OeConnAnthema_CentriRichiedenti)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_AziendaErogante", DbType:="VarChar(16) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property AziendaErogante() As String
		Get
			Return Me._AziendaErogante
		End Get
		Set
			If (String.Equals(Me._AziendaErogante, value) = false) Then
				Me.OnAziendaEroganteChanging(value)
				Me.SendPropertyChanging
				Me._AziendaErogante = value
				Me.SendPropertyChanged("AziendaErogante")
				Me.OnAziendaEroganteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="CentriRichiedentiAziendeEroganti_OeConnAnthema_CentriRichiedenti", Storage:="_OeConnAnthema_CentriRichiedenti", ThisKey:="AziendaErogante", OtherKey:="AziendaErogante")>  _
	Public Property OeConnAnthema_CentriRichiedenti() As EntitySet(Of OeConnAnthema_CentriRichiedenti)
		Get
			Return Me._OeConnAnthema_CentriRichiedenti
		End Get
		Set
			Me._OeConnAnthema_CentriRichiedenti.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_OeConnAnthema_CentriRichiedenti(ByVal entity As OeConnAnthema_CentriRichiedenti)
		Me.SendPropertyChanging
		entity.CentriRichiedentiAziendeEroganti = Me
	End Sub
	
	Private Sub detach_OeConnAnthema_CentriRichiedenti(ByVal entity As OeConnAnthema_CentriRichiedenti)
		Me.SendPropertyChanging
		entity.CentriRichiedentiAziendeEroganti = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="admin.CentriRichiedentiSistemiEroganti")>  _
Partial Public Class CentriRichiedentiSistemiEroganti
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _SistemaErogante As String
	
	Private _OeConnAnthema_CentriRichiedenti As EntitySet(Of OeConnAnthema_CentriRichiedenti)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnSistemaEroganteChanging(value As String)
    End Sub
    Partial Private Sub OnSistemaEroganteChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._OeConnAnthema_CentriRichiedenti = New EntitySet(Of OeConnAnthema_CentriRichiedenti)(AddressOf Me.attach_OeConnAnthema_CentriRichiedenti, AddressOf Me.detach_OeConnAnthema_CentriRichiedenti)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SistemaErogante", DbType:="VarChar(16) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property SistemaErogante() As String
		Get
			Return Me._SistemaErogante
		End Get
		Set
			If (String.Equals(Me._SistemaErogante, value) = false) Then
				Me.OnSistemaEroganteChanging(value)
				Me.SendPropertyChanging
				Me._SistemaErogante = value
				Me.SendPropertyChanged("SistemaErogante")
				Me.OnSistemaEroganteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="CentriRichiedentiSistemiEroganti_OeConnAnthema_CentriRichiedenti", Storage:="_OeConnAnthema_CentriRichiedenti", ThisKey:="SistemaErogante", OtherKey:="SistemaErogante")>  _
	Public Property OeConnAnthema_CentriRichiedenti() As EntitySet(Of OeConnAnthema_CentriRichiedenti)
		Get
			Return Me._OeConnAnthema_CentriRichiedenti
		End Get
		Set
			Me._OeConnAnthema_CentriRichiedenti.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_OeConnAnthema_CentriRichiedenti(ByVal entity As OeConnAnthema_CentriRichiedenti)
		Me.SendPropertyChanging
		entity.CentriRichiedentiSistemiEroganti = Me
	End Sub
	
	Private Sub detach_OeConnAnthema_CentriRichiedenti(ByVal entity As OeConnAnthema_CentriRichiedenti)
		Me.SendPropertyChanging
		entity.CentriRichiedentiSistemiEroganti = Nothing
	End Sub
End Class
