'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("NoteAnamnesticheDataSet"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class NoteAnamnesticheDataSet
    Inherits Global.System.Data.DataSet
    
    Private tableNotaAnamnesticaOttieni As NotaAnamnesticaOttieniDataTable
    
    Private tableAttributiNotaAnamnesticaOttieni As AttributiNotaAnamnesticaOttieniDataTable
    
    Private tableNoteAnamnesticheCerca As NoteAnamnesticheCercaDataTable
    
    Private tableNoteAnamnesticheUltimiArrivi As NoteAnamnesticheUltimiArriviDataTable
    
    Private tableNoteAnamnesticheSinottico As NoteAnamnesticheSinotticoDataTable
    
    Private tableNoteAnamnesticheRiassociazioneLista As NoteAnamnesticheRiassociazioneListaDataTable
    
    Private tableNotaAnamnesticaRiassociazioneOttieni As NotaAnamnesticaRiassociazioneOttieniDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("NotaAnamnesticaOttieni")) Is Nothing) Then
                MyBase.Tables.Add(New NotaAnamnesticaOttieniDataTable(ds.Tables("NotaAnamnesticaOttieni")))
            End If
            If (Not (ds.Tables("AttributiNotaAnamnesticaOttieni")) Is Nothing) Then
                MyBase.Tables.Add(New AttributiNotaAnamnesticaOttieniDataTable(ds.Tables("AttributiNotaAnamnesticaOttieni")))
            End If
            If (Not (ds.Tables("NoteAnamnesticheCerca")) Is Nothing) Then
                MyBase.Tables.Add(New NoteAnamnesticheCercaDataTable(ds.Tables("NoteAnamnesticheCerca")))
            End If
            If (Not (ds.Tables("NoteAnamnesticheUltimiArrivi")) Is Nothing) Then
                MyBase.Tables.Add(New NoteAnamnesticheUltimiArriviDataTable(ds.Tables("NoteAnamnesticheUltimiArrivi")))
            End If
            If (Not (ds.Tables("NoteAnamnesticheSinottico")) Is Nothing) Then
                MyBase.Tables.Add(New NoteAnamnesticheSinotticoDataTable(ds.Tables("NoteAnamnesticheSinottico")))
            End If
            If (Not (ds.Tables("NoteAnamnesticheRiassociazioneLista")) Is Nothing) Then
                MyBase.Tables.Add(New NoteAnamnesticheRiassociazioneListaDataTable(ds.Tables("NoteAnamnesticheRiassociazioneLista")))
            End If
            If (Not (ds.Tables("NotaAnamnesticaRiassociazioneOttieni")) Is Nothing) Then
                MyBase.Tables.Add(New NotaAnamnesticaRiassociazioneOttieniDataTable(ds.Tables("NotaAnamnesticaRiassociazioneOttieni")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property NotaAnamnesticaOttieni() As NotaAnamnesticaOttieniDataTable
        Get
            Return Me.tableNotaAnamnesticaOttieni
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property AttributiNotaAnamnesticaOttieni() As AttributiNotaAnamnesticaOttieniDataTable
        Get
            Return Me.tableAttributiNotaAnamnesticaOttieni
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property NoteAnamnesticheCerca() As NoteAnamnesticheCercaDataTable
        Get
            Return Me.tableNoteAnamnesticheCerca
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property NoteAnamnesticheUltimiArrivi() As NoteAnamnesticheUltimiArriviDataTable
        Get
            Return Me.tableNoteAnamnesticheUltimiArrivi
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property NoteAnamnesticheSinottico() As NoteAnamnesticheSinotticoDataTable
        Get
            Return Me.tableNoteAnamnesticheSinottico
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property NoteAnamnesticheRiassociazioneLista() As NoteAnamnesticheRiassociazioneListaDataTable
        Get
            Return Me.tableNoteAnamnesticheRiassociazioneLista
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property NotaAnamnesticaRiassociazioneOttieni() As NotaAnamnesticaRiassociazioneOttieniDataTable
        Get
            Return Me.tableNotaAnamnesticaRiassociazioneOttieni
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As NoteAnamnesticheDataSet = CType(MyBase.Clone,NoteAnamnesticheDataSet)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("NotaAnamnesticaOttieni")) Is Nothing) Then
                MyBase.Tables.Add(New NotaAnamnesticaOttieniDataTable(ds.Tables("NotaAnamnesticaOttieni")))
            End If
            If (Not (ds.Tables("AttributiNotaAnamnesticaOttieni")) Is Nothing) Then
                MyBase.Tables.Add(New AttributiNotaAnamnesticaOttieniDataTable(ds.Tables("AttributiNotaAnamnesticaOttieni")))
            End If
            If (Not (ds.Tables("NoteAnamnesticheCerca")) Is Nothing) Then
                MyBase.Tables.Add(New NoteAnamnesticheCercaDataTable(ds.Tables("NoteAnamnesticheCerca")))
            End If
            If (Not (ds.Tables("NoteAnamnesticheUltimiArrivi")) Is Nothing) Then
                MyBase.Tables.Add(New NoteAnamnesticheUltimiArriviDataTable(ds.Tables("NoteAnamnesticheUltimiArrivi")))
            End If
            If (Not (ds.Tables("NoteAnamnesticheSinottico")) Is Nothing) Then
                MyBase.Tables.Add(New NoteAnamnesticheSinotticoDataTable(ds.Tables("NoteAnamnesticheSinottico")))
            End If
            If (Not (ds.Tables("NoteAnamnesticheRiassociazioneLista")) Is Nothing) Then
                MyBase.Tables.Add(New NoteAnamnesticheRiassociazioneListaDataTable(ds.Tables("NoteAnamnesticheRiassociazioneLista")))
            End If
            If (Not (ds.Tables("NotaAnamnesticaRiassociazioneOttieni")) Is Nothing) Then
                MyBase.Tables.Add(New NotaAnamnesticaRiassociazioneOttieniDataTable(ds.Tables("NotaAnamnesticaRiassociazioneOttieni")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableNotaAnamnesticaOttieni = CType(MyBase.Tables("NotaAnamnesticaOttieni"),NotaAnamnesticaOttieniDataTable)
        If (initTable = true) Then
            If (Not (Me.tableNotaAnamnesticaOttieni) Is Nothing) Then
                Me.tableNotaAnamnesticaOttieni.InitVars
            End If
        End If
        Me.tableAttributiNotaAnamnesticaOttieni = CType(MyBase.Tables("AttributiNotaAnamnesticaOttieni"),AttributiNotaAnamnesticaOttieniDataTable)
        If (initTable = true) Then
            If (Not (Me.tableAttributiNotaAnamnesticaOttieni) Is Nothing) Then
                Me.tableAttributiNotaAnamnesticaOttieni.InitVars
            End If
        End If
        Me.tableNoteAnamnesticheCerca = CType(MyBase.Tables("NoteAnamnesticheCerca"),NoteAnamnesticheCercaDataTable)
        If (initTable = true) Then
            If (Not (Me.tableNoteAnamnesticheCerca) Is Nothing) Then
                Me.tableNoteAnamnesticheCerca.InitVars
            End If
        End If
        Me.tableNoteAnamnesticheUltimiArrivi = CType(MyBase.Tables("NoteAnamnesticheUltimiArrivi"),NoteAnamnesticheUltimiArriviDataTable)
        If (initTable = true) Then
            If (Not (Me.tableNoteAnamnesticheUltimiArrivi) Is Nothing) Then
                Me.tableNoteAnamnesticheUltimiArrivi.InitVars
            End If
        End If
        Me.tableNoteAnamnesticheSinottico = CType(MyBase.Tables("NoteAnamnesticheSinottico"),NoteAnamnesticheSinotticoDataTable)
        If (initTable = true) Then
            If (Not (Me.tableNoteAnamnesticheSinottico) Is Nothing) Then
                Me.tableNoteAnamnesticheSinottico.InitVars
            End If
        End If
        Me.tableNoteAnamnesticheRiassociazioneLista = CType(MyBase.Tables("NoteAnamnesticheRiassociazioneLista"),NoteAnamnesticheRiassociazioneListaDataTable)
        If (initTable = true) Then
            If (Not (Me.tableNoteAnamnesticheRiassociazioneLista) Is Nothing) Then
                Me.tableNoteAnamnesticheRiassociazioneLista.InitVars
            End If
        End If
        Me.tableNotaAnamnesticaRiassociazioneOttieni = CType(MyBase.Tables("NotaAnamnesticaRiassociazioneOttieni"),NotaAnamnesticaRiassociazioneOttieniDataTable)
        If (initTable = true) Then
            If (Not (Me.tableNotaAnamnesticaRiassociazioneOttieni) Is Nothing) Then
                Me.tableNotaAnamnesticaRiassociazioneOttieni.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "NoteAnamnesticheDataSet"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/NoteAnamnesticheDataSet.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableNotaAnamnesticaOttieni = New NotaAnamnesticaOttieniDataTable()
        MyBase.Tables.Add(Me.tableNotaAnamnesticaOttieni)
        Me.tableAttributiNotaAnamnesticaOttieni = New AttributiNotaAnamnesticaOttieniDataTable()
        MyBase.Tables.Add(Me.tableAttributiNotaAnamnesticaOttieni)
        Me.tableNoteAnamnesticheCerca = New NoteAnamnesticheCercaDataTable()
        MyBase.Tables.Add(Me.tableNoteAnamnesticheCerca)
        Me.tableNoteAnamnesticheUltimiArrivi = New NoteAnamnesticheUltimiArriviDataTable()
        MyBase.Tables.Add(Me.tableNoteAnamnesticheUltimiArrivi)
        Me.tableNoteAnamnesticheSinottico = New NoteAnamnesticheSinotticoDataTable()
        MyBase.Tables.Add(Me.tableNoteAnamnesticheSinottico)
        Me.tableNoteAnamnesticheRiassociazioneLista = New NoteAnamnesticheRiassociazioneListaDataTable()
        MyBase.Tables.Add(Me.tableNoteAnamnesticheRiassociazioneLista)
        Me.tableNotaAnamnesticaRiassociazioneOttieni = New NotaAnamnesticaRiassociazioneOttieniDataTable()
        MyBase.Tables.Add(Me.tableNotaAnamnesticaRiassociazioneOttieni)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeNotaAnamnesticaOttieni() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeAttributiNotaAnamnesticaOttieni() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeNoteAnamnesticheCerca() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeNoteAnamnesticheUltimiArrivi() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeNoteAnamnesticheSinottico() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeNoteAnamnesticheRiassociazioneLista() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Function ShouldSerializeNotaAnamnesticaRiassociazioneOttieni() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As NoteAnamnesticheDataSet = New NoteAnamnesticheDataSet()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub NotaAnamnesticaOttieniRowChangeEventHandler(ByVal sender As Object, ByVal e As NotaAnamnesticaOttieniRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub AttributiNotaAnamnesticaOttieniRowChangeEventHandler(ByVal sender As Object, ByVal e As AttributiNotaAnamnesticaOttieniRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub NoteAnamnesticheCercaRowChangeEventHandler(ByVal sender As Object, ByVal e As NoteAnamnesticheCercaRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub NoteAnamnesticheUltimiArriviRowChangeEventHandler(ByVal sender As Object, ByVal e As NoteAnamnesticheUltimiArriviRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub NoteAnamnesticheSinotticoRowChangeEventHandler(ByVal sender As Object, ByVal e As NoteAnamnesticheSinotticoRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub NoteAnamnesticheRiassociazioneListaRowChangeEventHandler(ByVal sender As Object, ByVal e As NoteAnamnesticheRiassociazioneListaRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Delegate Sub NotaAnamnesticaRiassociazioneOttieniRowChangeEventHandler(ByVal sender As Object, ByVal e As NotaAnamnesticaRiassociazioneOttieniRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class NotaAnamnesticaOttieniDataTable
        Inherits Global.System.Data.TypedTableBase(Of NotaAnamnesticaOttieniRow)
        
        Private columnId As Global.System.Data.DataColumn
        
        Private columnDataPartizione As Global.System.Data.DataColumn
        
        Private columnIdEsterno As Global.System.Data.DataColumn
        
        Private columnIdPaziente As Global.System.Data.DataColumn
        
        Private columnDataInserimento As Global.System.Data.DataColumn
        
        Private columnDataModifica As Global.System.Data.DataColumn
        
        Private columnDataModificaEsterno As Global.System.Data.DataColumn
        
        Private columnStatoCodice As Global.System.Data.DataColumn
        
        Private columnStatoDescrizione As Global.System.Data.DataColumn
        
        Private columnAziendaErogante As Global.System.Data.DataColumn
        
        Private columnSistemaErogante As Global.System.Data.DataColumn
        
        Private columnDataNota As Global.System.Data.DataColumn
        
        Private columnDataFineValidita As Global.System.Data.DataColumn
        
        Private columnTipoCodice As Global.System.Data.DataColumn
        
        Private columnTipoDescrizione As Global.System.Data.DataColumn
        
        Private columnContenuto As Global.System.Data.DataColumn
        
        Private columnTipoContenuto As Global.System.Data.DataColumn
        
        Private columnContenutoHtml As Global.System.Data.DataColumn
        
        Private columnContenutoText As Global.System.Data.DataColumn
        
        Private columnCognome As Global.System.Data.DataColumn
        
        Private columnNome As Global.System.Data.DataColumn
        
        Private columnSesso As Global.System.Data.DataColumn
        
        Private columnCodiceFiscale As Global.System.Data.DataColumn
        
        Private columnDataNascita As Global.System.Data.DataColumn
        
        Private columnComuneNascita As Global.System.Data.DataColumn
        
        Private columnCodiceSanitario As Global.System.Data.DataColumn
        
        Private columnAttributi As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "NotaAnamnesticaOttieni"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DataPartizioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDataPartizione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IdEsternoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIdEsterno
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IdPazienteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIdPaziente
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DataInserimentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDataInserimento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DataModificaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDataModifica
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DataModificaEsternoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDataModificaEsterno
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property StatoCodiceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStatoCodice
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property StatoDescrizioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStatoDescrizione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property AziendaEroganteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAziendaErogante
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SistemaEroganteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSistemaErogante
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DataNotaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDataNota
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DataFineValiditaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDataFineValidita
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property TipoCodiceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTipoCodice
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property TipoDescrizioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTipoDescrizione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ContenutoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnContenuto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property TipoContenutoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTipoContenuto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ContenutoHtmlColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnContenutoHtml
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ContenutoTextColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnContenutoText
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CognomeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCognome
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property NomeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNome
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SessoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSesso
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CodiceFiscaleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCodiceFiscale
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DataNascitaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDataNascita
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ComuneNascitaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnComuneNascita
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CodiceSanitarioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCodiceSanitario
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property AttributiColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAttributi
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As NotaAnamnesticaOttieniRow
            Get
                Return CType(Me.Rows(index),NotaAnamnesticaOttieniRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event NotaAnamnesticaOttieniRowChanging As NotaAnamnesticaOttieniRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event NotaAnamnesticaOttieniRowChanged As NotaAnamnesticaOttieniRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event NotaAnamnesticaOttieniRowDeleting As NotaAnamnesticaOttieniRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event NotaAnamnesticaOttieniRowDeleted As NotaAnamnesticaOttieniRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddNotaAnamnesticaOttieniRow(ByVal row As NotaAnamnesticaOttieniRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddNotaAnamnesticaOttieniRow( _
                    ByVal Id As System.Guid,  _
                    ByVal DataPartizione As Date,  _
                    ByVal IdEsterno As String,  _
                    ByVal IdPaziente As System.Guid,  _
                    ByVal DataInserimento As Date,  _
                    ByVal DataModifica As Date,  _
                    ByVal DataModificaEsterno As Date,  _
                    ByVal StatoCodice As Byte,  _
                    ByVal StatoDescrizione As String,  _
                    ByVal AziendaErogante As String,  _
                    ByVal SistemaErogante As String,  _
                    ByVal DataNota As Date,  _
                    ByVal DataFineValidita As Date,  _
                    ByVal TipoCodice As String,  _
                    ByVal TipoDescrizione As String,  _
                    ByVal Contenuto() As Byte,  _
                    ByVal TipoContenuto As String,  _
                    ByVal ContenutoHtml As String,  _
                    ByVal ContenutoText As String,  _
                    ByVal Cognome As String,  _
                    ByVal Nome As String,  _
                    ByVal Sesso As String,  _
                    ByVal CodiceFiscale As String,  _
                    ByVal DataNascita As Date,  _
                    ByVal ComuneNascita As String,  _
                    ByVal CodiceSanitario As String,  _
                    ByVal Attributi As String) As NotaAnamnesticaOttieniRow
            Dim rowNotaAnamnesticaOttieniRow As NotaAnamnesticaOttieniRow = CType(Me.NewRow,NotaAnamnesticaOttieniRow)
            Dim columnValuesArray() As Object = New Object() {Id, DataPartizione, IdEsterno, IdPaziente, DataInserimento, DataModifica, DataModificaEsterno, StatoCodice, StatoDescrizione, AziendaErogante, SistemaErogante, DataNota, DataFineValidita, TipoCodice, TipoDescrizione, Contenuto, TipoContenuto, ContenutoHtml, ContenutoText, Cognome, Nome, Sesso, CodiceFiscale, DataNascita, ComuneNascita, CodiceSanitario, Attributi}
            rowNotaAnamnesticaOttieniRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowNotaAnamnesticaOttieniRow)
            Return rowNotaAnamnesticaOttieniRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As NotaAnamnesticaOttieniDataTable = CType(MyBase.Clone,NotaAnamnesticaOttieniDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New NotaAnamnesticaOttieniDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnId = MyBase.Columns("Id")
            Me.columnDataPartizione = MyBase.Columns("DataPartizione")
            Me.columnIdEsterno = MyBase.Columns("IdEsterno")
            Me.columnIdPaziente = MyBase.Columns("IdPaziente")
            Me.columnDataInserimento = MyBase.Columns("DataInserimento")
            Me.columnDataModifica = MyBase.Columns("DataModifica")
            Me.columnDataModificaEsterno = MyBase.Columns("DataModificaEsterno")
            Me.columnStatoCodice = MyBase.Columns("StatoCodice")
            Me.columnStatoDescrizione = MyBase.Columns("StatoDescrizione")
            Me.columnAziendaErogante = MyBase.Columns("AziendaErogante")
            Me.columnSistemaErogante = MyBase.Columns("SistemaErogante")
            Me.columnDataNota = MyBase.Columns("DataNota")
            Me.columnDataFineValidita = MyBase.Columns("DataFineValidita")
            Me.columnTipoCodice = MyBase.Columns("TipoCodice")
            Me.columnTipoDescrizione = MyBase.Columns("TipoDescrizione")
            Me.columnContenuto = MyBase.Columns("Contenuto")
            Me.columnTipoContenuto = MyBase.Columns("TipoContenuto")
            Me.columnContenutoHtml = MyBase.Columns("ContenutoHtml")
            Me.columnContenutoText = MyBase.Columns("ContenutoText")
            Me.columnCognome = MyBase.Columns("Cognome")
            Me.columnNome = MyBase.Columns("Nome")
            Me.columnSesso = MyBase.Columns("Sesso")
            Me.columnCodiceFiscale = MyBase.Columns("CodiceFiscale")
            Me.columnDataNascita = MyBase.Columns("DataNascita")
            Me.columnComuneNascita = MyBase.Columns("ComuneNascita")
            Me.columnCodiceSanitario = MyBase.Columns("CodiceSanitario")
            Me.columnAttributi = MyBase.Columns("Attributi")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnId = New Global.System.Data.DataColumn("Id", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnId)
            Me.columnDataPartizione = New Global.System.Data.DataColumn("DataPartizione", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDataPartizione)
            Me.columnIdEsterno = New Global.System.Data.DataColumn("IdEsterno", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIdEsterno)
            Me.columnIdPaziente = New Global.System.Data.DataColumn("IdPaziente", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIdPaziente)
            Me.columnDataInserimento = New Global.System.Data.DataColumn("DataInserimento", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDataInserimento)
            Me.columnDataModifica = New Global.System.Data.DataColumn("DataModifica", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDataModifica)
            Me.columnDataModificaEsterno = New Global.System.Data.DataColumn("DataModificaEsterno", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDataModificaEsterno)
            Me.columnStatoCodice = New Global.System.Data.DataColumn("StatoCodice", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStatoCodice)
            Me.columnStatoDescrizione = New Global.System.Data.DataColumn("StatoDescrizione", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStatoDescrizione)
            Me.columnAziendaErogante = New Global.System.Data.DataColumn("AziendaErogante", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAziendaErogante)
            Me.columnSistemaErogante = New Global.System.Data.DataColumn("SistemaErogante", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSistemaErogante)
            Me.columnDataNota = New Global.System.Data.DataColumn("DataNota", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDataNota)
            Me.columnDataFineValidita = New Global.System.Data.DataColumn("DataFineValidita", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDataFineValidita)
            Me.columnTipoCodice = New Global.System.Data.DataColumn("TipoCodice", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTipoCodice)
            Me.columnTipoDescrizione = New Global.System.Data.DataColumn("TipoDescrizione", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTipoDescrizione)
            Me.columnContenuto = New Global.System.Data.DataColumn("Contenuto", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnContenuto)
            Me.columnTipoContenuto = New Global.System.Data.DataColumn("TipoContenuto", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTipoContenuto)
            Me.columnContenutoHtml = New Global.System.Data.DataColumn("ContenutoHtml", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnContenutoHtml)
            Me.columnContenutoText = New Global.System.Data.DataColumn("ContenutoText", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnContenutoText)
            Me.columnCognome = New Global.System.Data.DataColumn("Cognome", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCognome)
            Me.columnNome = New Global.System.Data.DataColumn("Nome", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNome)
            Me.columnSesso = New Global.System.Data.DataColumn("Sesso", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSesso)
            Me.columnCodiceFiscale = New Global.System.Data.DataColumn("CodiceFiscale", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCodiceFiscale)
            Me.columnDataNascita = New Global.System.Data.DataColumn("DataNascita", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDataNascita)
            Me.columnComuneNascita = New Global.System.Data.DataColumn("ComuneNascita", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnComuneNascita)
            Me.columnCodiceSanitario = New Global.System.Data.DataColumn("CodiceSanitario", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCodiceSanitario)
            Me.columnAttributi = New Global.System.Data.DataColumn("Attributi", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAttributi)
            Me.columnId.AllowDBNull = false
            Me.columnDataPartizione.AllowDBNull = false
            Me.columnIdEsterno.AllowDBNull = false
            Me.columnIdEsterno.MaxLength = 64
            Me.columnIdPaziente.AllowDBNull = false
            Me.columnDataInserimento.AllowDBNull = false
            Me.columnDataModifica.AllowDBNull = false
            Me.columnStatoCodice.AllowDBNull = false
            Me.columnStatoDescrizione.ReadOnly = true
            Me.columnStatoDescrizione.MaxLength = 128
            Me.columnAziendaErogante.AllowDBNull = false
            Me.columnAziendaErogante.MaxLength = 16
            Me.columnSistemaErogante.AllowDBNull = false
            Me.columnSistemaErogante.MaxLength = 16
            Me.columnDataNota.AllowDBNull = false
            Me.columnTipoCodice.AllowDBNull = false
            Me.columnTipoCodice.MaxLength = 16
            Me.columnTipoDescrizione.AllowDBNull = false
            Me.columnTipoDescrizione.MaxLength = 256
            Me.columnContenuto.AllowDBNull = false
            Me.columnTipoContenuto.AllowDBNull = false
            Me.columnTipoContenuto.MaxLength = 64
            Me.columnContenutoHtml.AllowDBNull = false
            Me.columnContenutoHtml.MaxLength = 2147483647
            Me.columnContenutoText.AllowDBNull = false
            Me.columnContenutoText.MaxLength = 2147483647
            Me.columnCognome.MaxLength = 64
            Me.columnNome.MaxLength = 64
            Me.columnSesso.MaxLength = 4
            Me.columnCodiceFiscale.MaxLength = 16
            Me.columnComuneNascita.MaxLength = 64
            Me.columnCodiceSanitario.MaxLength = 64
            Me.columnAttributi.MaxLength = 2147483647
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewNotaAnamnesticaOttieniRow() As NotaAnamnesticaOttieniRow
            Return CType(Me.NewRow,NotaAnamnesticaOttieniRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New NotaAnamnesticaOttieniRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(NotaAnamnesticaOttieniRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.NotaAnamnesticaOttieniRowChangedEvent) Is Nothing) Then
                RaiseEvent NotaAnamnesticaOttieniRowChanged(Me, New NotaAnamnesticaOttieniRowChangeEvent(CType(e.Row,NotaAnamnesticaOttieniRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.NotaAnamnesticaOttieniRowChangingEvent) Is Nothing) Then
                RaiseEvent NotaAnamnesticaOttieniRowChanging(Me, New NotaAnamnesticaOttieniRowChangeEvent(CType(e.Row,NotaAnamnesticaOttieniRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.NotaAnamnesticaOttieniRowDeletedEvent) Is Nothing) Then
                RaiseEvent NotaAnamnesticaOttieniRowDeleted(Me, New NotaAnamnesticaOttieniRowChangeEvent(CType(e.Row,NotaAnamnesticaOttieniRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.NotaAnamnesticaOttieniRowDeletingEvent) Is Nothing) Then
                RaiseEvent NotaAnamnesticaOttieniRowDeleting(Me, New NotaAnamnesticaOttieniRowChangeEvent(CType(e.Row,NotaAnamnesticaOttieniRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveNotaAnamnesticaOttieniRow(ByVal row As NotaAnamnesticaOttieniRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As NoteAnamnesticheDataSet = New NoteAnamnesticheDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "NotaAnamnesticaOttieniDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class AttributiNotaAnamnesticaOttieniDataTable
        Inherits Global.System.Data.TypedTableBase(Of AttributiNotaAnamnesticaOttieniRow)
        
        Private columnIdNoteAnamnesticheBase As Global.System.Data.DataColumn
        
        Private columnNome As Global.System.Data.DataColumn
        
        Private columnValore As Global.System.Data.DataColumn
        
        Private columnDataPartizione As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "AttributiNotaAnamnesticaOttieni"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IdNoteAnamnesticheBaseColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIdNoteAnamnesticheBase
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property NomeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNome
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ValoreColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnValore
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DataPartizioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDataPartizione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As AttributiNotaAnamnesticaOttieniRow
            Get
                Return CType(Me.Rows(index),AttributiNotaAnamnesticaOttieniRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event AttributiNotaAnamnesticaOttieniRowChanging As AttributiNotaAnamnesticaOttieniRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event AttributiNotaAnamnesticaOttieniRowChanged As AttributiNotaAnamnesticaOttieniRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event AttributiNotaAnamnesticaOttieniRowDeleting As AttributiNotaAnamnesticaOttieniRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event AttributiNotaAnamnesticaOttieniRowDeleted As AttributiNotaAnamnesticaOttieniRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddAttributiNotaAnamnesticaOttieniRow(ByVal row As AttributiNotaAnamnesticaOttieniRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddAttributiNotaAnamnesticaOttieniRow(ByVal IdNoteAnamnesticheBase As System.Guid, ByVal Nome As String, ByVal Valore As Object, ByVal DataPartizione As Date) As AttributiNotaAnamnesticaOttieniRow
            Dim rowAttributiNotaAnamnesticaOttieniRow As AttributiNotaAnamnesticaOttieniRow = CType(Me.NewRow,AttributiNotaAnamnesticaOttieniRow)
            Dim columnValuesArray() As Object = New Object() {IdNoteAnamnesticheBase, Nome, Valore, DataPartizione}
            rowAttributiNotaAnamnesticaOttieniRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowAttributiNotaAnamnesticaOttieniRow)
            Return rowAttributiNotaAnamnesticaOttieniRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As AttributiNotaAnamnesticaOttieniDataTable = CType(MyBase.Clone,AttributiNotaAnamnesticaOttieniDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New AttributiNotaAnamnesticaOttieniDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnIdNoteAnamnesticheBase = MyBase.Columns("IdNoteAnamnesticheBase")
            Me.columnNome = MyBase.Columns("Nome")
            Me.columnValore = MyBase.Columns("Valore")
            Me.columnDataPartizione = MyBase.Columns("DataPartizione")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnIdNoteAnamnesticheBase = New Global.System.Data.DataColumn("IdNoteAnamnesticheBase", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIdNoteAnamnesticheBase)
            Me.columnNome = New Global.System.Data.DataColumn("Nome", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNome)
            Me.columnValore = New Global.System.Data.DataColumn("Valore", GetType(Object), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnValore)
            Me.columnDataPartizione = New Global.System.Data.DataColumn("DataPartizione", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDataPartizione)
            Me.columnIdNoteAnamnesticheBase.AllowDBNull = false
            Me.columnNome.AllowDBNull = false
            Me.columnNome.MaxLength = 64
            Me.columnDataPartizione.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewAttributiNotaAnamnesticaOttieniRow() As AttributiNotaAnamnesticaOttieniRow
            Return CType(Me.NewRow,AttributiNotaAnamnesticaOttieniRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New AttributiNotaAnamnesticaOttieniRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(AttributiNotaAnamnesticaOttieniRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.AttributiNotaAnamnesticaOttieniRowChangedEvent) Is Nothing) Then
                RaiseEvent AttributiNotaAnamnesticaOttieniRowChanged(Me, New AttributiNotaAnamnesticaOttieniRowChangeEvent(CType(e.Row,AttributiNotaAnamnesticaOttieniRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.AttributiNotaAnamnesticaOttieniRowChangingEvent) Is Nothing) Then
                RaiseEvent AttributiNotaAnamnesticaOttieniRowChanging(Me, New AttributiNotaAnamnesticaOttieniRowChangeEvent(CType(e.Row,AttributiNotaAnamnesticaOttieniRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.AttributiNotaAnamnesticaOttieniRowDeletedEvent) Is Nothing) Then
                RaiseEvent AttributiNotaAnamnesticaOttieniRowDeleted(Me, New AttributiNotaAnamnesticaOttieniRowChangeEvent(CType(e.Row,AttributiNotaAnamnesticaOttieniRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.AttributiNotaAnamnesticaOttieniRowDeletingEvent) Is Nothing) Then
                RaiseEvent AttributiNotaAnamnesticaOttieniRowDeleting(Me, New AttributiNotaAnamnesticaOttieniRowChangeEvent(CType(e.Row,AttributiNotaAnamnesticaOttieniRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveAttributiNotaAnamnesticaOttieniRow(ByVal row As AttributiNotaAnamnesticaOttieniRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As NoteAnamnesticheDataSet = New NoteAnamnesticheDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "AttributiNotaAnamnesticaOttieniDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class NoteAnamnesticheCercaDataTable
        Inherits Global.System.Data.TypedTableBase(Of NoteAnamnesticheCercaRow)
        
        Private columnID As Global.System.Data.DataColumn
        
        Private columnIdEsterno As Global.System.Data.DataColumn
        
        Private columnIdPaziente As Global.System.Data.DataColumn
        
        Private columnDataInserimento As Global.System.Data.DataColumn
        
        Private columnDataModifica As Global.System.Data.DataColumn
        
        Private columnAziendaErogante As Global.System.Data.DataColumn
        
        Private columnSistemaErogante As Global.System.Data.DataColumn
        
        Private columnStatoCodice As Global.System.Data.DataColumn
        
        Private columnContenuto As Global.System.Data.DataColumn
        
        Private columnContenutoText As Global.System.Data.DataColumn
        
        Private columnTipoCodice As Global.System.Data.DataColumn
        
        Private columnTipoDescrizione As Global.System.Data.DataColumn
        
        Private columnTipoContenuto As Global.System.Data.DataColumn
        
        Private columnDataNota As Global.System.Data.DataColumn
        
        Private columnDataFineValidita As Global.System.Data.DataColumn
        
        Private columnDataPartizione As Global.System.Data.DataColumn
        
        Private columnStatoCodiceDesc As Global.System.Data.DataColumn
        
        Private columnCognome As Global.System.Data.DataColumn
        
        Private columnNome As Global.System.Data.DataColumn
        
        Private columnCodiceFiscale As Global.System.Data.DataColumn
        
        Private columnDataNascita As Global.System.Data.DataColumn
        
        Private columnComuneNascita As Global.System.Data.DataColumn
        
        Private columnCodiceSanitario As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "NoteAnamnesticheCerca"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IdEsternoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIdEsterno
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IdPazienteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIdPaziente
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DataInserimentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDataInserimento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DataModificaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDataModifica
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property AziendaEroganteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAziendaErogante
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SistemaEroganteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSistemaErogante
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property StatoCodiceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStatoCodice
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ContenutoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnContenuto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ContenutoTextColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnContenutoText
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property TipoCodiceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTipoCodice
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property TipoDescrizioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTipoDescrizione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property TipoContenutoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTipoContenuto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DataNotaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDataNota
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DataFineValiditaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDataFineValidita
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DataPartizioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDataPartizione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property StatoCodiceDescColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStatoCodiceDesc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CognomeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCognome
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property NomeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNome
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CodiceFiscaleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCodiceFiscale
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DataNascitaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDataNascita
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ComuneNascitaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnComuneNascita
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CodiceSanitarioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCodiceSanitario
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As NoteAnamnesticheCercaRow
            Get
                Return CType(Me.Rows(index),NoteAnamnesticheCercaRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event NoteAnamnesticheCercaRowChanging As NoteAnamnesticheCercaRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event NoteAnamnesticheCercaRowChanged As NoteAnamnesticheCercaRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event NoteAnamnesticheCercaRowDeleting As NoteAnamnesticheCercaRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event NoteAnamnesticheCercaRowDeleted As NoteAnamnesticheCercaRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddNoteAnamnesticheCercaRow(ByVal row As NoteAnamnesticheCercaRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddNoteAnamnesticheCercaRow( _
                    ByVal ID As System.Guid,  _
                    ByVal IdEsterno As String,  _
                    ByVal IdPaziente As System.Guid,  _
                    ByVal DataInserimento As Date,  _
                    ByVal DataModifica As Date,  _
                    ByVal AziendaErogante As String,  _
                    ByVal SistemaErogante As String,  _
                    ByVal StatoCodice As Byte,  _
                    ByVal Contenuto() As Byte,  _
                    ByVal ContenutoText As String,  _
                    ByVal TipoCodice As String,  _
                    ByVal TipoDescrizione As String,  _
                    ByVal TipoContenuto As String,  _
                    ByVal DataNota As Date,  _
                    ByVal DataFineValidita As Date,  _
                    ByVal DataPartizione As Date,  _
                    ByVal StatoCodiceDesc As String,  _
                    ByVal Cognome As String,  _
                    ByVal Nome As String,  _
                    ByVal CodiceFiscale As String,  _
                    ByVal DataNascita As Date,  _
                    ByVal ComuneNascita As String,  _
                    ByVal CodiceSanitario As String) As NoteAnamnesticheCercaRow
            Dim rowNoteAnamnesticheCercaRow As NoteAnamnesticheCercaRow = CType(Me.NewRow,NoteAnamnesticheCercaRow)
            Dim columnValuesArray() As Object = New Object() {ID, IdEsterno, IdPaziente, DataInserimento, DataModifica, AziendaErogante, SistemaErogante, StatoCodice, Contenuto, ContenutoText, TipoCodice, TipoDescrizione, TipoContenuto, DataNota, DataFineValidita, DataPartizione, StatoCodiceDesc, Cognome, Nome, CodiceFiscale, DataNascita, ComuneNascita, CodiceSanitario}
            rowNoteAnamnesticheCercaRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowNoteAnamnesticheCercaRow)
            Return rowNoteAnamnesticheCercaRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As NoteAnamnesticheCercaDataTable = CType(MyBase.Clone,NoteAnamnesticheCercaDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New NoteAnamnesticheCercaDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID = MyBase.Columns("ID")
            Me.columnIdEsterno = MyBase.Columns("IdEsterno")
            Me.columnIdPaziente = MyBase.Columns("IdPaziente")
            Me.columnDataInserimento = MyBase.Columns("DataInserimento")
            Me.columnDataModifica = MyBase.Columns("DataModifica")
            Me.columnAziendaErogante = MyBase.Columns("AziendaErogante")
            Me.columnSistemaErogante = MyBase.Columns("SistemaErogante")
            Me.columnStatoCodice = MyBase.Columns("StatoCodice")
            Me.columnContenuto = MyBase.Columns("Contenuto")
            Me.columnContenutoText = MyBase.Columns("ContenutoText")
            Me.columnTipoCodice = MyBase.Columns("TipoCodice")
            Me.columnTipoDescrizione = MyBase.Columns("TipoDescrizione")
            Me.columnTipoContenuto = MyBase.Columns("TipoContenuto")
            Me.columnDataNota = MyBase.Columns("DataNota")
            Me.columnDataFineValidita = MyBase.Columns("DataFineValidita")
            Me.columnDataPartizione = MyBase.Columns("DataPartizione")
            Me.columnStatoCodiceDesc = MyBase.Columns("StatoCodiceDesc")
            Me.columnCognome = MyBase.Columns("Cognome")
            Me.columnNome = MyBase.Columns("Nome")
            Me.columnCodiceFiscale = MyBase.Columns("CodiceFiscale")
            Me.columnDataNascita = MyBase.Columns("DataNascita")
            Me.columnComuneNascita = MyBase.Columns("ComuneNascita")
            Me.columnCodiceSanitario = MyBase.Columns("CodiceSanitario")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID = New Global.System.Data.DataColumn("ID", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID)
            Me.columnIdEsterno = New Global.System.Data.DataColumn("IdEsterno", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIdEsterno)
            Me.columnIdPaziente = New Global.System.Data.DataColumn("IdPaziente", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIdPaziente)
            Me.columnDataInserimento = New Global.System.Data.DataColumn("DataInserimento", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDataInserimento)
            Me.columnDataModifica = New Global.System.Data.DataColumn("DataModifica", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDataModifica)
            Me.columnAziendaErogante = New Global.System.Data.DataColumn("AziendaErogante", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAziendaErogante)
            Me.columnSistemaErogante = New Global.System.Data.DataColumn("SistemaErogante", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSistemaErogante)
            Me.columnStatoCodice = New Global.System.Data.DataColumn("StatoCodice", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStatoCodice)
            Me.columnContenuto = New Global.System.Data.DataColumn("Contenuto", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnContenuto)
            Me.columnContenutoText = New Global.System.Data.DataColumn("ContenutoText", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnContenutoText)
            Me.columnTipoCodice = New Global.System.Data.DataColumn("TipoCodice", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTipoCodice)
            Me.columnTipoDescrizione = New Global.System.Data.DataColumn("TipoDescrizione", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTipoDescrizione)
            Me.columnTipoContenuto = New Global.System.Data.DataColumn("TipoContenuto", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTipoContenuto)
            Me.columnDataNota = New Global.System.Data.DataColumn("DataNota", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDataNota)
            Me.columnDataFineValidita = New Global.System.Data.DataColumn("DataFineValidita", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDataFineValidita)
            Me.columnDataPartizione = New Global.System.Data.DataColumn("DataPartizione", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDataPartizione)
            Me.columnStatoCodiceDesc = New Global.System.Data.DataColumn("StatoCodiceDesc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStatoCodiceDesc)
            Me.columnCognome = New Global.System.Data.DataColumn("Cognome", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCognome)
            Me.columnNome = New Global.System.Data.DataColumn("Nome", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNome)
            Me.columnCodiceFiscale = New Global.System.Data.DataColumn("CodiceFiscale", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCodiceFiscale)
            Me.columnDataNascita = New Global.System.Data.DataColumn("DataNascita", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDataNascita)
            Me.columnComuneNascita = New Global.System.Data.DataColumn("ComuneNascita", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnComuneNascita)
            Me.columnCodiceSanitario = New Global.System.Data.DataColumn("CodiceSanitario", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCodiceSanitario)
            Me.columnID.AllowDBNull = false
            Me.columnIdEsterno.AllowDBNull = false
            Me.columnIdEsterno.MaxLength = 64
            Me.columnIdPaziente.AllowDBNull = false
            Me.columnDataInserimento.AllowDBNull = false
            Me.columnDataModifica.AllowDBNull = false
            Me.columnAziendaErogante.AllowDBNull = false
            Me.columnAziendaErogante.MaxLength = 16
            Me.columnSistemaErogante.AllowDBNull = false
            Me.columnSistemaErogante.MaxLength = 16
            Me.columnStatoCodice.AllowDBNull = false
            Me.columnContenuto.AllowDBNull = false
            Me.columnContenutoText.AllowDBNull = false
            Me.columnContenutoText.MaxLength = 2147483647
            Me.columnTipoCodice.AllowDBNull = false
            Me.columnTipoCodice.MaxLength = 16
            Me.columnTipoDescrizione.AllowDBNull = false
            Me.columnTipoDescrizione.MaxLength = 256
            Me.columnTipoContenuto.AllowDBNull = false
            Me.columnTipoContenuto.MaxLength = 64
            Me.columnDataNota.AllowDBNull = false
            Me.columnDataPartizione.AllowDBNull = false
            Me.columnStatoCodiceDesc.ReadOnly = true
            Me.columnStatoCodiceDesc.MaxLength = 10
            Me.columnCognome.MaxLength = 64
            Me.columnNome.MaxLength = 64
            Me.columnCodiceFiscale.MaxLength = 16
            Me.columnComuneNascita.ReadOnly = true
            Me.columnComuneNascita.MaxLength = 128
            Me.columnCodiceSanitario.MaxLength = 16
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewNoteAnamnesticheCercaRow() As NoteAnamnesticheCercaRow
            Return CType(Me.NewRow,NoteAnamnesticheCercaRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New NoteAnamnesticheCercaRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(NoteAnamnesticheCercaRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.NoteAnamnesticheCercaRowChangedEvent) Is Nothing) Then
                RaiseEvent NoteAnamnesticheCercaRowChanged(Me, New NoteAnamnesticheCercaRowChangeEvent(CType(e.Row,NoteAnamnesticheCercaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.NoteAnamnesticheCercaRowChangingEvent) Is Nothing) Then
                RaiseEvent NoteAnamnesticheCercaRowChanging(Me, New NoteAnamnesticheCercaRowChangeEvent(CType(e.Row,NoteAnamnesticheCercaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.NoteAnamnesticheCercaRowDeletedEvent) Is Nothing) Then
                RaiseEvent NoteAnamnesticheCercaRowDeleted(Me, New NoteAnamnesticheCercaRowChangeEvent(CType(e.Row,NoteAnamnesticheCercaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.NoteAnamnesticheCercaRowDeletingEvent) Is Nothing) Then
                RaiseEvent NoteAnamnesticheCercaRowDeleting(Me, New NoteAnamnesticheCercaRowChangeEvent(CType(e.Row,NoteAnamnesticheCercaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveNoteAnamnesticheCercaRow(ByVal row As NoteAnamnesticheCercaRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As NoteAnamnesticheDataSet = New NoteAnamnesticheDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "NoteAnamnesticheCercaDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class NoteAnamnesticheUltimiArriviDataTable
        Inherits Global.System.Data.TypedTableBase(Of NoteAnamnesticheUltimiArriviRow)
        
        Private columnAziendaErogante As Global.System.Data.DataColumn
        
        Private columnSistemaErogante As Global.System.Data.DataColumn
        
        Private columnDataModifica As Global.System.Data.DataColumn
        
        Private columnCount As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "NoteAnamnesticheUltimiArrivi"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property AziendaEroganteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAziendaErogante
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SistemaEroganteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSistemaErogante
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DataModificaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDataModifica
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As NoteAnamnesticheUltimiArriviRow
            Get
                Return CType(Me.Rows(index),NoteAnamnesticheUltimiArriviRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event NoteAnamnesticheUltimiArriviRowChanging As NoteAnamnesticheUltimiArriviRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event NoteAnamnesticheUltimiArriviRowChanged As NoteAnamnesticheUltimiArriviRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event NoteAnamnesticheUltimiArriviRowDeleting As NoteAnamnesticheUltimiArriviRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event NoteAnamnesticheUltimiArriviRowDeleted As NoteAnamnesticheUltimiArriviRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddNoteAnamnesticheUltimiArriviRow(ByVal row As NoteAnamnesticheUltimiArriviRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddNoteAnamnesticheUltimiArriviRow(ByVal AziendaErogante As String, ByVal SistemaErogante As String, ByVal DataModifica As Date, ByVal Count As Integer) As NoteAnamnesticheUltimiArriviRow
            Dim rowNoteAnamnesticheUltimiArriviRow As NoteAnamnesticheUltimiArriviRow = CType(Me.NewRow,NoteAnamnesticheUltimiArriviRow)
            Dim columnValuesArray() As Object = New Object() {AziendaErogante, SistemaErogante, DataModifica, Count}
            rowNoteAnamnesticheUltimiArriviRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowNoteAnamnesticheUltimiArriviRow)
            Return rowNoteAnamnesticheUltimiArriviRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As NoteAnamnesticheUltimiArriviDataTable = CType(MyBase.Clone,NoteAnamnesticheUltimiArriviDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New NoteAnamnesticheUltimiArriviDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnAziendaErogante = MyBase.Columns("AziendaErogante")
            Me.columnSistemaErogante = MyBase.Columns("SistemaErogante")
            Me.columnDataModifica = MyBase.Columns("DataModifica")
            Me.columnCount = MyBase.Columns("Count")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnAziendaErogante = New Global.System.Data.DataColumn("AziendaErogante", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAziendaErogante)
            Me.columnSistemaErogante = New Global.System.Data.DataColumn("SistemaErogante", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSistemaErogante)
            Me.columnDataModifica = New Global.System.Data.DataColumn("DataModifica", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDataModifica)
            Me.columnCount = New Global.System.Data.DataColumn("Count", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCount)
            Me.columnAziendaErogante.AllowDBNull = false
            Me.columnAziendaErogante.MaxLength = 16
            Me.columnSistemaErogante.AllowDBNull = false
            Me.columnSistemaErogante.MaxLength = 16
            Me.columnDataModifica.ReadOnly = true
            Me.columnCount.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewNoteAnamnesticheUltimiArriviRow() As NoteAnamnesticheUltimiArriviRow
            Return CType(Me.NewRow,NoteAnamnesticheUltimiArriviRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New NoteAnamnesticheUltimiArriviRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(NoteAnamnesticheUltimiArriviRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.NoteAnamnesticheUltimiArriviRowChangedEvent) Is Nothing) Then
                RaiseEvent NoteAnamnesticheUltimiArriviRowChanged(Me, New NoteAnamnesticheUltimiArriviRowChangeEvent(CType(e.Row,NoteAnamnesticheUltimiArriviRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.NoteAnamnesticheUltimiArriviRowChangingEvent) Is Nothing) Then
                RaiseEvent NoteAnamnesticheUltimiArriviRowChanging(Me, New NoteAnamnesticheUltimiArriviRowChangeEvent(CType(e.Row,NoteAnamnesticheUltimiArriviRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.NoteAnamnesticheUltimiArriviRowDeletedEvent) Is Nothing) Then
                RaiseEvent NoteAnamnesticheUltimiArriviRowDeleted(Me, New NoteAnamnesticheUltimiArriviRowChangeEvent(CType(e.Row,NoteAnamnesticheUltimiArriviRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.NoteAnamnesticheUltimiArriviRowDeletingEvent) Is Nothing) Then
                RaiseEvent NoteAnamnesticheUltimiArriviRowDeleting(Me, New NoteAnamnesticheUltimiArriviRowChangeEvent(CType(e.Row,NoteAnamnesticheUltimiArriviRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveNoteAnamnesticheUltimiArriviRow(ByVal row As NoteAnamnesticheUltimiArriviRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As NoteAnamnesticheDataSet = New NoteAnamnesticheDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "NoteAnamnesticheUltimiArriviDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class NoteAnamnesticheSinotticoDataTable
        Inherits Global.System.Data.TypedTableBase(Of NoteAnamnesticheSinotticoRow)
        
        Private columnIsTotale As Global.System.Data.DataColumn
        
        Private columnIsSubTotale As Global.System.Data.DataColumn
        
        Private columnAziendaSistemaErogante As Global.System.Data.DataColumn
        
        Private columnSubProcessoTipo As Global.System.Data.DataColumn
        
        Private columnInCorso As Global.System.Data.DataColumn
        
        Private columnCompletata As Global.System.Data.DataColumn
        
        Private columnVariata As Global.System.Data.DataColumn
        
        Private columnCancellata As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "NoteAnamnesticheSinottico"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IsTotaleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIsTotale
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IsSubTotaleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIsSubTotale
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property AziendaSistemaEroganteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAziendaSistemaErogante
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SubProcessoTipoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSubProcessoTipo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property InCorsoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInCorso
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CompletataColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCompletata
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property VariataColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVariata
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CancellataColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCancellata
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As NoteAnamnesticheSinotticoRow
            Get
                Return CType(Me.Rows(index),NoteAnamnesticheSinotticoRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event NoteAnamnesticheSinotticoRowChanging As NoteAnamnesticheSinotticoRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event NoteAnamnesticheSinotticoRowChanged As NoteAnamnesticheSinotticoRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event NoteAnamnesticheSinotticoRowDeleting As NoteAnamnesticheSinotticoRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event NoteAnamnesticheSinotticoRowDeleted As NoteAnamnesticheSinotticoRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddNoteAnamnesticheSinotticoRow(ByVal row As NoteAnamnesticheSinotticoRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddNoteAnamnesticheSinotticoRow(ByVal IsTotale As Byte, ByVal IsSubTotale As Byte, ByVal AziendaSistemaErogante As String, ByVal SubProcessoTipo As String, ByVal InCorso As Integer, ByVal Completata As Integer, ByVal Variata As Integer, ByVal Cancellata As Integer) As NoteAnamnesticheSinotticoRow
            Dim rowNoteAnamnesticheSinotticoRow As NoteAnamnesticheSinotticoRow = CType(Me.NewRow,NoteAnamnesticheSinotticoRow)
            Dim columnValuesArray() As Object = New Object() {IsTotale, IsSubTotale, AziendaSistemaErogante, SubProcessoTipo, InCorso, Completata, Variata, Cancellata}
            rowNoteAnamnesticheSinotticoRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowNoteAnamnesticheSinotticoRow)
            Return rowNoteAnamnesticheSinotticoRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As NoteAnamnesticheSinotticoDataTable = CType(MyBase.Clone,NoteAnamnesticheSinotticoDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New NoteAnamnesticheSinotticoDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnIsTotale = MyBase.Columns("IsTotale")
            Me.columnIsSubTotale = MyBase.Columns("IsSubTotale")
            Me.columnAziendaSistemaErogante = MyBase.Columns("AziendaSistemaErogante")
            Me.columnSubProcessoTipo = MyBase.Columns("SubProcessoTipo")
            Me.columnInCorso = MyBase.Columns("InCorso")
            Me.columnCompletata = MyBase.Columns("Completata")
            Me.columnVariata = MyBase.Columns("Variata")
            Me.columnCancellata = MyBase.Columns("Cancellata")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnIsTotale = New Global.System.Data.DataColumn("IsTotale", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIsTotale)
            Me.columnIsSubTotale = New Global.System.Data.DataColumn("IsSubTotale", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIsSubTotale)
            Me.columnAziendaSistemaErogante = New Global.System.Data.DataColumn("AziendaSistemaErogante", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAziendaSistemaErogante)
            Me.columnSubProcessoTipo = New Global.System.Data.DataColumn("SubProcessoTipo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSubProcessoTipo)
            Me.columnInCorso = New Global.System.Data.DataColumn("InCorso", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInCorso)
            Me.columnCompletata = New Global.System.Data.DataColumn("Completata", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCompletata)
            Me.columnVariata = New Global.System.Data.DataColumn("Variata", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVariata)
            Me.columnCancellata = New Global.System.Data.DataColumn("Cancellata", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCancellata)
            Me.columnIsTotale.ReadOnly = true
            Me.columnIsSubTotale.ReadOnly = true
            Me.columnAziendaSistemaErogante.ReadOnly = true
            Me.columnAziendaSistemaErogante.MaxLength = 33
            Me.columnSubProcessoTipo.ReadOnly = true
            Me.columnSubProcessoTipo.MaxLength = 16
            Me.columnInCorso.ReadOnly = true
            Me.columnCompletata.ReadOnly = true
            Me.columnVariata.ReadOnly = true
            Me.columnCancellata.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewNoteAnamnesticheSinotticoRow() As NoteAnamnesticheSinotticoRow
            Return CType(Me.NewRow,NoteAnamnesticheSinotticoRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New NoteAnamnesticheSinotticoRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(NoteAnamnesticheSinotticoRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.NoteAnamnesticheSinotticoRowChangedEvent) Is Nothing) Then
                RaiseEvent NoteAnamnesticheSinotticoRowChanged(Me, New NoteAnamnesticheSinotticoRowChangeEvent(CType(e.Row,NoteAnamnesticheSinotticoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.NoteAnamnesticheSinotticoRowChangingEvent) Is Nothing) Then
                RaiseEvent NoteAnamnesticheSinotticoRowChanging(Me, New NoteAnamnesticheSinotticoRowChangeEvent(CType(e.Row,NoteAnamnesticheSinotticoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.NoteAnamnesticheSinotticoRowDeletedEvent) Is Nothing) Then
                RaiseEvent NoteAnamnesticheSinotticoRowDeleted(Me, New NoteAnamnesticheSinotticoRowChangeEvent(CType(e.Row,NoteAnamnesticheSinotticoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.NoteAnamnesticheSinotticoRowDeletingEvent) Is Nothing) Then
                RaiseEvent NoteAnamnesticheSinotticoRowDeleting(Me, New NoteAnamnesticheSinotticoRowChangeEvent(CType(e.Row,NoteAnamnesticheSinotticoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveNoteAnamnesticheSinotticoRow(ByVal row As NoteAnamnesticheSinotticoRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As NoteAnamnesticheDataSet = New NoteAnamnesticheDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "NoteAnamnesticheSinotticoDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class NoteAnamnesticheRiassociazioneListaDataTable
        Inherits Global.System.Data.TypedTableBase(Of NoteAnamnesticheRiassociazioneListaRow)
        
        Private columnID As Global.System.Data.DataColumn
        
        Private columnIdEsterno As Global.System.Data.DataColumn
        
        Private columnIdPaziente As Global.System.Data.DataColumn
        
        Private columnDataInserimento As Global.System.Data.DataColumn
        
        Private columnDataModifica As Global.System.Data.DataColumn
        
        Private columnAziendaErogante As Global.System.Data.DataColumn
        
        Private columnSistemaErogante As Global.System.Data.DataColumn
        
        Private columnDataNota As Global.System.Data.DataColumn
        
        Private columnStatoCodice As Global.System.Data.DataColumn
        
        Private columnDataFineValidita As Global.System.Data.DataColumn
        
        Private columnDataPartizione As Global.System.Data.DataColumn
        
        Private columnContenuto As Global.System.Data.DataColumn
        
        Private columnContenutoText As Global.System.Data.DataColumn
        
        Private columnTipoCodice As Global.System.Data.DataColumn
        
        Private columnTipoDescrizione As Global.System.Data.DataColumn
        
        Private columnTipoContenuto As Global.System.Data.DataColumn
        
        Private columnStatoCodiceDesc As Global.System.Data.DataColumn
        
        Private columnCognome As Global.System.Data.DataColumn
        
        Private columnNome As Global.System.Data.DataColumn
        
        Private columnSesso As Global.System.Data.DataColumn
        
        Private columnCodiceFiscale As Global.System.Data.DataColumn
        
        Private columnDataNascita As Global.System.Data.DataColumn
        
        Private columnComuneNascita As Global.System.Data.DataColumn
        
        Private columnProvinciaNascita As Global.System.Data.DataColumn
        
        Private columnCodiceAnagraficaCentrale As Global.System.Data.DataColumn
        
        Private columnNomeAnagraficaCentrale As Global.System.Data.DataColumn
        
        Private columnSACCognome As Global.System.Data.DataColumn
        
        Private columnSACNome As Global.System.Data.DataColumn
        
        Private columnSACCodiceFiscale As Global.System.Data.DataColumn
        
        Private columnSACDataNascita As Global.System.Data.DataColumn
        
        Private columnSACComuneNascita As Global.System.Data.DataColumn
        
        Private columnSACProvincaNascita As Global.System.Data.DataColumn
        
        Private columnSACProvenienza As Global.System.Data.DataColumn
        
        Private columnSACIdProvenienza As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "NoteAnamnesticheRiassociazioneLista"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IdEsternoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIdEsterno
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IdPazienteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIdPaziente
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DataInserimentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDataInserimento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DataModificaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDataModifica
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property AziendaEroganteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAziendaErogante
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SistemaEroganteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSistemaErogante
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DataNotaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDataNota
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property StatoCodiceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStatoCodice
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DataFineValiditaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDataFineValidita
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DataPartizioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDataPartizione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ContenutoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnContenuto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ContenutoTextColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnContenutoText
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property TipoCodiceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTipoCodice
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property TipoDescrizioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTipoDescrizione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property TipoContenutoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTipoContenuto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property StatoCodiceDescColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStatoCodiceDesc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CognomeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCognome
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property NomeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNome
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SessoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSesso
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CodiceFiscaleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCodiceFiscale
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DataNascitaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDataNascita
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ComuneNascitaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnComuneNascita
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ProvinciaNascitaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProvinciaNascita
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CodiceAnagraficaCentraleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCodiceAnagraficaCentrale
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property NomeAnagraficaCentraleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNomeAnagraficaCentrale
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SACCognomeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSACCognome
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SACNomeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSACNome
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SACCodiceFiscaleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSACCodiceFiscale
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SACDataNascitaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSACDataNascita
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SACComuneNascitaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSACComuneNascita
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SACProvincaNascitaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSACProvincaNascita
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SACProvenienzaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSACProvenienza
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SACIdProvenienzaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSACIdProvenienza
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As NoteAnamnesticheRiassociazioneListaRow
            Get
                Return CType(Me.Rows(index),NoteAnamnesticheRiassociazioneListaRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event NoteAnamnesticheRiassociazioneListaRowChanging As NoteAnamnesticheRiassociazioneListaRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event NoteAnamnesticheRiassociazioneListaRowChanged As NoteAnamnesticheRiassociazioneListaRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event NoteAnamnesticheRiassociazioneListaRowDeleting As NoteAnamnesticheRiassociazioneListaRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event NoteAnamnesticheRiassociazioneListaRowDeleted As NoteAnamnesticheRiassociazioneListaRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddNoteAnamnesticheRiassociazioneListaRow(ByVal row As NoteAnamnesticheRiassociazioneListaRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddNoteAnamnesticheRiassociazioneListaRow( _
                    ByVal ID As System.Guid,  _
                    ByVal IdEsterno As String,  _
                    ByVal IdPaziente As System.Guid,  _
                    ByVal DataInserimento As Date,  _
                    ByVal DataModifica As Date,  _
                    ByVal AziendaErogante As String,  _
                    ByVal SistemaErogante As String,  _
                    ByVal DataNota As Date,  _
                    ByVal StatoCodice As Byte,  _
                    ByVal DataFineValidita As Date,  _
                    ByVal DataPartizione As Date,  _
                    ByVal Contenuto() As Byte,  _
                    ByVal ContenutoText As String,  _
                    ByVal TipoCodice As String,  _
                    ByVal TipoDescrizione As String,  _
                    ByVal TipoContenuto As String,  _
                    ByVal StatoCodiceDesc As String,  _
                    ByVal Cognome As String,  _
                    ByVal Nome As String,  _
                    ByVal Sesso As String,  _
                    ByVal CodiceFiscale As String,  _
                    ByVal DataNascita As Date,  _
                    ByVal ComuneNascita As String,  _
                    ByVal ProvinciaNascita As String,  _
                    ByVal CodiceAnagraficaCentrale As String,  _
                    ByVal NomeAnagraficaCentrale As String,  _
                    ByVal SACCognome As String,  _
                    ByVal SACNome As String,  _
                    ByVal SACCodiceFiscale As String,  _
                    ByVal SACDataNascita As Date,  _
                    ByVal SACComuneNascita As String,  _
                    ByVal SACProvincaNascita As String,  _
                    ByVal SACProvenienza As String,  _
                    ByVal SACIdProvenienza As String) As NoteAnamnesticheRiassociazioneListaRow
            Dim rowNoteAnamnesticheRiassociazioneListaRow As NoteAnamnesticheRiassociazioneListaRow = CType(Me.NewRow,NoteAnamnesticheRiassociazioneListaRow)
            Dim columnValuesArray() As Object = New Object() {ID, IdEsterno, IdPaziente, DataInserimento, DataModifica, AziendaErogante, SistemaErogante, DataNota, StatoCodice, DataFineValidita, DataPartizione, Contenuto, ContenutoText, TipoCodice, TipoDescrizione, TipoContenuto, StatoCodiceDesc, Cognome, Nome, Sesso, CodiceFiscale, DataNascita, ComuneNascita, ProvinciaNascita, CodiceAnagraficaCentrale, NomeAnagraficaCentrale, SACCognome, SACNome, SACCodiceFiscale, SACDataNascita, SACComuneNascita, SACProvincaNascita, SACProvenienza, SACIdProvenienza}
            rowNoteAnamnesticheRiassociazioneListaRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowNoteAnamnesticheRiassociazioneListaRow)
            Return rowNoteAnamnesticheRiassociazioneListaRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As NoteAnamnesticheRiassociazioneListaDataTable = CType(MyBase.Clone,NoteAnamnesticheRiassociazioneListaDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New NoteAnamnesticheRiassociazioneListaDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID = MyBase.Columns("ID")
            Me.columnIdEsterno = MyBase.Columns("IdEsterno")
            Me.columnIdPaziente = MyBase.Columns("IdPaziente")
            Me.columnDataInserimento = MyBase.Columns("DataInserimento")
            Me.columnDataModifica = MyBase.Columns("DataModifica")
            Me.columnAziendaErogante = MyBase.Columns("AziendaErogante")
            Me.columnSistemaErogante = MyBase.Columns("SistemaErogante")
            Me.columnDataNota = MyBase.Columns("DataNota")
            Me.columnStatoCodice = MyBase.Columns("StatoCodice")
            Me.columnDataFineValidita = MyBase.Columns("DataFineValidita")
            Me.columnDataPartizione = MyBase.Columns("DataPartizione")
            Me.columnContenuto = MyBase.Columns("Contenuto")
            Me.columnContenutoText = MyBase.Columns("ContenutoText")
            Me.columnTipoCodice = MyBase.Columns("TipoCodice")
            Me.columnTipoDescrizione = MyBase.Columns("TipoDescrizione")
            Me.columnTipoContenuto = MyBase.Columns("TipoContenuto")
            Me.columnStatoCodiceDesc = MyBase.Columns("StatoCodiceDesc")
            Me.columnCognome = MyBase.Columns("Cognome")
            Me.columnNome = MyBase.Columns("Nome")
            Me.columnSesso = MyBase.Columns("Sesso")
            Me.columnCodiceFiscale = MyBase.Columns("CodiceFiscale")
            Me.columnDataNascita = MyBase.Columns("DataNascita")
            Me.columnComuneNascita = MyBase.Columns("ComuneNascita")
            Me.columnProvinciaNascita = MyBase.Columns("ProvinciaNascita")
            Me.columnCodiceAnagraficaCentrale = MyBase.Columns("CodiceAnagraficaCentrale")
            Me.columnNomeAnagraficaCentrale = MyBase.Columns("NomeAnagraficaCentrale")
            Me.columnSACCognome = MyBase.Columns("SACCognome")
            Me.columnSACNome = MyBase.Columns("SACNome")
            Me.columnSACCodiceFiscale = MyBase.Columns("SACCodiceFiscale")
            Me.columnSACDataNascita = MyBase.Columns("SACDataNascita")
            Me.columnSACComuneNascita = MyBase.Columns("SACComuneNascita")
            Me.columnSACProvincaNascita = MyBase.Columns("SACProvincaNascita")
            Me.columnSACProvenienza = MyBase.Columns("SACProvenienza")
            Me.columnSACIdProvenienza = MyBase.Columns("SACIdProvenienza")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID = New Global.System.Data.DataColumn("ID", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID)
            Me.columnIdEsterno = New Global.System.Data.DataColumn("IdEsterno", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIdEsterno)
            Me.columnIdPaziente = New Global.System.Data.DataColumn("IdPaziente", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIdPaziente)
            Me.columnDataInserimento = New Global.System.Data.DataColumn("DataInserimento", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDataInserimento)
            Me.columnDataModifica = New Global.System.Data.DataColumn("DataModifica", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDataModifica)
            Me.columnAziendaErogante = New Global.System.Data.DataColumn("AziendaErogante", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAziendaErogante)
            Me.columnSistemaErogante = New Global.System.Data.DataColumn("SistemaErogante", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSistemaErogante)
            Me.columnDataNota = New Global.System.Data.DataColumn("DataNota", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDataNota)
            Me.columnStatoCodice = New Global.System.Data.DataColumn("StatoCodice", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStatoCodice)
            Me.columnDataFineValidita = New Global.System.Data.DataColumn("DataFineValidita", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDataFineValidita)
            Me.columnDataPartizione = New Global.System.Data.DataColumn("DataPartizione", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDataPartizione)
            Me.columnContenuto = New Global.System.Data.DataColumn("Contenuto", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnContenuto)
            Me.columnContenutoText = New Global.System.Data.DataColumn("ContenutoText", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnContenutoText)
            Me.columnTipoCodice = New Global.System.Data.DataColumn("TipoCodice", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTipoCodice)
            Me.columnTipoDescrizione = New Global.System.Data.DataColumn("TipoDescrizione", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTipoDescrizione)
            Me.columnTipoContenuto = New Global.System.Data.DataColumn("TipoContenuto", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTipoContenuto)
            Me.columnStatoCodiceDesc = New Global.System.Data.DataColumn("StatoCodiceDesc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStatoCodiceDesc)
            Me.columnCognome = New Global.System.Data.DataColumn("Cognome", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCognome)
            Me.columnNome = New Global.System.Data.DataColumn("Nome", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNome)
            Me.columnSesso = New Global.System.Data.DataColumn("Sesso", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSesso)
            Me.columnCodiceFiscale = New Global.System.Data.DataColumn("CodiceFiscale", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCodiceFiscale)
            Me.columnDataNascita = New Global.System.Data.DataColumn("DataNascita", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDataNascita)
            Me.columnComuneNascita = New Global.System.Data.DataColumn("ComuneNascita", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnComuneNascita)
            Me.columnProvinciaNascita = New Global.System.Data.DataColumn("ProvinciaNascita", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProvinciaNascita)
            Me.columnCodiceAnagraficaCentrale = New Global.System.Data.DataColumn("CodiceAnagraficaCentrale", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCodiceAnagraficaCentrale)
            Me.columnNomeAnagraficaCentrale = New Global.System.Data.DataColumn("NomeAnagraficaCentrale", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNomeAnagraficaCentrale)
            Me.columnSACCognome = New Global.System.Data.DataColumn("SACCognome", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSACCognome)
            Me.columnSACNome = New Global.System.Data.DataColumn("SACNome", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSACNome)
            Me.columnSACCodiceFiscale = New Global.System.Data.DataColumn("SACCodiceFiscale", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSACCodiceFiscale)
            Me.columnSACDataNascita = New Global.System.Data.DataColumn("SACDataNascita", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSACDataNascita)
            Me.columnSACComuneNascita = New Global.System.Data.DataColumn("SACComuneNascita", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSACComuneNascita)
            Me.columnSACProvincaNascita = New Global.System.Data.DataColumn("SACProvincaNascita", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSACProvincaNascita)
            Me.columnSACProvenienza = New Global.System.Data.DataColumn("SACProvenienza", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSACProvenienza)
            Me.columnSACIdProvenienza = New Global.System.Data.DataColumn("SACIdProvenienza", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSACIdProvenienza)
            Me.columnID.AllowDBNull = false
            Me.columnIdEsterno.AllowDBNull = false
            Me.columnIdEsterno.MaxLength = 64
            Me.columnIdPaziente.AllowDBNull = false
            Me.columnDataInserimento.AllowDBNull = false
            Me.columnDataModifica.AllowDBNull = false
            Me.columnAziendaErogante.AllowDBNull = false
            Me.columnAziendaErogante.MaxLength = 16
            Me.columnSistemaErogante.AllowDBNull = false
            Me.columnSistemaErogante.MaxLength = 16
            Me.columnDataNota.AllowDBNull = false
            Me.columnStatoCodice.AllowDBNull = false
            Me.columnDataPartizione.AllowDBNull = false
            Me.columnContenuto.AllowDBNull = false
            Me.columnContenutoText.AllowDBNull = false
            Me.columnContenutoText.MaxLength = 2147483647
            Me.columnTipoCodice.AllowDBNull = false
            Me.columnTipoCodice.MaxLength = 16
            Me.columnTipoDescrizione.AllowDBNull = false
            Me.columnTipoDescrizione.MaxLength = 256
            Me.columnTipoContenuto.AllowDBNull = false
            Me.columnTipoContenuto.MaxLength = 64
            Me.columnStatoCodiceDesc.ReadOnly = true
            Me.columnStatoCodiceDesc.MaxLength = 128
            Me.columnCognome.ReadOnly = true
            Me.columnCognome.MaxLength = 64
            Me.columnNome.ReadOnly = true
            Me.columnNome.MaxLength = 64
            Me.columnSesso.ReadOnly = true
            Me.columnSesso.MaxLength = 1
            Me.columnCodiceFiscale.ReadOnly = true
            Me.columnCodiceFiscale.MaxLength = 16
            Me.columnDataNascita.ReadOnly = true
            Me.columnComuneNascita.ReadOnly = true
            Me.columnComuneNascita.MaxLength = 64
            Me.columnProvinciaNascita.ReadOnly = true
            Me.columnProvinciaNascita.MaxLength = 4
            Me.columnCodiceAnagraficaCentrale.ReadOnly = true
            Me.columnCodiceAnagraficaCentrale.MaxLength = 64
            Me.columnNomeAnagraficaCentrale.ReadOnly = true
            Me.columnNomeAnagraficaCentrale.MaxLength = 64
            Me.columnSACCognome.MaxLength = 64
            Me.columnSACNome.MaxLength = 64
            Me.columnSACCodiceFiscale.MaxLength = 16
            Me.columnSACComuneNascita.ReadOnly = true
            Me.columnSACComuneNascita.MaxLength = 128
            Me.columnSACProvincaNascita.ReadOnly = true
            Me.columnSACProvincaNascita.MaxLength = 2
            Me.columnSACProvenienza.MaxLength = 16
            Me.columnSACIdProvenienza.MaxLength = 64
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewNoteAnamnesticheRiassociazioneListaRow() As NoteAnamnesticheRiassociazioneListaRow
            Return CType(Me.NewRow,NoteAnamnesticheRiassociazioneListaRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New NoteAnamnesticheRiassociazioneListaRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(NoteAnamnesticheRiassociazioneListaRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.NoteAnamnesticheRiassociazioneListaRowChangedEvent) Is Nothing) Then
                RaiseEvent NoteAnamnesticheRiassociazioneListaRowChanged(Me, New NoteAnamnesticheRiassociazioneListaRowChangeEvent(CType(e.Row,NoteAnamnesticheRiassociazioneListaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.NoteAnamnesticheRiassociazioneListaRowChangingEvent) Is Nothing) Then
                RaiseEvent NoteAnamnesticheRiassociazioneListaRowChanging(Me, New NoteAnamnesticheRiassociazioneListaRowChangeEvent(CType(e.Row,NoteAnamnesticheRiassociazioneListaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.NoteAnamnesticheRiassociazioneListaRowDeletedEvent) Is Nothing) Then
                RaiseEvent NoteAnamnesticheRiassociazioneListaRowDeleted(Me, New NoteAnamnesticheRiassociazioneListaRowChangeEvent(CType(e.Row,NoteAnamnesticheRiassociazioneListaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.NoteAnamnesticheRiassociazioneListaRowDeletingEvent) Is Nothing) Then
                RaiseEvent NoteAnamnesticheRiassociazioneListaRowDeleting(Me, New NoteAnamnesticheRiassociazioneListaRowChangeEvent(CType(e.Row,NoteAnamnesticheRiassociazioneListaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveNoteAnamnesticheRiassociazioneListaRow(ByVal row As NoteAnamnesticheRiassociazioneListaRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As NoteAnamnesticheDataSet = New NoteAnamnesticheDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "NoteAnamnesticheRiassociazioneListaDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class NotaAnamnesticaRiassociazioneOttieniDataTable
        Inherits Global.System.Data.TypedTableBase(Of NotaAnamnesticaRiassociazioneOttieniRow)
        
        Private columnId As Global.System.Data.DataColumn
        
        Private columnDataPartizione As Global.System.Data.DataColumn
        
        Private columnIdEsterno As Global.System.Data.DataColumn
        
        Private columnIdPaziente As Global.System.Data.DataColumn
        
        Private columnDataInserimento As Global.System.Data.DataColumn
        
        Private columnDataModifica As Global.System.Data.DataColumn
        
        Private columnDataModificaEsterno As Global.System.Data.DataColumn
        
        Private columnAziendaErogante As Global.System.Data.DataColumn
        
        Private columnSistemaErogante As Global.System.Data.DataColumn
        
        Private columnDataNota As Global.System.Data.DataColumn
        
        Private columnDataFineValidita As Global.System.Data.DataColumn
        
        Private columnTipoCodice As Global.System.Data.DataColumn
        
        Private columnTipoDescrizione As Global.System.Data.DataColumn
        
        Private columnContenuto As Global.System.Data.DataColumn
        
        Private columnTipoContenuto As Global.System.Data.DataColumn
        
        Private columnContenutoHtml As Global.System.Data.DataColumn
        
        Private columnContenutoText As Global.System.Data.DataColumn
        
        Private columnStatoCodiceDesc As Global.System.Data.DataColumn
        
        Private columnCognome As Global.System.Data.DataColumn
        
        Private columnNome As Global.System.Data.DataColumn
        
        Private columnSesso As Global.System.Data.DataColumn
        
        Private columnCodiceFiscale As Global.System.Data.DataColumn
        
        Private columnDataNascita As Global.System.Data.DataColumn
        
        Private columnComuneNascita As Global.System.Data.DataColumn
        
        Private columnProvinciaNascita As Global.System.Data.DataColumn
        
        Private columnCodiceAnagraficaCentrale As Global.System.Data.DataColumn
        
        Private columnNomeAnagraficaCentrale As Global.System.Data.DataColumn
        
        Private columnCodiceSanitario As Global.System.Data.DataColumn
        
        Private columnSACCognome As Global.System.Data.DataColumn
        
        Private columnSACNome As Global.System.Data.DataColumn
        
        Private columnSACSesso As Global.System.Data.DataColumn
        
        Private columnSACCodiceFiscale As Global.System.Data.DataColumn
        
        Private columnSACDataNascita As Global.System.Data.DataColumn
        
        Private columnSACComuneNascita As Global.System.Data.DataColumn
        
        Private columnSACProvinciaNascita As Global.System.Data.DataColumn
        
        Private columnSACProvenienza As Global.System.Data.DataColumn
        
        Private columnSACIdProvenienza As Global.System.Data.DataColumn
        
        Private columnSACTessera As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "NotaAnamnesticaRiassociazioneOttieni"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DataPartizioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDataPartizione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IdEsternoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIdEsterno
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property IdPazienteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIdPaziente
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DataInserimentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDataInserimento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DataModificaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDataModifica
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DataModificaEsternoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDataModificaEsterno
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property AziendaEroganteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAziendaErogante
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SistemaEroganteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSistemaErogante
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DataNotaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDataNota
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DataFineValiditaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDataFineValidita
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property TipoCodiceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTipoCodice
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property TipoDescrizioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTipoDescrizione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ContenutoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnContenuto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property TipoContenutoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTipoContenuto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ContenutoHtmlColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnContenutoHtml
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ContenutoTextColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnContenutoText
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property StatoCodiceDescColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStatoCodiceDesc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CognomeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCognome
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property NomeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNome
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SessoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSesso
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CodiceFiscaleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCodiceFiscale
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property DataNascitaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDataNascita
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ComuneNascitaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnComuneNascita
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property ProvinciaNascitaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProvinciaNascita
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CodiceAnagraficaCentraleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCodiceAnagraficaCentrale
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property NomeAnagraficaCentraleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNomeAnagraficaCentrale
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property CodiceSanitarioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCodiceSanitario
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SACCognomeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSACCognome
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SACNomeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSACNome
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SACSessoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSACSesso
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SACCodiceFiscaleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSACCodiceFiscale
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SACDataNascitaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSACDataNascita
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SACComuneNascitaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSACComuneNascita
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SACProvinciaNascitaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSACProvinciaNascita
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SACProvenienzaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSACProvenienza
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SACIdProvenienzaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSACIdProvenienza
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property SACTesseraColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSACTessera
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As NotaAnamnesticaRiassociazioneOttieniRow
            Get
                Return CType(Me.Rows(index),NotaAnamnesticaRiassociazioneOttieniRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event NotaAnamnesticaRiassociazioneOttieniRowChanging As NotaAnamnesticaRiassociazioneOttieniRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event NotaAnamnesticaRiassociazioneOttieniRowChanged As NotaAnamnesticaRiassociazioneOttieniRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event NotaAnamnesticaRiassociazioneOttieniRowDeleting As NotaAnamnesticaRiassociazioneOttieniRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Event NotaAnamnesticaRiassociazioneOttieniRowDeleted As NotaAnamnesticaRiassociazioneOttieniRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Sub AddNotaAnamnesticaRiassociazioneOttieniRow(ByVal row As NotaAnamnesticaRiassociazioneOttieniRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overloads Function AddNotaAnamnesticaRiassociazioneOttieniRow( _
                    ByVal Id As System.Guid,  _
                    ByVal DataPartizione As Date,  _
                    ByVal IdEsterno As String,  _
                    ByVal IdPaziente As System.Guid,  _
                    ByVal DataInserimento As Date,  _
                    ByVal DataModifica As Date,  _
                    ByVal DataModificaEsterno As Date,  _
                    ByVal AziendaErogante As String,  _
                    ByVal SistemaErogante As String,  _
                    ByVal DataNota As Date,  _
                    ByVal DataFineValidita As Date,  _
                    ByVal TipoCodice As String,  _
                    ByVal TipoDescrizione As String,  _
                    ByVal Contenuto() As Byte,  _
                    ByVal TipoContenuto As String,  _
                    ByVal ContenutoHtml As String,  _
                    ByVal ContenutoText As String,  _
                    ByVal StatoCodiceDesc As String,  _
                    ByVal Cognome As String,  _
                    ByVal Nome As String,  _
                    ByVal Sesso As String,  _
                    ByVal CodiceFiscale As String,  _
                    ByVal DataNascita As Date,  _
                    ByVal ComuneNascita As String,  _
                    ByVal ProvinciaNascita As String,  _
                    ByVal CodiceAnagraficaCentrale As String,  _
                    ByVal NomeAnagraficaCentrale As String,  _
                    ByVal CodiceSanitario As String,  _
                    ByVal SACCognome As String,  _
                    ByVal SACNome As String,  _
                    ByVal SACSesso As String,  _
                    ByVal SACCodiceFiscale As String,  _
                    ByVal SACDataNascita As Date,  _
                    ByVal SACComuneNascita As String,  _
                    ByVal SACProvinciaNascita As String,  _
                    ByVal SACProvenienza As String,  _
                    ByVal SACIdProvenienza As String,  _
                    ByVal SACTessera As String) As NotaAnamnesticaRiassociazioneOttieniRow
            Dim rowNotaAnamnesticaRiassociazioneOttieniRow As NotaAnamnesticaRiassociazioneOttieniRow = CType(Me.NewRow,NotaAnamnesticaRiassociazioneOttieniRow)
            Dim columnValuesArray() As Object = New Object() {Id, DataPartizione, IdEsterno, IdPaziente, DataInserimento, DataModifica, DataModificaEsterno, AziendaErogante, SistemaErogante, DataNota, DataFineValidita, TipoCodice, TipoDescrizione, Contenuto, TipoContenuto, ContenutoHtml, ContenutoText, StatoCodiceDesc, Cognome, Nome, Sesso, CodiceFiscale, DataNascita, ComuneNascita, ProvinciaNascita, CodiceAnagraficaCentrale, NomeAnagraficaCentrale, CodiceSanitario, SACCognome, SACNome, SACSesso, SACCodiceFiscale, SACDataNascita, SACComuneNascita, SACProvinciaNascita, SACProvenienza, SACIdProvenienza, SACTessera}
            rowNotaAnamnesticaRiassociazioneOttieniRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowNotaAnamnesticaRiassociazioneOttieniRow)
            Return rowNotaAnamnesticaRiassociazioneOttieniRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As NotaAnamnesticaRiassociazioneOttieniDataTable = CType(MyBase.Clone,NotaAnamnesticaRiassociazioneOttieniDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New NotaAnamnesticaRiassociazioneOttieniDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnId = MyBase.Columns("Id")
            Me.columnDataPartizione = MyBase.Columns("DataPartizione")
            Me.columnIdEsterno = MyBase.Columns("IdEsterno")
            Me.columnIdPaziente = MyBase.Columns("IdPaziente")
            Me.columnDataInserimento = MyBase.Columns("DataInserimento")
            Me.columnDataModifica = MyBase.Columns("DataModifica")
            Me.columnDataModificaEsterno = MyBase.Columns("DataModificaEsterno")
            Me.columnAziendaErogante = MyBase.Columns("AziendaErogante")
            Me.columnSistemaErogante = MyBase.Columns("SistemaErogante")
            Me.columnDataNota = MyBase.Columns("DataNota")
            Me.columnDataFineValidita = MyBase.Columns("DataFineValidita")
            Me.columnTipoCodice = MyBase.Columns("TipoCodice")
            Me.columnTipoDescrizione = MyBase.Columns("TipoDescrizione")
            Me.columnContenuto = MyBase.Columns("Contenuto")
            Me.columnTipoContenuto = MyBase.Columns("TipoContenuto")
            Me.columnContenutoHtml = MyBase.Columns("ContenutoHtml")
            Me.columnContenutoText = MyBase.Columns("ContenutoText")
            Me.columnStatoCodiceDesc = MyBase.Columns("StatoCodiceDesc")
            Me.columnCognome = MyBase.Columns("Cognome")
            Me.columnNome = MyBase.Columns("Nome")
            Me.columnSesso = MyBase.Columns("Sesso")
            Me.columnCodiceFiscale = MyBase.Columns("CodiceFiscale")
            Me.columnDataNascita = MyBase.Columns("DataNascita")
            Me.columnComuneNascita = MyBase.Columns("ComuneNascita")
            Me.columnProvinciaNascita = MyBase.Columns("ProvinciaNascita")
            Me.columnCodiceAnagraficaCentrale = MyBase.Columns("CodiceAnagraficaCentrale")
            Me.columnNomeAnagraficaCentrale = MyBase.Columns("NomeAnagraficaCentrale")
            Me.columnCodiceSanitario = MyBase.Columns("CodiceSanitario")
            Me.columnSACCognome = MyBase.Columns("SACCognome")
            Me.columnSACNome = MyBase.Columns("SACNome")
            Me.columnSACSesso = MyBase.Columns("SACSesso")
            Me.columnSACCodiceFiscale = MyBase.Columns("SACCodiceFiscale")
            Me.columnSACDataNascita = MyBase.Columns("SACDataNascita")
            Me.columnSACComuneNascita = MyBase.Columns("SACComuneNascita")
            Me.columnSACProvinciaNascita = MyBase.Columns("SACProvinciaNascita")
            Me.columnSACProvenienza = MyBase.Columns("SACProvenienza")
            Me.columnSACIdProvenienza = MyBase.Columns("SACIdProvenienza")
            Me.columnSACTessera = MyBase.Columns("SACTessera")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitClass()
            Me.columnId = New Global.System.Data.DataColumn("Id", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnId)
            Me.columnDataPartizione = New Global.System.Data.DataColumn("DataPartizione", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDataPartizione)
            Me.columnIdEsterno = New Global.System.Data.DataColumn("IdEsterno", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIdEsterno)
            Me.columnIdPaziente = New Global.System.Data.DataColumn("IdPaziente", GetType(Global.System.Guid), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIdPaziente)
            Me.columnDataInserimento = New Global.System.Data.DataColumn("DataInserimento", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDataInserimento)
            Me.columnDataModifica = New Global.System.Data.DataColumn("DataModifica", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDataModifica)
            Me.columnDataModificaEsterno = New Global.System.Data.DataColumn("DataModificaEsterno", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDataModificaEsterno)
            Me.columnAziendaErogante = New Global.System.Data.DataColumn("AziendaErogante", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAziendaErogante)
            Me.columnSistemaErogante = New Global.System.Data.DataColumn("SistemaErogante", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSistemaErogante)
            Me.columnDataNota = New Global.System.Data.DataColumn("DataNota", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDataNota)
            Me.columnDataFineValidita = New Global.System.Data.DataColumn("DataFineValidita", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDataFineValidita)
            Me.columnTipoCodice = New Global.System.Data.DataColumn("TipoCodice", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTipoCodice)
            Me.columnTipoDescrizione = New Global.System.Data.DataColumn("TipoDescrizione", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTipoDescrizione)
            Me.columnContenuto = New Global.System.Data.DataColumn("Contenuto", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnContenuto)
            Me.columnTipoContenuto = New Global.System.Data.DataColumn("TipoContenuto", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTipoContenuto)
            Me.columnContenutoHtml = New Global.System.Data.DataColumn("ContenutoHtml", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnContenutoHtml)
            Me.columnContenutoText = New Global.System.Data.DataColumn("ContenutoText", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnContenutoText)
            Me.columnStatoCodiceDesc = New Global.System.Data.DataColumn("StatoCodiceDesc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStatoCodiceDesc)
            Me.columnCognome = New Global.System.Data.DataColumn("Cognome", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCognome)
            Me.columnNome = New Global.System.Data.DataColumn("Nome", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNome)
            Me.columnSesso = New Global.System.Data.DataColumn("Sesso", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSesso)
            Me.columnCodiceFiscale = New Global.System.Data.DataColumn("CodiceFiscale", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCodiceFiscale)
            Me.columnDataNascita = New Global.System.Data.DataColumn("DataNascita", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDataNascita)
            Me.columnComuneNascita = New Global.System.Data.DataColumn("ComuneNascita", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnComuneNascita)
            Me.columnProvinciaNascita = New Global.System.Data.DataColumn("ProvinciaNascita", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProvinciaNascita)
            Me.columnCodiceAnagraficaCentrale = New Global.System.Data.DataColumn("CodiceAnagraficaCentrale", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCodiceAnagraficaCentrale)
            Me.columnNomeAnagraficaCentrale = New Global.System.Data.DataColumn("NomeAnagraficaCentrale", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNomeAnagraficaCentrale)
            Me.columnCodiceSanitario = New Global.System.Data.DataColumn("CodiceSanitario", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCodiceSanitario)
            Me.columnSACCognome = New Global.System.Data.DataColumn("SACCognome", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSACCognome)
            Me.columnSACNome = New Global.System.Data.DataColumn("SACNome", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSACNome)
            Me.columnSACSesso = New Global.System.Data.DataColumn("SACSesso", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSACSesso)
            Me.columnSACCodiceFiscale = New Global.System.Data.DataColumn("SACCodiceFiscale", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSACCodiceFiscale)
            Me.columnSACDataNascita = New Global.System.Data.DataColumn("SACDataNascita", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSACDataNascita)
            Me.columnSACComuneNascita = New Global.System.Data.DataColumn("SACComuneNascita", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSACComuneNascita)
            Me.columnSACProvinciaNascita = New Global.System.Data.DataColumn("SACProvinciaNascita", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSACProvinciaNascita)
            Me.columnSACProvenienza = New Global.System.Data.DataColumn("SACProvenienza", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSACProvenienza)
            Me.columnSACIdProvenienza = New Global.System.Data.DataColumn("SACIdProvenienza", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSACIdProvenienza)
            Me.columnSACTessera = New Global.System.Data.DataColumn("SACTessera", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSACTessera)
            Me.columnId.AllowDBNull = false
            Me.columnDataPartizione.AllowDBNull = false
            Me.columnIdEsterno.AllowDBNull = false
            Me.columnIdEsterno.MaxLength = 64
            Me.columnIdPaziente.AllowDBNull = false
            Me.columnDataInserimento.AllowDBNull = false
            Me.columnDataModifica.AllowDBNull = false
            Me.columnAziendaErogante.AllowDBNull = false
            Me.columnAziendaErogante.MaxLength = 16
            Me.columnSistemaErogante.AllowDBNull = false
            Me.columnSistemaErogante.MaxLength = 16
            Me.columnDataNota.AllowDBNull = false
            Me.columnTipoCodice.AllowDBNull = false
            Me.columnTipoCodice.MaxLength = 16
            Me.columnTipoDescrizione.AllowDBNull = false
            Me.columnTipoDescrizione.MaxLength = 256
            Me.columnContenuto.AllowDBNull = false
            Me.columnTipoContenuto.AllowDBNull = false
            Me.columnTipoContenuto.MaxLength = 64
            Me.columnContenutoHtml.AllowDBNull = false
            Me.columnContenutoHtml.MaxLength = 2147483647
            Me.columnContenutoText.AllowDBNull = false
            Me.columnContenutoText.MaxLength = 2147483647
            Me.columnStatoCodiceDesc.ReadOnly = true
            Me.columnStatoCodiceDesc.MaxLength = 128
            Me.columnCognome.ReadOnly = true
            Me.columnCognome.MaxLength = 64
            Me.columnNome.ReadOnly = true
            Me.columnNome.MaxLength = 64
            Me.columnSesso.ReadOnly = true
            Me.columnSesso.MaxLength = 1
            Me.columnCodiceFiscale.ReadOnly = true
            Me.columnCodiceFiscale.MaxLength = 16
            Me.columnDataNascita.ReadOnly = true
            Me.columnComuneNascita.ReadOnly = true
            Me.columnComuneNascita.MaxLength = 64
            Me.columnProvinciaNascita.ReadOnly = true
            Me.columnProvinciaNascita.MaxLength = 4
            Me.columnCodiceAnagraficaCentrale.ReadOnly = true
            Me.columnCodiceAnagraficaCentrale.MaxLength = 64
            Me.columnNomeAnagraficaCentrale.ReadOnly = true
            Me.columnNomeAnagraficaCentrale.MaxLength = 64
            Me.columnCodiceSanitario.ReadOnly = true
            Me.columnCodiceSanitario.MaxLength = 64
            Me.columnSACCognome.MaxLength = 64
            Me.columnSACNome.MaxLength = 64
            Me.columnSACSesso.MaxLength = 1
            Me.columnSACCodiceFiscale.MaxLength = 16
            Me.columnSACComuneNascita.ReadOnly = true
            Me.columnSACComuneNascita.MaxLength = 128
            Me.columnSACProvinciaNascita.ReadOnly = true
            Me.columnSACProvinciaNascita.MaxLength = 2
            Me.columnSACProvenienza.MaxLength = 16
            Me.columnSACIdProvenienza.MaxLength = 64
            Me.columnSACTessera.MaxLength = 16
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function NewNotaAnamnesticaRiassociazioneOttieniRow() As NotaAnamnesticaRiassociazioneOttieniRow
            Return CType(Me.NewRow,NotaAnamnesticaRiassociazioneOttieniRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New NotaAnamnesticaRiassociazioneOttieniRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(NotaAnamnesticaRiassociazioneOttieniRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.NotaAnamnesticaRiassociazioneOttieniRowChangedEvent) Is Nothing) Then
                RaiseEvent NotaAnamnesticaRiassociazioneOttieniRowChanged(Me, New NotaAnamnesticaRiassociazioneOttieniRowChangeEvent(CType(e.Row,NotaAnamnesticaRiassociazioneOttieniRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.NotaAnamnesticaRiassociazioneOttieniRowChangingEvent) Is Nothing) Then
                RaiseEvent NotaAnamnesticaRiassociazioneOttieniRowChanging(Me, New NotaAnamnesticaRiassociazioneOttieniRowChangeEvent(CType(e.Row,NotaAnamnesticaRiassociazioneOttieniRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.NotaAnamnesticaRiassociazioneOttieniRowDeletedEvent) Is Nothing) Then
                RaiseEvent NotaAnamnesticaRiassociazioneOttieniRowDeleted(Me, New NotaAnamnesticaRiassociazioneOttieniRowChangeEvent(CType(e.Row,NotaAnamnesticaRiassociazioneOttieniRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.NotaAnamnesticaRiassociazioneOttieniRowDeletingEvent) Is Nothing) Then
                RaiseEvent NotaAnamnesticaRiassociazioneOttieniRowDeleting(Me, New NotaAnamnesticaRiassociazioneOttieniRowChangeEvent(CType(e.Row,NotaAnamnesticaRiassociazioneOttieniRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub RemoveNotaAnamnesticaRiassociazioneOttieniRow(ByVal row As NotaAnamnesticaRiassociazioneOttieniRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As NoteAnamnesticheDataSet = New NoteAnamnesticheDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "NotaAnamnesticaRiassociazioneOttieniDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class NotaAnamnesticaOttieniRow
        Inherits Global.System.Data.DataRow
        
        Private tableNotaAnamnesticaOttieni As NotaAnamnesticaOttieniDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableNotaAnamnesticaOttieni = CType(Me.Table,NotaAnamnesticaOttieniDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Id() As System.Guid
            Get
                Return CType(Me(Me.tableNotaAnamnesticaOttieni.IdColumn),Global.System.Guid)
            End Get
            Set
                Me(Me.tableNotaAnamnesticaOttieni.IdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DataPartizione() As Date
            Get
                Return CType(Me(Me.tableNotaAnamnesticaOttieni.DataPartizioneColumn),Date)
            End Get
            Set
                Me(Me.tableNotaAnamnesticaOttieni.DataPartizioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IdEsterno() As String
            Get
                Return CType(Me(Me.tableNotaAnamnesticaOttieni.IdEsternoColumn),String)
            End Get
            Set
                Me(Me.tableNotaAnamnesticaOttieni.IdEsternoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IdPaziente() As System.Guid
            Get
                Return CType(Me(Me.tableNotaAnamnesticaOttieni.IdPazienteColumn),Global.System.Guid)
            End Get
            Set
                Me(Me.tableNotaAnamnesticaOttieni.IdPazienteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DataInserimento() As Date
            Get
                Return CType(Me(Me.tableNotaAnamnesticaOttieni.DataInserimentoColumn),Date)
            End Get
            Set
                Me(Me.tableNotaAnamnesticaOttieni.DataInserimentoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DataModifica() As Date
            Get
                Return CType(Me(Me.tableNotaAnamnesticaOttieni.DataModificaColumn),Date)
            End Get
            Set
                Me(Me.tableNotaAnamnesticaOttieni.DataModificaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DataModificaEsterno() As Date
            Get
                Try 
                    Return CType(Me(Me.tableNotaAnamnesticaOttieni.DataModificaEsternoColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DataModificaEsterno' in table 'NotaAnamnesticaOttieni' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableNotaAnamnesticaOttieni.DataModificaEsternoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property StatoCodice() As Byte
            Get
                Return CType(Me(Me.tableNotaAnamnesticaOttieni.StatoCodiceColumn),Byte)
            End Get
            Set
                Me(Me.tableNotaAnamnesticaOttieni.StatoCodiceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property StatoDescrizione() As String
            Get
                Try 
                    Return CType(Me(Me.tableNotaAnamnesticaOttieni.StatoDescrizioneColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'StatoDescrizione' in table 'NotaAnamnesticaOttieni' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableNotaAnamnesticaOttieni.StatoDescrizioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property AziendaErogante() As String
            Get
                Return CType(Me(Me.tableNotaAnamnesticaOttieni.AziendaEroganteColumn),String)
            End Get
            Set
                Me(Me.tableNotaAnamnesticaOttieni.AziendaEroganteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SistemaErogante() As String
            Get
                Return CType(Me(Me.tableNotaAnamnesticaOttieni.SistemaEroganteColumn),String)
            End Get
            Set
                Me(Me.tableNotaAnamnesticaOttieni.SistemaEroganteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DataNota() As Date
            Get
                Return CType(Me(Me.tableNotaAnamnesticaOttieni.DataNotaColumn),Date)
            End Get
            Set
                Me(Me.tableNotaAnamnesticaOttieni.DataNotaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DataFineValidita() As Date
            Get
                Try 
                    Return CType(Me(Me.tableNotaAnamnesticaOttieni.DataFineValiditaColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DataFineValidita' in table 'NotaAnamnesticaOttieni' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableNotaAnamnesticaOttieni.DataFineValiditaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property TipoCodice() As String
            Get
                Return CType(Me(Me.tableNotaAnamnesticaOttieni.TipoCodiceColumn),String)
            End Get
            Set
                Me(Me.tableNotaAnamnesticaOttieni.TipoCodiceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property TipoDescrizione() As String
            Get
                Return CType(Me(Me.tableNotaAnamnesticaOttieni.TipoDescrizioneColumn),String)
            End Get
            Set
                Me(Me.tableNotaAnamnesticaOttieni.TipoDescrizioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Contenuto() As Byte()
            Get
                Return CType(Me(Me.tableNotaAnamnesticaOttieni.ContenutoColumn),Byte())
            End Get
            Set
                Me(Me.tableNotaAnamnesticaOttieni.ContenutoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property TipoContenuto() As String
            Get
                Return CType(Me(Me.tableNotaAnamnesticaOttieni.TipoContenutoColumn),String)
            End Get
            Set
                Me(Me.tableNotaAnamnesticaOttieni.TipoContenutoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ContenutoHtml() As String
            Get
                Return CType(Me(Me.tableNotaAnamnesticaOttieni.ContenutoHtmlColumn),String)
            End Get
            Set
                Me(Me.tableNotaAnamnesticaOttieni.ContenutoHtmlColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ContenutoText() As String
            Get
                Return CType(Me(Me.tableNotaAnamnesticaOttieni.ContenutoTextColumn),String)
            End Get
            Set
                Me(Me.tableNotaAnamnesticaOttieni.ContenutoTextColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Cognome() As String
            Get
                Try 
                    Return CType(Me(Me.tableNotaAnamnesticaOttieni.CognomeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Cognome' in table 'NotaAnamnesticaOttieni' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableNotaAnamnesticaOttieni.CognomeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Nome() As String
            Get
                Try 
                    Return CType(Me(Me.tableNotaAnamnesticaOttieni.NomeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Nome' in table 'NotaAnamnesticaOttieni' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableNotaAnamnesticaOttieni.NomeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Sesso() As String
            Get
                Try 
                    Return CType(Me(Me.tableNotaAnamnesticaOttieni.SessoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sesso' in table 'NotaAnamnesticaOttieni' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableNotaAnamnesticaOttieni.SessoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CodiceFiscale() As String
            Get
                Try 
                    Return CType(Me(Me.tableNotaAnamnesticaOttieni.CodiceFiscaleColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CodiceFiscale' in table 'NotaAnamnesticaOttieni' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableNotaAnamnesticaOttieni.CodiceFiscaleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DataNascita() As Date
            Get
                Try 
                    Return CType(Me(Me.tableNotaAnamnesticaOttieni.DataNascitaColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DataNascita' in table 'NotaAnamnesticaOttieni' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableNotaAnamnesticaOttieni.DataNascitaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ComuneNascita() As String
            Get
                Try 
                    Return CType(Me(Me.tableNotaAnamnesticaOttieni.ComuneNascitaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ComuneNascita' in table 'NotaAnamnesticaOttieni' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableNotaAnamnesticaOttieni.ComuneNascitaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CodiceSanitario() As String
            Get
                Try 
                    Return CType(Me(Me.tableNotaAnamnesticaOttieni.CodiceSanitarioColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CodiceSanitario' in table 'NotaAnamnesticaOttieni' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableNotaAnamnesticaOttieni.CodiceSanitarioColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Attributi() As String
            Get
                Try 
                    Return CType(Me(Me.tableNotaAnamnesticaOttieni.AttributiColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Attributi' in table 'NotaAnamnesticaOttieni' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableNotaAnamnesticaOttieni.AttributiColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDataModificaEsternoNull() As Boolean
            Return Me.IsNull(Me.tableNotaAnamnesticaOttieni.DataModificaEsternoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDataModificaEsternoNull()
            Me(Me.tableNotaAnamnesticaOttieni.DataModificaEsternoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsStatoDescrizioneNull() As Boolean
            Return Me.IsNull(Me.tableNotaAnamnesticaOttieni.StatoDescrizioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetStatoDescrizioneNull()
            Me(Me.tableNotaAnamnesticaOttieni.StatoDescrizioneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDataFineValiditaNull() As Boolean
            Return Me.IsNull(Me.tableNotaAnamnesticaOttieni.DataFineValiditaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDataFineValiditaNull()
            Me(Me.tableNotaAnamnesticaOttieni.DataFineValiditaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCognomeNull() As Boolean
            Return Me.IsNull(Me.tableNotaAnamnesticaOttieni.CognomeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCognomeNull()
            Me(Me.tableNotaAnamnesticaOttieni.CognomeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsNomeNull() As Boolean
            Return Me.IsNull(Me.tableNotaAnamnesticaOttieni.NomeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetNomeNull()
            Me(Me.tableNotaAnamnesticaOttieni.NomeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSessoNull() As Boolean
            Return Me.IsNull(Me.tableNotaAnamnesticaOttieni.SessoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSessoNull()
            Me(Me.tableNotaAnamnesticaOttieni.SessoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCodiceFiscaleNull() As Boolean
            Return Me.IsNull(Me.tableNotaAnamnesticaOttieni.CodiceFiscaleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCodiceFiscaleNull()
            Me(Me.tableNotaAnamnesticaOttieni.CodiceFiscaleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDataNascitaNull() As Boolean
            Return Me.IsNull(Me.tableNotaAnamnesticaOttieni.DataNascitaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDataNascitaNull()
            Me(Me.tableNotaAnamnesticaOttieni.DataNascitaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsComuneNascitaNull() As Boolean
            Return Me.IsNull(Me.tableNotaAnamnesticaOttieni.ComuneNascitaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetComuneNascitaNull()
            Me(Me.tableNotaAnamnesticaOttieni.ComuneNascitaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCodiceSanitarioNull() As Boolean
            Return Me.IsNull(Me.tableNotaAnamnesticaOttieni.CodiceSanitarioColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCodiceSanitarioNull()
            Me(Me.tableNotaAnamnesticaOttieni.CodiceSanitarioColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsAttributiNull() As Boolean
            Return Me.IsNull(Me.tableNotaAnamnesticaOttieni.AttributiColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetAttributiNull()
            Me(Me.tableNotaAnamnesticaOttieni.AttributiColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class AttributiNotaAnamnesticaOttieniRow
        Inherits Global.System.Data.DataRow
        
        Private tableAttributiNotaAnamnesticaOttieni As AttributiNotaAnamnesticaOttieniDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableAttributiNotaAnamnesticaOttieni = CType(Me.Table,AttributiNotaAnamnesticaOttieniDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IdNoteAnamnesticheBase() As System.Guid
            Get
                Return CType(Me(Me.tableAttributiNotaAnamnesticaOttieni.IdNoteAnamnesticheBaseColumn),Global.System.Guid)
            End Get
            Set
                Me(Me.tableAttributiNotaAnamnesticaOttieni.IdNoteAnamnesticheBaseColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Nome() As String
            Get
                Return CType(Me(Me.tableAttributiNotaAnamnesticaOttieni.NomeColumn),String)
            End Get
            Set
                Me(Me.tableAttributiNotaAnamnesticaOttieni.NomeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Valore() As Object
            Get
                Try 
                    Return CType(Me(Me.tableAttributiNotaAnamnesticaOttieni.ValoreColumn),Object)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Valore' in table 'AttributiNotaAnamnesticaOttieni' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableAttributiNotaAnamnesticaOttieni.ValoreColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DataPartizione() As Date
            Get
                Return CType(Me(Me.tableAttributiNotaAnamnesticaOttieni.DataPartizioneColumn),Date)
            End Get
            Set
                Me(Me.tableAttributiNotaAnamnesticaOttieni.DataPartizioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsValoreNull() As Boolean
            Return Me.IsNull(Me.tableAttributiNotaAnamnesticaOttieni.ValoreColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetValoreNull()
            Me(Me.tableAttributiNotaAnamnesticaOttieni.ValoreColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class NoteAnamnesticheCercaRow
        Inherits Global.System.Data.DataRow
        
        Private tableNoteAnamnesticheCerca As NoteAnamnesticheCercaDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableNoteAnamnesticheCerca = CType(Me.Table,NoteAnamnesticheCercaDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ID() As System.Guid
            Get
                Return CType(Me(Me.tableNoteAnamnesticheCerca.IDColumn),Global.System.Guid)
            End Get
            Set
                Me(Me.tableNoteAnamnesticheCerca.IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IdEsterno() As String
            Get
                Return CType(Me(Me.tableNoteAnamnesticheCerca.IdEsternoColumn),String)
            End Get
            Set
                Me(Me.tableNoteAnamnesticheCerca.IdEsternoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IdPaziente() As System.Guid
            Get
                Return CType(Me(Me.tableNoteAnamnesticheCerca.IdPazienteColumn),Global.System.Guid)
            End Get
            Set
                Me(Me.tableNoteAnamnesticheCerca.IdPazienteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DataInserimento() As Date
            Get
                Return CType(Me(Me.tableNoteAnamnesticheCerca.DataInserimentoColumn),Date)
            End Get
            Set
                Me(Me.tableNoteAnamnesticheCerca.DataInserimentoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DataModifica() As Date
            Get
                Return CType(Me(Me.tableNoteAnamnesticheCerca.DataModificaColumn),Date)
            End Get
            Set
                Me(Me.tableNoteAnamnesticheCerca.DataModificaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property AziendaErogante() As String
            Get
                Return CType(Me(Me.tableNoteAnamnesticheCerca.AziendaEroganteColumn),String)
            End Get
            Set
                Me(Me.tableNoteAnamnesticheCerca.AziendaEroganteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SistemaErogante() As String
            Get
                Return CType(Me(Me.tableNoteAnamnesticheCerca.SistemaEroganteColumn),String)
            End Get
            Set
                Me(Me.tableNoteAnamnesticheCerca.SistemaEroganteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property StatoCodice() As Byte
            Get
                Return CType(Me(Me.tableNoteAnamnesticheCerca.StatoCodiceColumn),Byte)
            End Get
            Set
                Me(Me.tableNoteAnamnesticheCerca.StatoCodiceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Contenuto() As Byte()
            Get
                Return CType(Me(Me.tableNoteAnamnesticheCerca.ContenutoColumn),Byte())
            End Get
            Set
                Me(Me.tableNoteAnamnesticheCerca.ContenutoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ContenutoText() As String
            Get
                Return CType(Me(Me.tableNoteAnamnesticheCerca.ContenutoTextColumn),String)
            End Get
            Set
                Me(Me.tableNoteAnamnesticheCerca.ContenutoTextColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property TipoCodice() As String
            Get
                Return CType(Me(Me.tableNoteAnamnesticheCerca.TipoCodiceColumn),String)
            End Get
            Set
                Me(Me.tableNoteAnamnesticheCerca.TipoCodiceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property TipoDescrizione() As String
            Get
                Return CType(Me(Me.tableNoteAnamnesticheCerca.TipoDescrizioneColumn),String)
            End Get
            Set
                Me(Me.tableNoteAnamnesticheCerca.TipoDescrizioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property TipoContenuto() As String
            Get
                Return CType(Me(Me.tableNoteAnamnesticheCerca.TipoContenutoColumn),String)
            End Get
            Set
                Me(Me.tableNoteAnamnesticheCerca.TipoContenutoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DataNota() As Date
            Get
                Return CType(Me(Me.tableNoteAnamnesticheCerca.DataNotaColumn),Date)
            End Get
            Set
                Me(Me.tableNoteAnamnesticheCerca.DataNotaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DataFineValidita() As Date
            Get
                Try 
                    Return CType(Me(Me.tableNoteAnamnesticheCerca.DataFineValiditaColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DataFineValidita' in table 'NoteAnamnesticheCerca' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableNoteAnamnesticheCerca.DataFineValiditaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DataPartizione() As Date
            Get
                Return CType(Me(Me.tableNoteAnamnesticheCerca.DataPartizioneColumn),Date)
            End Get
            Set
                Me(Me.tableNoteAnamnesticheCerca.DataPartizioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property StatoCodiceDesc() As String
            Get
                Try 
                    Return CType(Me(Me.tableNoteAnamnesticheCerca.StatoCodiceDescColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'StatoCodiceDesc' in table 'NoteAnamnesticheCerca' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableNoteAnamnesticheCerca.StatoCodiceDescColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Cognome() As String
            Get
                Try 
                    Return CType(Me(Me.tableNoteAnamnesticheCerca.CognomeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Cognome' in table 'NoteAnamnesticheCerca' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableNoteAnamnesticheCerca.CognomeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Nome() As String
            Get
                Try 
                    Return CType(Me(Me.tableNoteAnamnesticheCerca.NomeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Nome' in table 'NoteAnamnesticheCerca' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableNoteAnamnesticheCerca.NomeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CodiceFiscale() As String
            Get
                Try 
                    Return CType(Me(Me.tableNoteAnamnesticheCerca.CodiceFiscaleColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CodiceFiscale' in table 'NoteAnamnesticheCerca' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableNoteAnamnesticheCerca.CodiceFiscaleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DataNascita() As Date
            Get
                Try 
                    Return CType(Me(Me.tableNoteAnamnesticheCerca.DataNascitaColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DataNascita' in table 'NoteAnamnesticheCerca' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableNoteAnamnesticheCerca.DataNascitaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ComuneNascita() As String
            Get
                Try 
                    Return CType(Me(Me.tableNoteAnamnesticheCerca.ComuneNascitaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ComuneNascita' in table 'NoteAnamnesticheCerca' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableNoteAnamnesticheCerca.ComuneNascitaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CodiceSanitario() As String
            Get
                Try 
                    Return CType(Me(Me.tableNoteAnamnesticheCerca.CodiceSanitarioColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CodiceSanitario' in table 'NoteAnamnesticheCerca' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableNoteAnamnesticheCerca.CodiceSanitarioColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDataFineValiditaNull() As Boolean
            Return Me.IsNull(Me.tableNoteAnamnesticheCerca.DataFineValiditaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDataFineValiditaNull()
            Me(Me.tableNoteAnamnesticheCerca.DataFineValiditaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsStatoCodiceDescNull() As Boolean
            Return Me.IsNull(Me.tableNoteAnamnesticheCerca.StatoCodiceDescColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetStatoCodiceDescNull()
            Me(Me.tableNoteAnamnesticheCerca.StatoCodiceDescColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCognomeNull() As Boolean
            Return Me.IsNull(Me.tableNoteAnamnesticheCerca.CognomeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCognomeNull()
            Me(Me.tableNoteAnamnesticheCerca.CognomeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsNomeNull() As Boolean
            Return Me.IsNull(Me.tableNoteAnamnesticheCerca.NomeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetNomeNull()
            Me(Me.tableNoteAnamnesticheCerca.NomeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCodiceFiscaleNull() As Boolean
            Return Me.IsNull(Me.tableNoteAnamnesticheCerca.CodiceFiscaleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCodiceFiscaleNull()
            Me(Me.tableNoteAnamnesticheCerca.CodiceFiscaleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDataNascitaNull() As Boolean
            Return Me.IsNull(Me.tableNoteAnamnesticheCerca.DataNascitaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDataNascitaNull()
            Me(Me.tableNoteAnamnesticheCerca.DataNascitaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsComuneNascitaNull() As Boolean
            Return Me.IsNull(Me.tableNoteAnamnesticheCerca.ComuneNascitaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetComuneNascitaNull()
            Me(Me.tableNoteAnamnesticheCerca.ComuneNascitaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCodiceSanitarioNull() As Boolean
            Return Me.IsNull(Me.tableNoteAnamnesticheCerca.CodiceSanitarioColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCodiceSanitarioNull()
            Me(Me.tableNoteAnamnesticheCerca.CodiceSanitarioColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class NoteAnamnesticheUltimiArriviRow
        Inherits Global.System.Data.DataRow
        
        Private tableNoteAnamnesticheUltimiArrivi As NoteAnamnesticheUltimiArriviDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableNoteAnamnesticheUltimiArrivi = CType(Me.Table,NoteAnamnesticheUltimiArriviDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property AziendaErogante() As String
            Get
                Return CType(Me(Me.tableNoteAnamnesticheUltimiArrivi.AziendaEroganteColumn),String)
            End Get
            Set
                Me(Me.tableNoteAnamnesticheUltimiArrivi.AziendaEroganteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SistemaErogante() As String
            Get
                Return CType(Me(Me.tableNoteAnamnesticheUltimiArrivi.SistemaEroganteColumn),String)
            End Get
            Set
                Me(Me.tableNoteAnamnesticheUltimiArrivi.SistemaEroganteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DataModifica() As Date
            Get
                Try 
                    Return CType(Me(Me.tableNoteAnamnesticheUltimiArrivi.DataModificaColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DataModifica' in table 'NoteAnamnesticheUltimiArrivi' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableNoteAnamnesticheUltimiArrivi.DataModificaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Count() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableNoteAnamnesticheUltimiArrivi.CountColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Count' in table 'NoteAnamnesticheUltimiArrivi' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableNoteAnamnesticheUltimiArrivi.CountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDataModificaNull() As Boolean
            Return Me.IsNull(Me.tableNoteAnamnesticheUltimiArrivi.DataModificaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDataModificaNull()
            Me(Me.tableNoteAnamnesticheUltimiArrivi.DataModificaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCountNull() As Boolean
            Return Me.IsNull(Me.tableNoteAnamnesticheUltimiArrivi.CountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCountNull()
            Me(Me.tableNoteAnamnesticheUltimiArrivi.CountColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class NoteAnamnesticheSinotticoRow
        Inherits Global.System.Data.DataRow
        
        Private tableNoteAnamnesticheSinottico As NoteAnamnesticheSinotticoDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableNoteAnamnesticheSinottico = CType(Me.Table,NoteAnamnesticheSinotticoDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IsTotale() As Byte
            Get
                Try 
                    Return CType(Me(Me.tableNoteAnamnesticheSinottico.IsTotaleColumn),Byte)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IsTotale' in table 'NoteAnamnesticheSinottico' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableNoteAnamnesticheSinottico.IsTotaleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IsSubTotale() As Byte
            Get
                Try 
                    Return CType(Me(Me.tableNoteAnamnesticheSinottico.IsSubTotaleColumn),Byte)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IsSubTotale' in table 'NoteAnamnesticheSinottico' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableNoteAnamnesticheSinottico.IsSubTotaleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property AziendaSistemaErogante() As String
            Get
                Try 
                    Return CType(Me(Me.tableNoteAnamnesticheSinottico.AziendaSistemaEroganteColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AziendaSistemaErogante' in table 'NoteAnamnesticheSinottico"& _ 
                            "' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableNoteAnamnesticheSinottico.AziendaSistemaEroganteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SubProcessoTipo() As String
            Get
                Try 
                    Return CType(Me(Me.tableNoteAnamnesticheSinottico.SubProcessoTipoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SubProcessoTipo' in table 'NoteAnamnesticheSinottico' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableNoteAnamnesticheSinottico.SubProcessoTipoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property InCorso() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableNoteAnamnesticheSinottico.InCorsoColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'InCorso' in table 'NoteAnamnesticheSinottico' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableNoteAnamnesticheSinottico.InCorsoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Completata() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableNoteAnamnesticheSinottico.CompletataColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Completata' in table 'NoteAnamnesticheSinottico' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableNoteAnamnesticheSinottico.CompletataColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Variata() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableNoteAnamnesticheSinottico.VariataColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Variata' in table 'NoteAnamnesticheSinottico' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableNoteAnamnesticheSinottico.VariataColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Cancellata() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableNoteAnamnesticheSinottico.CancellataColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Cancellata' in table 'NoteAnamnesticheSinottico' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableNoteAnamnesticheSinottico.CancellataColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsIsTotaleNull() As Boolean
            Return Me.IsNull(Me.tableNoteAnamnesticheSinottico.IsTotaleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetIsTotaleNull()
            Me(Me.tableNoteAnamnesticheSinottico.IsTotaleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsIsSubTotaleNull() As Boolean
            Return Me.IsNull(Me.tableNoteAnamnesticheSinottico.IsSubTotaleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetIsSubTotaleNull()
            Me(Me.tableNoteAnamnesticheSinottico.IsSubTotaleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsAziendaSistemaEroganteNull() As Boolean
            Return Me.IsNull(Me.tableNoteAnamnesticheSinottico.AziendaSistemaEroganteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetAziendaSistemaEroganteNull()
            Me(Me.tableNoteAnamnesticheSinottico.AziendaSistemaEroganteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSubProcessoTipoNull() As Boolean
            Return Me.IsNull(Me.tableNoteAnamnesticheSinottico.SubProcessoTipoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSubProcessoTipoNull()
            Me(Me.tableNoteAnamnesticheSinottico.SubProcessoTipoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsInCorsoNull() As Boolean
            Return Me.IsNull(Me.tableNoteAnamnesticheSinottico.InCorsoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetInCorsoNull()
            Me(Me.tableNoteAnamnesticheSinottico.InCorsoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCompletataNull() As Boolean
            Return Me.IsNull(Me.tableNoteAnamnesticheSinottico.CompletataColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCompletataNull()
            Me(Me.tableNoteAnamnesticheSinottico.CompletataColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsVariataNull() As Boolean
            Return Me.IsNull(Me.tableNoteAnamnesticheSinottico.VariataColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetVariataNull()
            Me(Me.tableNoteAnamnesticheSinottico.VariataColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCancellataNull() As Boolean
            Return Me.IsNull(Me.tableNoteAnamnesticheSinottico.CancellataColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCancellataNull()
            Me(Me.tableNoteAnamnesticheSinottico.CancellataColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class NoteAnamnesticheRiassociazioneListaRow
        Inherits Global.System.Data.DataRow
        
        Private tableNoteAnamnesticheRiassociazioneLista As NoteAnamnesticheRiassociazioneListaDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableNoteAnamnesticheRiassociazioneLista = CType(Me.Table,NoteAnamnesticheRiassociazioneListaDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ID() As System.Guid
            Get
                Return CType(Me(Me.tableNoteAnamnesticheRiassociazioneLista.IDColumn),Global.System.Guid)
            End Get
            Set
                Me(Me.tableNoteAnamnesticheRiassociazioneLista.IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IdEsterno() As String
            Get
                Return CType(Me(Me.tableNoteAnamnesticheRiassociazioneLista.IdEsternoColumn),String)
            End Get
            Set
                Me(Me.tableNoteAnamnesticheRiassociazioneLista.IdEsternoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IdPaziente() As System.Guid
            Get
                Return CType(Me(Me.tableNoteAnamnesticheRiassociazioneLista.IdPazienteColumn),Global.System.Guid)
            End Get
            Set
                Me(Me.tableNoteAnamnesticheRiassociazioneLista.IdPazienteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DataInserimento() As Date
            Get
                Return CType(Me(Me.tableNoteAnamnesticheRiassociazioneLista.DataInserimentoColumn),Date)
            End Get
            Set
                Me(Me.tableNoteAnamnesticheRiassociazioneLista.DataInserimentoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DataModifica() As Date
            Get
                Return CType(Me(Me.tableNoteAnamnesticheRiassociazioneLista.DataModificaColumn),Date)
            End Get
            Set
                Me(Me.tableNoteAnamnesticheRiassociazioneLista.DataModificaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property AziendaErogante() As String
            Get
                Return CType(Me(Me.tableNoteAnamnesticheRiassociazioneLista.AziendaEroganteColumn),String)
            End Get
            Set
                Me(Me.tableNoteAnamnesticheRiassociazioneLista.AziendaEroganteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SistemaErogante() As String
            Get
                Return CType(Me(Me.tableNoteAnamnesticheRiassociazioneLista.SistemaEroganteColumn),String)
            End Get
            Set
                Me(Me.tableNoteAnamnesticheRiassociazioneLista.SistemaEroganteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DataNota() As Date
            Get
                Return CType(Me(Me.tableNoteAnamnesticheRiassociazioneLista.DataNotaColumn),Date)
            End Get
            Set
                Me(Me.tableNoteAnamnesticheRiassociazioneLista.DataNotaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property StatoCodice() As Byte
            Get
                Return CType(Me(Me.tableNoteAnamnesticheRiassociazioneLista.StatoCodiceColumn),Byte)
            End Get
            Set
                Me(Me.tableNoteAnamnesticheRiassociazioneLista.StatoCodiceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DataFineValidita() As Date
            Get
                Try 
                    Return CType(Me(Me.tableNoteAnamnesticheRiassociazioneLista.DataFineValiditaColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DataFineValidita' in table 'NoteAnamnesticheRiassociazioneL"& _ 
                            "ista' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableNoteAnamnesticheRiassociazioneLista.DataFineValiditaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DataPartizione() As Date
            Get
                Return CType(Me(Me.tableNoteAnamnesticheRiassociazioneLista.DataPartizioneColumn),Date)
            End Get
            Set
                Me(Me.tableNoteAnamnesticheRiassociazioneLista.DataPartizioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Contenuto() As Byte()
            Get
                Return CType(Me(Me.tableNoteAnamnesticheRiassociazioneLista.ContenutoColumn),Byte())
            End Get
            Set
                Me(Me.tableNoteAnamnesticheRiassociazioneLista.ContenutoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ContenutoText() As String
            Get
                Return CType(Me(Me.tableNoteAnamnesticheRiassociazioneLista.ContenutoTextColumn),String)
            End Get
            Set
                Me(Me.tableNoteAnamnesticheRiassociazioneLista.ContenutoTextColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property TipoCodice() As String
            Get
                Return CType(Me(Me.tableNoteAnamnesticheRiassociazioneLista.TipoCodiceColumn),String)
            End Get
            Set
                Me(Me.tableNoteAnamnesticheRiassociazioneLista.TipoCodiceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property TipoDescrizione() As String
            Get
                Return CType(Me(Me.tableNoteAnamnesticheRiassociazioneLista.TipoDescrizioneColumn),String)
            End Get
            Set
                Me(Me.tableNoteAnamnesticheRiassociazioneLista.TipoDescrizioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property TipoContenuto() As String
            Get
                Return CType(Me(Me.tableNoteAnamnesticheRiassociazioneLista.TipoContenutoColumn),String)
            End Get
            Set
                Me(Me.tableNoteAnamnesticheRiassociazioneLista.TipoContenutoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property StatoCodiceDesc() As String
            Get
                Try 
                    Return CType(Me(Me.tableNoteAnamnesticheRiassociazioneLista.StatoCodiceDescColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'StatoCodiceDesc' in table 'NoteAnamnesticheRiassociazioneLi"& _ 
                            "sta' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableNoteAnamnesticheRiassociazioneLista.StatoCodiceDescColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Cognome() As String
            Get
                Try 
                    Return CType(Me(Me.tableNoteAnamnesticheRiassociazioneLista.CognomeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Cognome' in table 'NoteAnamnesticheRiassociazioneLista' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableNoteAnamnesticheRiassociazioneLista.CognomeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Nome() As String
            Get
                Try 
                    Return CType(Me(Me.tableNoteAnamnesticheRiassociazioneLista.NomeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Nome' in table 'NoteAnamnesticheRiassociazioneLista' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableNoteAnamnesticheRiassociazioneLista.NomeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Sesso() As String
            Get
                Try 
                    Return CType(Me(Me.tableNoteAnamnesticheRiassociazioneLista.SessoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sesso' in table 'NoteAnamnesticheRiassociazioneLista' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableNoteAnamnesticheRiassociazioneLista.SessoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CodiceFiscale() As String
            Get
                Try 
                    Return CType(Me(Me.tableNoteAnamnesticheRiassociazioneLista.CodiceFiscaleColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CodiceFiscale' in table 'NoteAnamnesticheRiassociazioneList"& _ 
                            "a' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableNoteAnamnesticheRiassociazioneLista.CodiceFiscaleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DataNascita() As Date
            Get
                Try 
                    Return CType(Me(Me.tableNoteAnamnesticheRiassociazioneLista.DataNascitaColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DataNascita' in table 'NoteAnamnesticheRiassociazioneLista'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableNoteAnamnesticheRiassociazioneLista.DataNascitaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ComuneNascita() As String
            Get
                Try 
                    Return CType(Me(Me.tableNoteAnamnesticheRiassociazioneLista.ComuneNascitaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ComuneNascita' in table 'NoteAnamnesticheRiassociazioneList"& _ 
                            "a' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableNoteAnamnesticheRiassociazioneLista.ComuneNascitaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ProvinciaNascita() As String
            Get
                Try 
                    Return CType(Me(Me.tableNoteAnamnesticheRiassociazioneLista.ProvinciaNascitaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ProvinciaNascita' in table 'NoteAnamnesticheRiassociazioneL"& _ 
                            "ista' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableNoteAnamnesticheRiassociazioneLista.ProvinciaNascitaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CodiceAnagraficaCentrale() As String
            Get
                Try 
                    Return CType(Me(Me.tableNoteAnamnesticheRiassociazioneLista.CodiceAnagraficaCentraleColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CodiceAnagraficaCentrale' in table 'NoteAnamnesticheRiassoc"& _ 
                            "iazioneLista' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableNoteAnamnesticheRiassociazioneLista.CodiceAnagraficaCentraleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property NomeAnagraficaCentrale() As String
            Get
                Try 
                    Return CType(Me(Me.tableNoteAnamnesticheRiassociazioneLista.NomeAnagraficaCentraleColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NomeAnagraficaCentrale' in table 'NoteAnamnesticheRiassocia"& _ 
                            "zioneLista' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableNoteAnamnesticheRiassociazioneLista.NomeAnagraficaCentraleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SACCognome() As String
            Get
                Try 
                    Return CType(Me(Me.tableNoteAnamnesticheRiassociazioneLista.SACCognomeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SACCognome' in table 'NoteAnamnesticheRiassociazioneLista' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableNoteAnamnesticheRiassociazioneLista.SACCognomeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SACNome() As String
            Get
                Try 
                    Return CType(Me(Me.tableNoteAnamnesticheRiassociazioneLista.SACNomeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SACNome' in table 'NoteAnamnesticheRiassociazioneLista' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableNoteAnamnesticheRiassociazioneLista.SACNomeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SACCodiceFiscale() As String
            Get
                Try 
                    Return CType(Me(Me.tableNoteAnamnesticheRiassociazioneLista.SACCodiceFiscaleColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SACCodiceFiscale' in table 'NoteAnamnesticheRiassociazioneL"& _ 
                            "ista' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableNoteAnamnesticheRiassociazioneLista.SACCodiceFiscaleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SACDataNascita() As Date
            Get
                Try 
                    Return CType(Me(Me.tableNoteAnamnesticheRiassociazioneLista.SACDataNascitaColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SACDataNascita' in table 'NoteAnamnesticheRiassociazioneLis"& _ 
                            "ta' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableNoteAnamnesticheRiassociazioneLista.SACDataNascitaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SACComuneNascita() As String
            Get
                Try 
                    Return CType(Me(Me.tableNoteAnamnesticheRiassociazioneLista.SACComuneNascitaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SACComuneNascita' in table 'NoteAnamnesticheRiassociazioneL"& _ 
                            "ista' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableNoteAnamnesticheRiassociazioneLista.SACComuneNascitaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SACProvincaNascita() As String
            Get
                Try 
                    Return CType(Me(Me.tableNoteAnamnesticheRiassociazioneLista.SACProvincaNascitaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SACProvincaNascita' in table 'NoteAnamnesticheRiassociazion"& _ 
                            "eLista' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableNoteAnamnesticheRiassociazioneLista.SACProvincaNascitaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SACProvenienza() As String
            Get
                Try 
                    Return CType(Me(Me.tableNoteAnamnesticheRiassociazioneLista.SACProvenienzaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SACProvenienza' in table 'NoteAnamnesticheRiassociazioneLis"& _ 
                            "ta' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableNoteAnamnesticheRiassociazioneLista.SACProvenienzaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SACIdProvenienza() As String
            Get
                Try 
                    Return CType(Me(Me.tableNoteAnamnesticheRiassociazioneLista.SACIdProvenienzaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SACIdProvenienza' in table 'NoteAnamnesticheRiassociazioneL"& _ 
                            "ista' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableNoteAnamnesticheRiassociazioneLista.SACIdProvenienzaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDataFineValiditaNull() As Boolean
            Return Me.IsNull(Me.tableNoteAnamnesticheRiassociazioneLista.DataFineValiditaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDataFineValiditaNull()
            Me(Me.tableNoteAnamnesticheRiassociazioneLista.DataFineValiditaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsStatoCodiceDescNull() As Boolean
            Return Me.IsNull(Me.tableNoteAnamnesticheRiassociazioneLista.StatoCodiceDescColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetStatoCodiceDescNull()
            Me(Me.tableNoteAnamnesticheRiassociazioneLista.StatoCodiceDescColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCognomeNull() As Boolean
            Return Me.IsNull(Me.tableNoteAnamnesticheRiassociazioneLista.CognomeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCognomeNull()
            Me(Me.tableNoteAnamnesticheRiassociazioneLista.CognomeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsNomeNull() As Boolean
            Return Me.IsNull(Me.tableNoteAnamnesticheRiassociazioneLista.NomeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetNomeNull()
            Me(Me.tableNoteAnamnesticheRiassociazioneLista.NomeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSessoNull() As Boolean
            Return Me.IsNull(Me.tableNoteAnamnesticheRiassociazioneLista.SessoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSessoNull()
            Me(Me.tableNoteAnamnesticheRiassociazioneLista.SessoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCodiceFiscaleNull() As Boolean
            Return Me.IsNull(Me.tableNoteAnamnesticheRiassociazioneLista.CodiceFiscaleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCodiceFiscaleNull()
            Me(Me.tableNoteAnamnesticheRiassociazioneLista.CodiceFiscaleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDataNascitaNull() As Boolean
            Return Me.IsNull(Me.tableNoteAnamnesticheRiassociazioneLista.DataNascitaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDataNascitaNull()
            Me(Me.tableNoteAnamnesticheRiassociazioneLista.DataNascitaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsComuneNascitaNull() As Boolean
            Return Me.IsNull(Me.tableNoteAnamnesticheRiassociazioneLista.ComuneNascitaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetComuneNascitaNull()
            Me(Me.tableNoteAnamnesticheRiassociazioneLista.ComuneNascitaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsProvinciaNascitaNull() As Boolean
            Return Me.IsNull(Me.tableNoteAnamnesticheRiassociazioneLista.ProvinciaNascitaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetProvinciaNascitaNull()
            Me(Me.tableNoteAnamnesticheRiassociazioneLista.ProvinciaNascitaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCodiceAnagraficaCentraleNull() As Boolean
            Return Me.IsNull(Me.tableNoteAnamnesticheRiassociazioneLista.CodiceAnagraficaCentraleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCodiceAnagraficaCentraleNull()
            Me(Me.tableNoteAnamnesticheRiassociazioneLista.CodiceAnagraficaCentraleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsNomeAnagraficaCentraleNull() As Boolean
            Return Me.IsNull(Me.tableNoteAnamnesticheRiassociazioneLista.NomeAnagraficaCentraleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetNomeAnagraficaCentraleNull()
            Me(Me.tableNoteAnamnesticheRiassociazioneLista.NomeAnagraficaCentraleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSACCognomeNull() As Boolean
            Return Me.IsNull(Me.tableNoteAnamnesticheRiassociazioneLista.SACCognomeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSACCognomeNull()
            Me(Me.tableNoteAnamnesticheRiassociazioneLista.SACCognomeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSACNomeNull() As Boolean
            Return Me.IsNull(Me.tableNoteAnamnesticheRiassociazioneLista.SACNomeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSACNomeNull()
            Me(Me.tableNoteAnamnesticheRiassociazioneLista.SACNomeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSACCodiceFiscaleNull() As Boolean
            Return Me.IsNull(Me.tableNoteAnamnesticheRiassociazioneLista.SACCodiceFiscaleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSACCodiceFiscaleNull()
            Me(Me.tableNoteAnamnesticheRiassociazioneLista.SACCodiceFiscaleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSACDataNascitaNull() As Boolean
            Return Me.IsNull(Me.tableNoteAnamnesticheRiassociazioneLista.SACDataNascitaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSACDataNascitaNull()
            Me(Me.tableNoteAnamnesticheRiassociazioneLista.SACDataNascitaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSACComuneNascitaNull() As Boolean
            Return Me.IsNull(Me.tableNoteAnamnesticheRiassociazioneLista.SACComuneNascitaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSACComuneNascitaNull()
            Me(Me.tableNoteAnamnesticheRiassociazioneLista.SACComuneNascitaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSACProvincaNascitaNull() As Boolean
            Return Me.IsNull(Me.tableNoteAnamnesticheRiassociazioneLista.SACProvincaNascitaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSACProvincaNascitaNull()
            Me(Me.tableNoteAnamnesticheRiassociazioneLista.SACProvincaNascitaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSACProvenienzaNull() As Boolean
            Return Me.IsNull(Me.tableNoteAnamnesticheRiassociazioneLista.SACProvenienzaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSACProvenienzaNull()
            Me(Me.tableNoteAnamnesticheRiassociazioneLista.SACProvenienzaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSACIdProvenienzaNull() As Boolean
            Return Me.IsNull(Me.tableNoteAnamnesticheRiassociazioneLista.SACIdProvenienzaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSACIdProvenienzaNull()
            Me(Me.tableNoteAnamnesticheRiassociazioneLista.SACIdProvenienzaColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class NotaAnamnesticaRiassociazioneOttieniRow
        Inherits Global.System.Data.DataRow
        
        Private tableNotaAnamnesticaRiassociazioneOttieni As NotaAnamnesticaRiassociazioneOttieniDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableNotaAnamnesticaRiassociazioneOttieni = CType(Me.Table,NotaAnamnesticaRiassociazioneOttieniDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Id() As System.Guid
            Get
                Return CType(Me(Me.tableNotaAnamnesticaRiassociazioneOttieni.IdColumn),Global.System.Guid)
            End Get
            Set
                Me(Me.tableNotaAnamnesticaRiassociazioneOttieni.IdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DataPartizione() As Date
            Get
                Return CType(Me(Me.tableNotaAnamnesticaRiassociazioneOttieni.DataPartizioneColumn),Date)
            End Get
            Set
                Me(Me.tableNotaAnamnesticaRiassociazioneOttieni.DataPartizioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IdEsterno() As String
            Get
                Return CType(Me(Me.tableNotaAnamnesticaRiassociazioneOttieni.IdEsternoColumn),String)
            End Get
            Set
                Me(Me.tableNotaAnamnesticaRiassociazioneOttieni.IdEsternoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property IdPaziente() As System.Guid
            Get
                Return CType(Me(Me.tableNotaAnamnesticaRiassociazioneOttieni.IdPazienteColumn),Global.System.Guid)
            End Get
            Set
                Me(Me.tableNotaAnamnesticaRiassociazioneOttieni.IdPazienteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DataInserimento() As Date
            Get
                Return CType(Me(Me.tableNotaAnamnesticaRiassociazioneOttieni.DataInserimentoColumn),Date)
            End Get
            Set
                Me(Me.tableNotaAnamnesticaRiassociazioneOttieni.DataInserimentoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DataModifica() As Date
            Get
                Return CType(Me(Me.tableNotaAnamnesticaRiassociazioneOttieni.DataModificaColumn),Date)
            End Get
            Set
                Me(Me.tableNotaAnamnesticaRiassociazioneOttieni.DataModificaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DataModificaEsterno() As Date
            Get
                Try 
                    Return CType(Me(Me.tableNotaAnamnesticaRiassociazioneOttieni.DataModificaEsternoColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DataModificaEsterno' in table 'NotaAnamnesticaRiassociazion"& _ 
                            "eOttieni' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableNotaAnamnesticaRiassociazioneOttieni.DataModificaEsternoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property AziendaErogante() As String
            Get
                Return CType(Me(Me.tableNotaAnamnesticaRiassociazioneOttieni.AziendaEroganteColumn),String)
            End Get
            Set
                Me(Me.tableNotaAnamnesticaRiassociazioneOttieni.AziendaEroganteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SistemaErogante() As String
            Get
                Return CType(Me(Me.tableNotaAnamnesticaRiassociazioneOttieni.SistemaEroganteColumn),String)
            End Get
            Set
                Me(Me.tableNotaAnamnesticaRiassociazioneOttieni.SistemaEroganteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DataNota() As Date
            Get
                Return CType(Me(Me.tableNotaAnamnesticaRiassociazioneOttieni.DataNotaColumn),Date)
            End Get
            Set
                Me(Me.tableNotaAnamnesticaRiassociazioneOttieni.DataNotaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DataFineValidita() As Date
            Get
                Try 
                    Return CType(Me(Me.tableNotaAnamnesticaRiassociazioneOttieni.DataFineValiditaColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DataFineValidita' in table 'NotaAnamnesticaRiassociazioneOt"& _ 
                            "tieni' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableNotaAnamnesticaRiassociazioneOttieni.DataFineValiditaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property TipoCodice() As String
            Get
                Return CType(Me(Me.tableNotaAnamnesticaRiassociazioneOttieni.TipoCodiceColumn),String)
            End Get
            Set
                Me(Me.tableNotaAnamnesticaRiassociazioneOttieni.TipoCodiceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property TipoDescrizione() As String
            Get
                Return CType(Me(Me.tableNotaAnamnesticaRiassociazioneOttieni.TipoDescrizioneColumn),String)
            End Get
            Set
                Me(Me.tableNotaAnamnesticaRiassociazioneOttieni.TipoDescrizioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Contenuto() As Byte()
            Get
                Return CType(Me(Me.tableNotaAnamnesticaRiassociazioneOttieni.ContenutoColumn),Byte())
            End Get
            Set
                Me(Me.tableNotaAnamnesticaRiassociazioneOttieni.ContenutoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property TipoContenuto() As String
            Get
                Return CType(Me(Me.tableNotaAnamnesticaRiassociazioneOttieni.TipoContenutoColumn),String)
            End Get
            Set
                Me(Me.tableNotaAnamnesticaRiassociazioneOttieni.TipoContenutoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ContenutoHtml() As String
            Get
                Return CType(Me(Me.tableNotaAnamnesticaRiassociazioneOttieni.ContenutoHtmlColumn),String)
            End Get
            Set
                Me(Me.tableNotaAnamnesticaRiassociazioneOttieni.ContenutoHtmlColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ContenutoText() As String
            Get
                Return CType(Me(Me.tableNotaAnamnesticaRiassociazioneOttieni.ContenutoTextColumn),String)
            End Get
            Set
                Me(Me.tableNotaAnamnesticaRiassociazioneOttieni.ContenutoTextColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property StatoCodiceDesc() As String
            Get
                Try 
                    Return CType(Me(Me.tableNotaAnamnesticaRiassociazioneOttieni.StatoCodiceDescColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'StatoCodiceDesc' in table 'NotaAnamnesticaRiassociazioneOtt"& _ 
                            "ieni' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableNotaAnamnesticaRiassociazioneOttieni.StatoCodiceDescColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Cognome() As String
            Get
                Try 
                    Return CType(Me(Me.tableNotaAnamnesticaRiassociazioneOttieni.CognomeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Cognome' in table 'NotaAnamnesticaRiassociazioneOttieni' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableNotaAnamnesticaRiassociazioneOttieni.CognomeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Nome() As String
            Get
                Try 
                    Return CType(Me(Me.tableNotaAnamnesticaRiassociazioneOttieni.NomeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Nome' in table 'NotaAnamnesticaRiassociazioneOttieni' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableNotaAnamnesticaRiassociazioneOttieni.NomeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property Sesso() As String
            Get
                Try 
                    Return CType(Me(Me.tableNotaAnamnesticaRiassociazioneOttieni.SessoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sesso' in table 'NotaAnamnesticaRiassociazioneOttieni' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableNotaAnamnesticaRiassociazioneOttieni.SessoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CodiceFiscale() As String
            Get
                Try 
                    Return CType(Me(Me.tableNotaAnamnesticaRiassociazioneOttieni.CodiceFiscaleColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CodiceFiscale' in table 'NotaAnamnesticaRiassociazioneOttie"& _ 
                            "ni' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableNotaAnamnesticaRiassociazioneOttieni.CodiceFiscaleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property DataNascita() As Date
            Get
                Try 
                    Return CType(Me(Me.tableNotaAnamnesticaRiassociazioneOttieni.DataNascitaColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DataNascita' in table 'NotaAnamnesticaRiassociazioneOttieni"& _ 
                            "' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableNotaAnamnesticaRiassociazioneOttieni.DataNascitaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ComuneNascita() As String
            Get
                Try 
                    Return CType(Me(Me.tableNotaAnamnesticaRiassociazioneOttieni.ComuneNascitaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ComuneNascita' in table 'NotaAnamnesticaRiassociazioneOttie"& _ 
                            "ni' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableNotaAnamnesticaRiassociazioneOttieni.ComuneNascitaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ProvinciaNascita() As String
            Get
                Try 
                    Return CType(Me(Me.tableNotaAnamnesticaRiassociazioneOttieni.ProvinciaNascitaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ProvinciaNascita' in table 'NotaAnamnesticaRiassociazioneOt"& _ 
                            "tieni' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableNotaAnamnesticaRiassociazioneOttieni.ProvinciaNascitaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CodiceAnagraficaCentrale() As String
            Get
                Try 
                    Return CType(Me(Me.tableNotaAnamnesticaRiassociazioneOttieni.CodiceAnagraficaCentraleColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CodiceAnagraficaCentrale' in table 'NotaAnamnesticaRiassoci"& _ 
                            "azioneOttieni' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableNotaAnamnesticaRiassociazioneOttieni.CodiceAnagraficaCentraleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property NomeAnagraficaCentrale() As String
            Get
                Try 
                    Return CType(Me(Me.tableNotaAnamnesticaRiassociazioneOttieni.NomeAnagraficaCentraleColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NomeAnagraficaCentrale' in table 'NotaAnamnesticaRiassociaz"& _ 
                            "ioneOttieni' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableNotaAnamnesticaRiassociazioneOttieni.NomeAnagraficaCentraleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property CodiceSanitario() As String
            Get
                Try 
                    Return CType(Me(Me.tableNotaAnamnesticaRiassociazioneOttieni.CodiceSanitarioColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CodiceSanitario' in table 'NotaAnamnesticaRiassociazioneOtt"& _ 
                            "ieni' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableNotaAnamnesticaRiassociazioneOttieni.CodiceSanitarioColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SACCognome() As String
            Get
                Try 
                    Return CType(Me(Me.tableNotaAnamnesticaRiassociazioneOttieni.SACCognomeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SACCognome' in table 'NotaAnamnesticaRiassociazioneOttieni'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableNotaAnamnesticaRiassociazioneOttieni.SACCognomeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SACNome() As String
            Get
                Try 
                    Return CType(Me(Me.tableNotaAnamnesticaRiassociazioneOttieni.SACNomeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SACNome' in table 'NotaAnamnesticaRiassociazioneOttieni' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableNotaAnamnesticaRiassociazioneOttieni.SACNomeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SACSesso() As String
            Get
                Try 
                    Return CType(Me(Me.tableNotaAnamnesticaRiassociazioneOttieni.SACSessoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SACSesso' in table 'NotaAnamnesticaRiassociazioneOttieni' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableNotaAnamnesticaRiassociazioneOttieni.SACSessoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SACCodiceFiscale() As String
            Get
                Try 
                    Return CType(Me(Me.tableNotaAnamnesticaRiassociazioneOttieni.SACCodiceFiscaleColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SACCodiceFiscale' in table 'NotaAnamnesticaRiassociazioneOt"& _ 
                            "tieni' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableNotaAnamnesticaRiassociazioneOttieni.SACCodiceFiscaleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SACDataNascita() As Date
            Get
                Try 
                    Return CType(Me(Me.tableNotaAnamnesticaRiassociazioneOttieni.SACDataNascitaColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SACDataNascita' in table 'NotaAnamnesticaRiassociazioneOtti"& _ 
                            "eni' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableNotaAnamnesticaRiassociazioneOttieni.SACDataNascitaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SACComuneNascita() As String
            Get
                Try 
                    Return CType(Me(Me.tableNotaAnamnesticaRiassociazioneOttieni.SACComuneNascitaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SACComuneNascita' in table 'NotaAnamnesticaRiassociazioneOt"& _ 
                            "tieni' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableNotaAnamnesticaRiassociazioneOttieni.SACComuneNascitaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SACProvinciaNascita() As String
            Get
                Try 
                    Return CType(Me(Me.tableNotaAnamnesticaRiassociazioneOttieni.SACProvinciaNascitaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SACProvinciaNascita' in table 'NotaAnamnesticaRiassociazion"& _ 
                            "eOttieni' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableNotaAnamnesticaRiassociazioneOttieni.SACProvinciaNascitaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SACProvenienza() As String
            Get
                Try 
                    Return CType(Me(Me.tableNotaAnamnesticaRiassociazioneOttieni.SACProvenienzaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SACProvenienza' in table 'NotaAnamnesticaRiassociazioneOtti"& _ 
                            "eni' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableNotaAnamnesticaRiassociazioneOttieni.SACProvenienzaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SACIdProvenienza() As String
            Get
                Try 
                    Return CType(Me(Me.tableNotaAnamnesticaRiassociazioneOttieni.SACIdProvenienzaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SACIdProvenienza' in table 'NotaAnamnesticaRiassociazioneOt"& _ 
                            "tieni' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableNotaAnamnesticaRiassociazioneOttieni.SACIdProvenienzaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property SACTessera() As String
            Get
                Try 
                    Return CType(Me(Me.tableNotaAnamnesticaRiassociazioneOttieni.SACTesseraColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SACTessera' in table 'NotaAnamnesticaRiassociazioneOttieni'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableNotaAnamnesticaRiassociazioneOttieni.SACTesseraColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDataModificaEsternoNull() As Boolean
            Return Me.IsNull(Me.tableNotaAnamnesticaRiassociazioneOttieni.DataModificaEsternoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDataModificaEsternoNull()
            Me(Me.tableNotaAnamnesticaRiassociazioneOttieni.DataModificaEsternoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDataFineValiditaNull() As Boolean
            Return Me.IsNull(Me.tableNotaAnamnesticaRiassociazioneOttieni.DataFineValiditaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDataFineValiditaNull()
            Me(Me.tableNotaAnamnesticaRiassociazioneOttieni.DataFineValiditaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsStatoCodiceDescNull() As Boolean
            Return Me.IsNull(Me.tableNotaAnamnesticaRiassociazioneOttieni.StatoCodiceDescColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetStatoCodiceDescNull()
            Me(Me.tableNotaAnamnesticaRiassociazioneOttieni.StatoCodiceDescColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCognomeNull() As Boolean
            Return Me.IsNull(Me.tableNotaAnamnesticaRiassociazioneOttieni.CognomeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCognomeNull()
            Me(Me.tableNotaAnamnesticaRiassociazioneOttieni.CognomeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsNomeNull() As Boolean
            Return Me.IsNull(Me.tableNotaAnamnesticaRiassociazioneOttieni.NomeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetNomeNull()
            Me(Me.tableNotaAnamnesticaRiassociazioneOttieni.NomeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSessoNull() As Boolean
            Return Me.IsNull(Me.tableNotaAnamnesticaRiassociazioneOttieni.SessoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSessoNull()
            Me(Me.tableNotaAnamnesticaRiassociazioneOttieni.SessoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCodiceFiscaleNull() As Boolean
            Return Me.IsNull(Me.tableNotaAnamnesticaRiassociazioneOttieni.CodiceFiscaleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCodiceFiscaleNull()
            Me(Me.tableNotaAnamnesticaRiassociazioneOttieni.CodiceFiscaleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsDataNascitaNull() As Boolean
            Return Me.IsNull(Me.tableNotaAnamnesticaRiassociazioneOttieni.DataNascitaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetDataNascitaNull()
            Me(Me.tableNotaAnamnesticaRiassociazioneOttieni.DataNascitaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsComuneNascitaNull() As Boolean
            Return Me.IsNull(Me.tableNotaAnamnesticaRiassociazioneOttieni.ComuneNascitaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetComuneNascitaNull()
            Me(Me.tableNotaAnamnesticaRiassociazioneOttieni.ComuneNascitaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsProvinciaNascitaNull() As Boolean
            Return Me.IsNull(Me.tableNotaAnamnesticaRiassociazioneOttieni.ProvinciaNascitaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetProvinciaNascitaNull()
            Me(Me.tableNotaAnamnesticaRiassociazioneOttieni.ProvinciaNascitaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCodiceAnagraficaCentraleNull() As Boolean
            Return Me.IsNull(Me.tableNotaAnamnesticaRiassociazioneOttieni.CodiceAnagraficaCentraleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCodiceAnagraficaCentraleNull()
            Me(Me.tableNotaAnamnesticaRiassociazioneOttieni.CodiceAnagraficaCentraleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsNomeAnagraficaCentraleNull() As Boolean
            Return Me.IsNull(Me.tableNotaAnamnesticaRiassociazioneOttieni.NomeAnagraficaCentraleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetNomeAnagraficaCentraleNull()
            Me(Me.tableNotaAnamnesticaRiassociazioneOttieni.NomeAnagraficaCentraleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsCodiceSanitarioNull() As Boolean
            Return Me.IsNull(Me.tableNotaAnamnesticaRiassociazioneOttieni.CodiceSanitarioColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetCodiceSanitarioNull()
            Me(Me.tableNotaAnamnesticaRiassociazioneOttieni.CodiceSanitarioColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSACCognomeNull() As Boolean
            Return Me.IsNull(Me.tableNotaAnamnesticaRiassociazioneOttieni.SACCognomeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSACCognomeNull()
            Me(Me.tableNotaAnamnesticaRiassociazioneOttieni.SACCognomeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSACNomeNull() As Boolean
            Return Me.IsNull(Me.tableNotaAnamnesticaRiassociazioneOttieni.SACNomeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSACNomeNull()
            Me(Me.tableNotaAnamnesticaRiassociazioneOttieni.SACNomeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSACSessoNull() As Boolean
            Return Me.IsNull(Me.tableNotaAnamnesticaRiassociazioneOttieni.SACSessoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSACSessoNull()
            Me(Me.tableNotaAnamnesticaRiassociazioneOttieni.SACSessoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSACCodiceFiscaleNull() As Boolean
            Return Me.IsNull(Me.tableNotaAnamnesticaRiassociazioneOttieni.SACCodiceFiscaleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSACCodiceFiscaleNull()
            Me(Me.tableNotaAnamnesticaRiassociazioneOttieni.SACCodiceFiscaleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSACDataNascitaNull() As Boolean
            Return Me.IsNull(Me.tableNotaAnamnesticaRiassociazioneOttieni.SACDataNascitaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSACDataNascitaNull()
            Me(Me.tableNotaAnamnesticaRiassociazioneOttieni.SACDataNascitaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSACComuneNascitaNull() As Boolean
            Return Me.IsNull(Me.tableNotaAnamnesticaRiassociazioneOttieni.SACComuneNascitaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSACComuneNascitaNull()
            Me(Me.tableNotaAnamnesticaRiassociazioneOttieni.SACComuneNascitaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSACProvinciaNascitaNull() As Boolean
            Return Me.IsNull(Me.tableNotaAnamnesticaRiassociazioneOttieni.SACProvinciaNascitaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSACProvinciaNascitaNull()
            Me(Me.tableNotaAnamnesticaRiassociazioneOttieni.SACProvinciaNascitaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSACProvenienzaNull() As Boolean
            Return Me.IsNull(Me.tableNotaAnamnesticaRiassociazioneOttieni.SACProvenienzaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSACProvenienzaNull()
            Me(Me.tableNotaAnamnesticaRiassociazioneOttieni.SACProvenienzaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSACIdProvenienzaNull() As Boolean
            Return Me.IsNull(Me.tableNotaAnamnesticaRiassociazioneOttieni.SACIdProvenienzaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSACIdProvenienzaNull()
            Me(Me.tableNotaAnamnesticaRiassociazioneOttieni.SACIdProvenienzaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Function IsSACTesseraNull() As Boolean
            Return Me.IsNull(Me.tableNotaAnamnesticaRiassociazioneOttieni.SACTesseraColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub SetSACTesseraNull()
            Me(Me.tableNotaAnamnesticaRiassociazioneOttieni.SACTesseraColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class NotaAnamnesticaOttieniRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As NotaAnamnesticaOttieniRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As NotaAnamnesticaOttieniRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As NotaAnamnesticaOttieniRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class AttributiNotaAnamnesticaOttieniRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As AttributiNotaAnamnesticaOttieniRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As AttributiNotaAnamnesticaOttieniRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As AttributiNotaAnamnesticaOttieniRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class NoteAnamnesticheCercaRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As NoteAnamnesticheCercaRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As NoteAnamnesticheCercaRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As NoteAnamnesticheCercaRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class NoteAnamnesticheUltimiArriviRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As NoteAnamnesticheUltimiArriviRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As NoteAnamnesticheUltimiArriviRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As NoteAnamnesticheUltimiArriviRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class NoteAnamnesticheSinotticoRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As NoteAnamnesticheSinotticoRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As NoteAnamnesticheSinotticoRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As NoteAnamnesticheSinotticoRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class NoteAnamnesticheRiassociazioneListaRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As NoteAnamnesticheRiassociazioneListaRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As NoteAnamnesticheRiassociazioneListaRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As NoteAnamnesticheRiassociazioneListaRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
    Public Class NotaAnamnesticaRiassociazioneOttieniRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As NotaAnamnesticaRiassociazioneOttieniRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New(ByVal row As NotaAnamnesticaRiassociazioneOttieniRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Row() As NotaAnamnesticaRiassociazioneOttieniRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace NoteAnamnesticheDataSetTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class NotaAnamnesticaOttieniTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "NotaAnamnesticaOttieni"
            tableMapping.ColumnMappings.Add("Id", "Id")
            tableMapping.ColumnMappings.Add("DataPartizione", "DataPartizione")
            tableMapping.ColumnMappings.Add("IdEsterno", "IdEsterno")
            tableMapping.ColumnMappings.Add("IdPaziente", "IdPaziente")
            tableMapping.ColumnMappings.Add("DataInserimento", "DataInserimento")
            tableMapping.ColumnMappings.Add("DataModifica", "DataModifica")
            tableMapping.ColumnMappings.Add("DataModificaEsterno", "DataModificaEsterno")
            tableMapping.ColumnMappings.Add("StatoCodice", "StatoCodice")
            tableMapping.ColumnMappings.Add("StatoDescrizione", "StatoDescrizione")
            tableMapping.ColumnMappings.Add("AziendaErogante", "AziendaErogante")
            tableMapping.ColumnMappings.Add("SistemaErogante", "SistemaErogante")
            tableMapping.ColumnMappings.Add("DataNota", "DataNota")
            tableMapping.ColumnMappings.Add("DataFineValidita", "DataFineValidita")
            tableMapping.ColumnMappings.Add("TipoCodice", "TipoCodice")
            tableMapping.ColumnMappings.Add("TipoDescrizione", "TipoDescrizione")
            tableMapping.ColumnMappings.Add("Contenuto", "Contenuto")
            tableMapping.ColumnMappings.Add("TipoContenuto", "TipoContenuto")
            tableMapping.ColumnMappings.Add("ContenutoHtml", "ContenutoHtml")
            tableMapping.ColumnMappings.Add("ContenutoText", "ContenutoText")
            tableMapping.ColumnMappings.Add("Cognome", "Cognome")
            tableMapping.ColumnMappings.Add("Nome", "Nome")
            tableMapping.ColumnMappings.Add("Sesso", "Sesso")
            tableMapping.ColumnMappings.Add("CodiceFiscale", "CodiceFiscale")
            tableMapping.ColumnMappings.Add("DataNascita", "DataNascita")
            tableMapping.ColumnMappings.Add("ComuneNascita", "ComuneNascita")
            tableMapping.ColumnMappings.Add("CodiceSanitario", "CodiceSanitario")
            tableMapping.ColumnMappings.Add("Attributi", "Attributi")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings("AuslAsmnRe_DwhClinicoV3ConnectionString").ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.BevsNotaAnamnesticaOttieni"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdNotaAnamnestica", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As NoteAnamnesticheDataSet.NotaAnamnesticaOttieniDataTable, ByVal IdNotaAnamnestica As Global.System.Nullable(Of Global.System.Guid)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (IdNotaAnamnestica.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(IdNotaAnamnestica.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal IdNotaAnamnestica As Global.System.Nullable(Of Global.System.Guid)) As NoteAnamnesticheDataSet.NotaAnamnesticaOttieniDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (IdNotaAnamnestica.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(IdNotaAnamnestica.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As NoteAnamnesticheDataSet.NotaAnamnesticaOttieniDataTable = New NoteAnamnesticheDataSet.NotaAnamnesticaOttieniDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class AttributiNotaAnamnesticaOttieniTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "AttributiNotaAnamnesticaOttieni"
            tableMapping.ColumnMappings.Add("IdNoteAnamnesticheBase", "IdNoteAnamnesticheBase")
            tableMapping.ColumnMappings.Add("Nome", "Nome")
            tableMapping.ColumnMappings.Add("Valore", "Valore")
            tableMapping.ColumnMappings.Add("DataPartizione", "DataPartizione")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings("AuslAsmnRe_DwhClinicoV3ConnectionString").ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.BevsAttributiNotaAnamnesticaOttieni"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdNotaAnamnestica", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As NoteAnamnesticheDataSet.AttributiNotaAnamnesticaOttieniDataTable, ByVal IdNotaAnamnestica As Global.System.Nullable(Of Global.System.Guid)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (IdNotaAnamnestica.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(IdNotaAnamnestica.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal IdNotaAnamnestica As Global.System.Nullable(Of Global.System.Guid)) As NoteAnamnesticheDataSet.AttributiNotaAnamnesticaOttieniDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (IdNotaAnamnestica.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(IdNotaAnamnestica.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As NoteAnamnesticheDataSet.AttributiNotaAnamnesticaOttieniDataTable = New NoteAnamnesticheDataSet.AttributiNotaAnamnesticaOttieniDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class NoteAnamnesticheCercaTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "NoteAnamnesticheCerca"
            tableMapping.ColumnMappings.Add("ID", "ID")
            tableMapping.ColumnMappings.Add("IdEsterno", "IdEsterno")
            tableMapping.ColumnMappings.Add("IdPaziente", "IdPaziente")
            tableMapping.ColumnMappings.Add("DataInserimento", "DataInserimento")
            tableMapping.ColumnMappings.Add("DataModifica", "DataModifica")
            tableMapping.ColumnMappings.Add("AziendaErogante", "AziendaErogante")
            tableMapping.ColumnMappings.Add("SistemaErogante", "SistemaErogante")
            tableMapping.ColumnMappings.Add("StatoCodice", "StatoCodice")
            tableMapping.ColumnMappings.Add("Contenuto", "Contenuto")
            tableMapping.ColumnMappings.Add("ContenutoText", "ContenutoText")
            tableMapping.ColumnMappings.Add("TipoCodice", "TipoCodice")
            tableMapping.ColumnMappings.Add("TipoDescrizione", "TipoDescrizione")
            tableMapping.ColumnMappings.Add("TipoContenuto", "TipoContenuto")
            tableMapping.ColumnMappings.Add("DataNota", "DataNota")
            tableMapping.ColumnMappings.Add("DataFineValidita", "DataFineValidita")
            tableMapping.ColumnMappings.Add("DataPartizione", "DataPartizione")
            tableMapping.ColumnMappings.Add("StatoCodiceDesc", "StatoCodiceDesc")
            tableMapping.ColumnMappings.Add("Cognome", "Cognome")
            tableMapping.ColumnMappings.Add("Nome", "Nome")
            tableMapping.ColumnMappings.Add("CodiceFiscale", "CodiceFiscale")
            tableMapping.ColumnMappings.Add("DataNascita", "DataNascita")
            tableMapping.ColumnMappings.Add("ComuneNascita", "ComuneNascita")
            tableMapping.ColumnMappings.Add("CodiceSanitario", "CodiceSanitario")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings("AuslAsmnRe_DwhClinicoV3ConnectionString").ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.BevsNoteAnamnesticheCerca"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdNotaAnamnestica", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdEsterno", Global.System.Data.SqlDbType.VarChar, 64, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdPaziente", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DataModificaDAL", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 23, 3, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DataModificaAL", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 23, 3, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AziendaErogante", Global.System.Data.SqlDbType.VarChar, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SistemaErogante", Global.System.Data.SqlDbType.VarChar, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DataNota", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 23, 3, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Cognome", Global.System.Data.SqlDbType.VarChar, 64, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Nome", Global.System.Data.SqlDbType.VarChar, 64, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CodiceFiscale", Global.System.Data.SqlDbType.VarChar, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DataNascita", Global.System.Data.SqlDbType.[Date], 3, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MaxRow", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As NoteAnamnesticheDataSet.NoteAnamnesticheCercaDataTable, ByVal IdNotaAnamnestica As Global.System.Nullable(Of Global.System.Guid), ByVal IdEsterno As String, ByVal IdPaziente As Global.System.Nullable(Of Global.System.Guid), ByVal DataModificaDAL As Global.System.Nullable(Of Date), ByVal DataModificaAL As Global.System.Nullable(Of Date), ByVal AziendaErogante As String, ByVal SistemaErogante As String, ByVal DataNota As Global.System.Nullable(Of Date), ByVal Cognome As String, ByVal Nome As String, ByVal CodiceFiscale As String, ByVal DataNascita As Global.System.Nullable(Of Date), ByVal MaxRow As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (IdNotaAnamnestica.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(IdNotaAnamnestica.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (IdEsterno Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(IdEsterno,String)
            End If
            If (IdPaziente.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(IdPaziente.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (DataModificaDAL.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(DataModificaDAL.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (DataModificaAL.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(DataModificaAL.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (AziendaErogante Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(6).Value = CType(AziendaErogante,String)
            End If
            If (SistemaErogante Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(7).Value = CType(SistemaErogante,String)
            End If
            If (DataNota.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(8).Value = CType(DataNota.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Cognome Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(9).Value = CType(Cognome,String)
            End If
            If (Nome Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(10).Value = CType(Nome,String)
            End If
            If (CodiceFiscale Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(11).Value = CType(CodiceFiscale,String)
            End If
            If (DataNascita.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(12).Value = CType(DataNascita.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (MaxRow.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(13).Value = CType(MaxRow.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal IdNotaAnamnestica As Global.System.Nullable(Of Global.System.Guid), ByVal IdEsterno As String, ByVal IdPaziente As Global.System.Nullable(Of Global.System.Guid), ByVal DataModificaDAL As Global.System.Nullable(Of Date), ByVal DataModificaAL As Global.System.Nullable(Of Date), ByVal AziendaErogante As String, ByVal SistemaErogante As String, ByVal DataNota As Global.System.Nullable(Of Date), ByVal Cognome As String, ByVal Nome As String, ByVal CodiceFiscale As String, ByVal DataNascita As Global.System.Nullable(Of Date), ByVal MaxRow As Global.System.Nullable(Of Integer)) As NoteAnamnesticheDataSet.NoteAnamnesticheCercaDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (IdNotaAnamnestica.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(IdNotaAnamnestica.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (IdEsterno Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(IdEsterno,String)
            End If
            If (IdPaziente.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(IdPaziente.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (DataModificaDAL.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(DataModificaDAL.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (DataModificaAL.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(DataModificaAL.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (AziendaErogante Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(6).Value = CType(AziendaErogante,String)
            End If
            If (SistemaErogante Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(7).Value = CType(SistemaErogante,String)
            End If
            If (DataNota.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(8).Value = CType(DataNota.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Cognome Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(9).Value = CType(Cognome,String)
            End If
            If (Nome Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(10).Value = CType(Nome,String)
            End If
            If (CodiceFiscale Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(11).Value = CType(CodiceFiscale,String)
            End If
            If (DataNascita.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(12).Value = CType(DataNascita.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (MaxRow.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(13).Value = CType(MaxRow.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As NoteAnamnesticheDataSet.NoteAnamnesticheCercaDataTable = New NoteAnamnesticheDataSet.NoteAnamnesticheCercaDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class NoteAnamnesticheUltimiArriviTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "NoteAnamnesticheUltimiArrivi"
            tableMapping.ColumnMappings.Add("AziendaErogante", "AziendaErogante")
            tableMapping.ColumnMappings.Add("SistemaErogante", "SistemaErogante")
            tableMapping.ColumnMappings.Add("DataModifica", "DataModifica")
            tableMapping.ColumnMappings.Add("Count", "Count")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings("AuslAsmnRe_DwhClinicoV3ConnectionString").ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.BevsNoteAnamnesticheUltimiArrivi"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NumeroOre", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As NoteAnamnesticheDataSet.NoteAnamnesticheUltimiArriviDataTable, ByVal NumeroOre As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (NumeroOre.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(NumeroOre.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal NumeroOre As Global.System.Nullable(Of Integer)) As NoteAnamnesticheDataSet.NoteAnamnesticheUltimiArriviDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (NumeroOre.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(NumeroOre.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As NoteAnamnesticheDataSet.NoteAnamnesticheUltimiArriviDataTable = New NoteAnamnesticheDataSet.NoteAnamnesticheUltimiArriviDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class NoteAnamnesticheSinotticoTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "NoteAnamnesticheSinottico"
            tableMapping.ColumnMappings.Add("IsTotale", "IsTotale")
            tableMapping.ColumnMappings.Add("IsSubTotale", "IsSubTotale")
            tableMapping.ColumnMappings.Add("AziendaSistemaErogante", "AziendaSistemaErogante")
            tableMapping.ColumnMappings.Add("SubProcessoTipo", "SubProcessoTipo")
            tableMapping.ColumnMappings.Add("InCorso", "InCorso")
            tableMapping.ColumnMappings.Add("Completata", "Completata")
            tableMapping.ColumnMappings.Add("Variata", "Variata")
            tableMapping.ColumnMappings.Add("Cancellata", "Cancellata")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings("AuslAsmnRe_DwhClinicoV3ConnectionString").ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.BevsNoteAnamnesticheSinottico"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DataDal", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 23, 3, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DataAl", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 23, 3, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As NoteAnamnesticheDataSet.NoteAnamnesticheSinotticoDataTable, ByVal DataDal As Global.System.Nullable(Of Date), ByVal DataAl As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (DataDal.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(DataDal.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (DataAl.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(DataAl.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal DataDal As Global.System.Nullable(Of Date), ByVal DataAl As Global.System.Nullable(Of Date)) As NoteAnamnesticheDataSet.NoteAnamnesticheSinotticoDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (DataDal.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(DataDal.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (DataAl.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(DataAl.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As NoteAnamnesticheDataSet.NoteAnamnesticheSinotticoDataTable = New NoteAnamnesticheDataSet.NoteAnamnesticheSinotticoDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class NoteAnamnesticheRiassociazioneListaTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "NoteAnamnesticheRiassociazioneLista"
            tableMapping.ColumnMappings.Add("ID", "ID")
            tableMapping.ColumnMappings.Add("IdEsterno", "IdEsterno")
            tableMapping.ColumnMappings.Add("IdPaziente", "IdPaziente")
            tableMapping.ColumnMappings.Add("DataInserimento", "DataInserimento")
            tableMapping.ColumnMappings.Add("DataModifica", "DataModifica")
            tableMapping.ColumnMappings.Add("AziendaErogante", "AziendaErogante")
            tableMapping.ColumnMappings.Add("SistemaErogante", "SistemaErogante")
            tableMapping.ColumnMappings.Add("DataNota", "DataNota")
            tableMapping.ColumnMappings.Add("StatoCodice", "StatoCodice")
            tableMapping.ColumnMappings.Add("DataFineValidita", "DataFineValidita")
            tableMapping.ColumnMappings.Add("DataPartizione", "DataPartizione")
            tableMapping.ColumnMappings.Add("Contenuto", "Contenuto")
            tableMapping.ColumnMappings.Add("ContenutoText", "ContenutoText")
            tableMapping.ColumnMappings.Add("TipoCodice", "TipoCodice")
            tableMapping.ColumnMappings.Add("TipoDescrizione", "TipoDescrizione")
            tableMapping.ColumnMappings.Add("TipoContenuto", "TipoContenuto")
            tableMapping.ColumnMappings.Add("StatoCodiceDesc", "StatoCodiceDesc")
            tableMapping.ColumnMappings.Add("Cognome", "Cognome")
            tableMapping.ColumnMappings.Add("Nome", "Nome")
            tableMapping.ColumnMappings.Add("Sesso", "Sesso")
            tableMapping.ColumnMappings.Add("CodiceFiscale", "CodiceFiscale")
            tableMapping.ColumnMappings.Add("DataNascita", "DataNascita")
            tableMapping.ColumnMappings.Add("ComuneNascita", "ComuneNascita")
            tableMapping.ColumnMappings.Add("ProvinciaNascita", "ProvinciaNascita")
            tableMapping.ColumnMappings.Add("CodiceAnagraficaCentrale", "CodiceAnagraficaCentrale")
            tableMapping.ColumnMappings.Add("NomeAnagraficaCentrale", "NomeAnagraficaCentrale")
            tableMapping.ColumnMappings.Add("SACCognome", "SACCognome")
            tableMapping.ColumnMappings.Add("SACNome", "SACNome")
            tableMapping.ColumnMappings.Add("SACCodiceFiscale", "SACCodiceFiscale")
            tableMapping.ColumnMappings.Add("SACDataNascita", "SACDataNascita")
            tableMapping.ColumnMappings.Add("SACComuneNascita", "SACComuneNascita")
            tableMapping.ColumnMappings.Add("SACProvincaNascita", "SACProvincaNascita")
            tableMapping.ColumnMappings.Add("SACProvenienza", "SACProvenienza")
            tableMapping.ColumnMappings.Add("SACIdProvenienza", "SACIdProvenienza")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings("AuslAsmnRe_DwhClinicoV3ConnectionString").ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.BevsNoteAnamnesticheRiassociazioneLista"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdNota", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@idEsterno", Global.System.Data.SqlDbType.VarChar, 64, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@idPaziente", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@dataModificaDAL", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 23, 3, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@dataModificaAL", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 23, 3, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@aziendaErogante", Global.System.Data.SqlDbType.VarChar, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@sistemaErogante", Global.System.Data.SqlDbType.VarChar, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@dataNota", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 23, 3, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NoteAnamnesticheOrfane", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 1, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MaxRow", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As NoteAnamnesticheDataSet.NoteAnamnesticheRiassociazioneListaDataTable, ByVal IdNota As Global.System.Nullable(Of Global.System.Guid), ByVal idEsterno As String, ByVal idPaziente As Global.System.Nullable(Of Global.System.Guid), ByVal dataModificaDAL As Global.System.Nullable(Of Date), ByVal dataModificaAL As Global.System.Nullable(Of Date), ByVal aziendaErogante As String, ByVal sistemaErogante As String, ByVal dataNota As Global.System.Nullable(Of Date), ByVal NoteAnamnesticheOrfane As Global.System.Nullable(Of Boolean), ByVal MaxRow As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (IdNota.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(IdNota.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (idEsterno Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(idEsterno,String)
            End If
            If (idPaziente.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(idPaziente.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (dataModificaDAL.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(dataModificaDAL.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (dataModificaAL.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(dataModificaAL.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (aziendaErogante Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(6).Value = CType(aziendaErogante,String)
            End If
            If (sistemaErogante Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(7).Value = CType(sistemaErogante,String)
            End If
            If (dataNota.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(8).Value = CType(dataNota.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (NoteAnamnesticheOrfane.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(9).Value = CType(NoteAnamnesticheOrfane.Value,Boolean)
            Else
                Me.Adapter.SelectCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (MaxRow.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(10).Value = CType(MaxRow.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal IdNota As Global.System.Nullable(Of Global.System.Guid), ByVal idEsterno As String, ByVal idPaziente As Global.System.Nullable(Of Global.System.Guid), ByVal dataModificaDAL As Global.System.Nullable(Of Date), ByVal dataModificaAL As Global.System.Nullable(Of Date), ByVal aziendaErogante As String, ByVal sistemaErogante As String, ByVal dataNota As Global.System.Nullable(Of Date), ByVal NoteAnamnesticheOrfane As Global.System.Nullable(Of Boolean), ByVal MaxRow As Global.System.Nullable(Of Integer)) As NoteAnamnesticheDataSet.NoteAnamnesticheRiassociazioneListaDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (IdNota.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(IdNota.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (idEsterno Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(idEsterno,String)
            End If
            If (idPaziente.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(idPaziente.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (dataModificaDAL.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(dataModificaDAL.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (dataModificaAL.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(dataModificaAL.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (aziendaErogante Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(6).Value = CType(aziendaErogante,String)
            End If
            If (sistemaErogante Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(7).Value = CType(sistemaErogante,String)
            End If
            If (dataNota.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(8).Value = CType(dataNota.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (NoteAnamnesticheOrfane.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(9).Value = CType(NoteAnamnesticheOrfane.Value,Boolean)
            Else
                Me.Adapter.SelectCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (MaxRow.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(10).Value = CType(MaxRow.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As NoteAnamnesticheDataSet.NoteAnamnesticheRiassociazioneListaDataTable = New NoteAnamnesticheDataSet.NoteAnamnesticheRiassociazioneListaDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class NotaAnamnesticaRiassociazioneOttieniTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "NotaAnamnesticaRiassociazioneOttieni"
            tableMapping.ColumnMappings.Add("Id", "Id")
            tableMapping.ColumnMappings.Add("DataPartizione", "DataPartizione")
            tableMapping.ColumnMappings.Add("IdEsterno", "IdEsterno")
            tableMapping.ColumnMappings.Add("IdPaziente", "IdPaziente")
            tableMapping.ColumnMappings.Add("DataInserimento", "DataInserimento")
            tableMapping.ColumnMappings.Add("DataModifica", "DataModifica")
            tableMapping.ColumnMappings.Add("DataModificaEsterno", "DataModificaEsterno")
            tableMapping.ColumnMappings.Add("AziendaErogante", "AziendaErogante")
            tableMapping.ColumnMappings.Add("SistemaErogante", "SistemaErogante")
            tableMapping.ColumnMappings.Add("DataNota", "DataNota")
            tableMapping.ColumnMappings.Add("DataFineValidita", "DataFineValidita")
            tableMapping.ColumnMappings.Add("TipoCodice", "TipoCodice")
            tableMapping.ColumnMappings.Add("TipoDescrizione", "TipoDescrizione")
            tableMapping.ColumnMappings.Add("Contenuto", "Contenuto")
            tableMapping.ColumnMappings.Add("TipoContenuto", "TipoContenuto")
            tableMapping.ColumnMappings.Add("ContenutoHtml", "ContenutoHtml")
            tableMapping.ColumnMappings.Add("ContenutoText", "ContenutoText")
            tableMapping.ColumnMappings.Add("StatoCodiceDesc", "StatoCodiceDesc")
            tableMapping.ColumnMappings.Add("Cognome", "Cognome")
            tableMapping.ColumnMappings.Add("Nome", "Nome")
            tableMapping.ColumnMappings.Add("Sesso", "Sesso")
            tableMapping.ColumnMappings.Add("CodiceFiscale", "CodiceFiscale")
            tableMapping.ColumnMappings.Add("DataNascita", "DataNascita")
            tableMapping.ColumnMappings.Add("ComuneNascita", "ComuneNascita")
            tableMapping.ColumnMappings.Add("ProvinciaNascita", "ProvinciaNascita")
            tableMapping.ColumnMappings.Add("CodiceAnagraficaCentrale", "CodiceAnagraficaCentrale")
            tableMapping.ColumnMappings.Add("NomeAnagraficaCentrale", "NomeAnagraficaCentrale")
            tableMapping.ColumnMappings.Add("CodiceSanitario", "CodiceSanitario")
            tableMapping.ColumnMappings.Add("SACCognome", "SACCognome")
            tableMapping.ColumnMappings.Add("SACNome", "SACNome")
            tableMapping.ColumnMappings.Add("SACSesso", "SACSesso")
            tableMapping.ColumnMappings.Add("SACCodiceFiscale", "SACCodiceFiscale")
            tableMapping.ColumnMappings.Add("SACDataNascita", "SACDataNascita")
            tableMapping.ColumnMappings.Add("SACComuneNascita", "SACComuneNascita")
            tableMapping.ColumnMappings.Add("SACProvinciaNascita", "SACProvinciaNascita")
            tableMapping.ColumnMappings.Add("SACProvenienza", "SACProvenienza")
            tableMapping.ColumnMappings.Add("SACIdProvenienza", "SACIdProvenienza")
            tableMapping.ColumnMappings.Add("SACTessera", "SACTessera")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "dbo.BevsNotaAnamnesticaRiassociazioneAggiorna"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdNotaAnamnestica", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, "Id", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdPaziente", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, "IdPaziente", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings("AuslAsmnRe_DwhClinicoV3ConnectionString").ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.BevsNotaAnamnesticaRiassociazioneOttieni"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdNotaAnamnestica", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetDataByIdNotaAnamnestica(ByVal IdNotaAnamnestica As Global.System.Nullable(Of Global.System.Guid)) As NoteAnamnesticheDataSet.NotaAnamnesticaRiassociazioneOttieniDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (IdNotaAnamnestica.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(IdNotaAnamnestica.Value,System.Guid)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As NoteAnamnesticheDataSet.NotaAnamnesticaRiassociazioneOttieniDataTable = New NoteAnamnesticheDataSet.NotaAnamnesticaRiassociazioneOttieniDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As NoteAnamnesticheDataSet.NotaAnamnesticaRiassociazioneOttieniDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As NoteAnamnesticheDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "NotaAnamnesticaRiassociazioneOttieni")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal IdNotaAnamnestica As Global.System.Nullable(Of Global.System.Guid), ByVal IdPaziente As Global.System.Nullable(Of Global.System.Guid)) As Integer
            If (IdNotaAnamnestica.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(IdNotaAnamnestica.Value,System.Guid)
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (IdPaziente.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(IdPaziente.Value,System.Guid)
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class QueriesTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private _commandCollection() As Global.System.Data.IDbCommand
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.IDbCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.IDbCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            CType(Me._commandCollection(0),Global.System.Data.SqlClient.SqlCommand).Connection = New Global.System.Data.SqlClient.SqlConnection(System.Configuration.ConfigurationManager.ConnectionStrings("AuslAsmnRe_DwhClinicoV3ConnectionString").ConnectionString)
            CType(Me._commandCollection(0),Global.System.Data.SqlClient.SqlCommand).CommandText = "dbo.BevsNoteAnamnesticheNotificaById"
            CType(Me._commandCollection(0),Global.System.Data.SqlClient.SqlCommand).CommandType = Global.System.Data.CommandType.StoredProcedure
            CType(Me._commandCollection(0),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(0),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdNotaAnamnestica", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(0),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DataPartizione", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 23, 3, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            CType(Me._commandCollection(1),Global.System.Data.SqlClient.SqlCommand).Connection = New Global.System.Data.SqlClient.SqlConnection(System.Configuration.ConfigurationManager.ConnectionStrings("AuslAsmnRe_DwhClinicoV3ConnectionString").ConnectionString)
            CType(Me._commandCollection(1),Global.System.Data.SqlClient.SqlCommand).CommandText = "dbo.BevsNotaAnamnesticaCancella"
            CType(Me._commandCollection(1),Global.System.Data.SqlClient.SqlCommand).CommandType = Global.System.Data.CommandType.StoredProcedure
            CType(Me._commandCollection(1),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(1),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Id", Global.System.Data.SqlDbType.UniqueIdentifier, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(1),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DataPartizione", Global.System.Data.SqlDbType.SmallDateTime, 4, Global.System.Data.ParameterDirection.Input, 16, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(1),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TipoCancellazione", Global.System.Data.SqlDbType.VarChar, 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function NoteAnamnesticheNotificaById(ByVal IdNotaAnamnestica As Global.System.Nullable(Of Global.System.Guid), ByVal DataPartizione As Global.System.Nullable(Of Date)) As Object
            Dim command As Global.System.Data.SqlClient.SqlCommand = CType(Me.CommandCollection(0),Global.System.Data.SqlClient.SqlCommand)
            If (IdNotaAnamnestica.HasValue = true) Then
                command.Parameters(1).Value = CType(IdNotaAnamnestica.Value,System.Guid)
            Else
                command.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (DataPartizione.HasValue = true) Then
                command.Parameters(2).Value = CType(DataPartizione.Value,Date)
            Else
                command.Parameters(2).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function NotaAnamnesticaCancella(ByVal Id As Global.System.Nullable(Of Global.System.Guid), ByVal DataPartizione As Global.System.Nullable(Of Date), ByVal TipoCancellazione As String) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = CType(Me.CommandCollection(1),Global.System.Data.SqlClient.SqlCommand)
            If (Id.HasValue = true) Then
                command.Parameters(1).Value = CType(Id.Value,System.Guid)
            Else
                command.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (DataPartizione.HasValue = true) Then
                command.Parameters(2).Value = CType(DataPartizione.Value,Date)
            Else
                command.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (TipoCancellazione Is Nothing) Then
                command.Parameters(3).Value = Global.System.DBNull.Value
            Else
                command.Parameters(3).Value = CType(TipoCancellazione,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
    End Class
    
    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD"& _ 
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")>  _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component
        
        Private _updateOrder As UpdateOrderOption
        
        Private _notaAnamnesticaRiassociazioneOttieniTableAdapter As NotaAnamnesticaRiassociazioneOttieniTableAdapter
        
        Private _backupDataSetBeforeUpdate As Boolean
        
        Private _connection As Global.System.Data.IDbConnection
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set
                Me._updateOrder = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property NotaAnamnesticaRiassociazioneOttieniTableAdapter() As NotaAnamnesticaRiassociazioneOttieniTableAdapter
            Get
                Return Me._notaAnamnesticaRiassociazioneOttieniTableAdapter
            End Get
            Set
                Me._notaAnamnesticaRiassociazioneOttieniTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                If ((Not (Me._notaAnamnesticaRiassociazioneOttieniTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._notaAnamnesticaRiassociazioneOttieniTableAdapter.Connection) Is Nothing)) Then
                    Return Me._notaAnamnesticaRiassociazioneOttieniTableAdapter.Connection
                End If
                Return Nothing
            End Get
            Set
                Me._connection = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                If (Not (Me._notaAnamnesticaRiassociazioneOttieniTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                Return count
            End Get
        End Property
        
        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Function UpdateUpdatedRows(ByVal dataSet As NoteAnamnesticheDataSet, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._notaAnamnesticaRiassociazioneOttieniTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.NotaAnamnesticaRiassociazioneOttieni.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._notaAnamnesticaRiassociazioneOttieniTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Function UpdateInsertedRows(ByVal dataSet As NoteAnamnesticheDataSet, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._notaAnamnesticaRiassociazioneOttieniTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.NotaAnamnesticaRiassociazioneOttieni.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._notaAnamnesticaRiassociazioneOttieniTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Function UpdateDeletedRows(ByVal dataSet As NoteAnamnesticheDataSet, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._notaAnamnesticaRiassociazioneOttieniTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.NotaAnamnesticaRiassociazioneOttieni.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._notaAnamnesticaRiassociazioneOttieniTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing)  _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing)  _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = false) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function
        
        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Overridable Function UpdateAll(ByVal dataSet As NoteAnamnesticheDataSet) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = false) Then
                Return 0
            End If
            If ((Not (Me._notaAnamnesticaRiassociazioneOttieniTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._notaAnamnesticaRiassociazioneOttieniTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana"& _ 
                        "ger TableAdapter property to a valid TableAdapter instance.")
            End If
            Dim workConnOpened As Boolean = false
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken)  _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open
                workConnOpened = true
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("The transaction cannot begin. The current data connection does not support transa"& _ 
                        "ctions or the current state is not allowing the transaction to begin.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)()
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)()
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet()
                backupDataSet.Merge(dataSet)
            End If
            Try 
                '---- Prepare for update -----------
                '
                If (Not (Me._notaAnamnesticaRiassociazioneOttieniTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._notaAnamnesticaRiassociazioneOttieniTableAdapter, Me._notaAnamnesticaRiassociazioneOttieniTableAdapter.Connection)
                    Me._notaAnamnesticaRiassociazioneOttieniTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._notaAnamnesticaRiassociazioneOttieniTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._notaAnamnesticaRiassociazioneOttieniTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._notaAnamnesticaRiassociazioneOttieniTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._notaAnamnesticaRiassociazioneOttieniTableAdapter.Adapter)
                    End If
                End If
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges
                            row.SetAdded
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close
                End If
                If (Not (Me._notaAnamnesticaRiassociazioneOttieniTableAdapter) Is Nothing) Then
                    Me._notaAnamnesticaRiassociazioneOttieniTableAdapter.Connection = CType(revertConnections(Me._notaAnamnesticaRiassociazioneOttieniTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._notaAnamnesticaRiassociazioneOttieniTableAdapter.Transaction = Nothing
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = true
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return true
            End If
            If ((Me.Connection Is Nothing)  _
                        OrElse (inputConnection Is Nothing)) Then
                Return true
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return true
            End If
            Return false
        End Function
        
        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Public Enum UpdateOrderOption
            
            InsertUpdateDelete = 0
            
            UpdateInsertDelete = 1
        End Enum
        
        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)
            
            Private _relation As Global.System.Data.DataRelation
            
            Private _childFirst As Integer
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Private Function GetRoot(ByVal row As Global.System.Data.DataRow, ByRef distance As Integer) As Global.System.Data.DataRow
                Global.System.Diagnostics.Debug.Assert((Not (row) Is Nothing))
                Dim root As Global.System.Data.DataRow = row
                distance = 0

                Dim traversedRows As Global.System.Collections.Generic.IDictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow) = New Global.System.Collections.Generic.Dictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow)()
                traversedRows(row) = row

                Dim parent As Global.System.Data.DataRow = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (parent) Is Nothing)  _
                            AndAlso (traversedRows.ContainsKey(parent) = false))
                    distance = (distance + 1)
                    root = parent
                    traversedRows(parent) = parent
                    parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop

                If (distance = 0) Then
                    traversedRows.Clear
                    traversedRows(row) = row
                    parent = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Do While ((Not (parent) Is Nothing)  _
                                AndAlso (traversedRows.ContainsKey(parent) = false))
                        distance = (distance + 1)
                        root = parent
                        traversedRows(parent) = parent
                        parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If

                Return root
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")>  _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                Dim distance1 As Integer = 0
                Dim root1 As Global.System.Data.DataRow = Me.GetRoot(row1, distance1)

                Dim distance2 As Integer = 0
                Dim root2 As Global.System.Data.DataRow = Me.GetRoot(row2, distance2)

                If Object.ReferenceEquals(root1, root2) Then
                    Return (Me._childFirst * distance1.CompareTo(distance2))
                Else
                    Global.System.Diagnostics.Debug.Assert(((Not (root1.Table) Is Nothing)  _
                                    AndAlso (Not (root2.Table) Is Nothing)))
                    If (root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2)) Then
                        Return -1
                    Else
                        Return 1
                    End If
                End If
            End Function
        End Class
    End Class
End Namespace
