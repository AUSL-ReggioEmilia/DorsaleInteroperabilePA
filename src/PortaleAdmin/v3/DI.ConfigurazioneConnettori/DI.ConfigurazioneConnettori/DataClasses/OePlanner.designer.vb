'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection

Namespace OePlanner
	
	<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="AuslAsmnRe_OePlanner")>  _
	Partial Public Class OePlannerDataContext
		Inherits System.Data.Linq.DataContext
		
		Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub InsertSistemi(instance As Sistemi)
    End Sub
    Partial Private Sub UpdateSistemi(instance As Sistemi)
    End Sub
    Partial Private Sub DeleteSistemi(instance As Sistemi)
    End Sub
    Partial Private Sub InsertRegimi(instance As Regimi)
    End Sub
    Partial Private Sub UpdateRegimi(instance As Regimi)
    End Sub
    Partial Private Sub DeleteRegimi(instance As Regimi)
    End Sub
    Partial Private Sub InsertPriorita(instance As Priorita)
    End Sub
    Partial Private Sub UpdatePriorita(instance As Priorita)
    End Sub
    Partial Private Sub DeletePriorita(instance As Priorita)
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New(Global.System.Configuration.ConfigurationManager.ConnectionStrings("AuslAsmnRe_OePlannerConnectionString").ConnectionString, mappingSource)
			OnCreated
		End Sub
		
		Public Sub New(ByVal connection As String)
			MyBase.New(connection, mappingSource)
			OnCreated
		End Sub
		
		Public Sub New(ByVal connection As System.Data.IDbConnection)
			MyBase.New(connection, mappingSource)
			OnCreated
		End Sub
		
		Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
			MyBase.New(connection, mappingSource)
			OnCreated
		End Sub
		
		Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
			MyBase.New(connection, mappingSource)
			OnCreated
		End Sub
		
		Public ReadOnly Property Sistemi() As System.Data.Linq.Table(Of Sistemi)
			Get
				Return Me.GetTable(Of Sistemi)
			End Get
		End Property
		
		Public ReadOnly Property Regimis() As System.Data.Linq.Table(Of Regimi)
			Get
				Return Me.GetTable(Of Regimi)
			End Get
		End Property
		
		Public ReadOnly Property Prioritas() As System.Data.Linq.Table(Of Priorita)
			Get
				Return Me.GetTable(Of Priorita)
			End Get
		End Property
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Sistemi")>  _
	Partial Public Class Sistemi
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _ID As System.Guid
		
		Private _DataInserimento As Date
		
		Private _DataModifica As Date
		
		Private _UtenteInserimento As String
		
		Private _UtenteModifica As String
		
		Private _Codice As String
		
		Private _CodiceAzienda As String
		
		Private _Attivo As Boolean
		
		Private _Richiedente As Boolean
		
		Private _Erogante As Boolean
		
		Private _RichiedenteProgrammabile As Boolean
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As System.Guid)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnDataInserimentoChanging(value As Date)
    End Sub
    Partial Private Sub OnDataInserimentoChanged()
    End Sub
    Partial Private Sub OnDataModificaChanging(value As Date)
    End Sub
    Partial Private Sub OnDataModificaChanged()
    End Sub
    Partial Private Sub OnUtenteInserimentoChanging(value As String)
    End Sub
    Partial Private Sub OnUtenteInserimentoChanged()
    End Sub
    Partial Private Sub OnUtenteModificaChanging(value As String)
    End Sub
    Partial Private Sub OnUtenteModificaChanged()
    End Sub
    Partial Private Sub OnCodiceChanging(value As String)
    End Sub
    Partial Private Sub OnCodiceChanged()
    End Sub
    Partial Private Sub OnCodiceAziendaChanging(value As String)
    End Sub
    Partial Private Sub OnCodiceAziendaChanged()
    End Sub
    Partial Private Sub OnAttivoChanging(value As Boolean)
    End Sub
    Partial Private Sub OnAttivoChanged()
    End Sub
    Partial Private Sub OnRichiedenteChanging(value As Boolean)
    End Sub
    Partial Private Sub OnRichiedenteChanged()
    End Sub
    Partial Private Sub OnEroganteChanging(value As Boolean)
    End Sub
    Partial Private Sub OnEroganteChanged()
    End Sub
    Partial Private Sub OnRichiedenteProgrammabileChanging(value As Boolean)
    End Sub
    Partial Private Sub OnRichiedenteProgrammabileChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", AutoSync:=AutoSync.OnInsert, DbType:="UniqueIdentifier NOT NULL", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
		Public Property ID() As System.Guid
			Get
				Return Me._ID
			End Get
			Set
				If ((Me._ID = value)  _
							= false) Then
					Me.OnIDChanging(value)
					Me.SendPropertyChanging
					Me._ID = value
					Me.SendPropertyChanged("ID")
					Me.OnIDChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DataInserimento", DbType:="DateTime NOT NULL")>  _
		Public Property DataInserimento() As Date
			Get
				Return Me._DataInserimento
			End Get
			Set
				If ((Me._DataInserimento = value)  _
							= false) Then
					Me.OnDataInserimentoChanging(value)
					Me.SendPropertyChanging
					Me._DataInserimento = value
					Me.SendPropertyChanged("DataInserimento")
					Me.OnDataInserimentoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DataModifica", DbType:="DateTime NOT NULL")>  _
		Public Property DataModifica() As Date
			Get
				Return Me._DataModifica
			End Get
			Set
				If ((Me._DataModifica = value)  _
							= false) Then
					Me.OnDataModificaChanging(value)
					Me.SendPropertyChanging
					Me._DataModifica = value
					Me.SendPropertyChanged("DataModifica")
					Me.OnDataModificaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UtenteInserimento", DbType:="VarChar(128) NOT NULL", CanBeNull:=false)>  _
		Public Property UtenteInserimento() As String
			Get
				Return Me._UtenteInserimento
			End Get
			Set
				If (String.Equals(Me._UtenteInserimento, value) = false) Then
					Me.OnUtenteInserimentoChanging(value)
					Me.SendPropertyChanging
					Me._UtenteInserimento = value
					Me.SendPropertyChanged("UtenteInserimento")
					Me.OnUtenteInserimentoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UtenteModifica", DbType:="VarChar(128) NOT NULL", CanBeNull:=false)>  _
		Public Property UtenteModifica() As String
			Get
				Return Me._UtenteModifica
			End Get
			Set
				If (String.Equals(Me._UtenteModifica, value) = false) Then
					Me.OnUtenteModificaChanging(value)
					Me.SendPropertyChanging
					Me._UtenteModifica = value
					Me.SendPropertyChanged("UtenteModifica")
					Me.OnUtenteModificaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Codice", DbType:="VarChar(16) NOT NULL", CanBeNull:=false)>  _
		Public Property Codice() As String
			Get
				Return Me._Codice
			End Get
			Set
				If (String.Equals(Me._Codice, value) = false) Then
					Me.OnCodiceChanging(value)
					Me.SendPropertyChanging
					Me._Codice = value
					Me.SendPropertyChanged("Codice")
					Me.OnCodiceChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CodiceAzienda", DbType:="VarChar(16) NOT NULL", CanBeNull:=false)>  _
		Public Property CodiceAzienda() As String
			Get
				Return Me._CodiceAzienda
			End Get
			Set
				If (String.Equals(Me._CodiceAzienda, value) = false) Then
					Me.OnCodiceAziendaChanging(value)
					Me.SendPropertyChanging
					Me._CodiceAzienda = value
					Me.SendPropertyChanged("CodiceAzienda")
					Me.OnCodiceAziendaChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Attivo", DbType:="Bit NOT NULL")>  _
		Public Property Attivo() As Boolean
			Get
				Return Me._Attivo
			End Get
			Set
				If ((Me._Attivo = value)  _
							= false) Then
					Me.OnAttivoChanging(value)
					Me.SendPropertyChanging
					Me._Attivo = value
					Me.SendPropertyChanged("Attivo")
					Me.OnAttivoChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Richiedente", DbType:="Bit NOT NULL")>  _
		Public Property Richiedente() As Boolean
			Get
				Return Me._Richiedente
			End Get
			Set
				If ((Me._Richiedente = value)  _
							= false) Then
					Me.OnRichiedenteChanging(value)
					Me.SendPropertyChanging
					Me._Richiedente = value
					Me.SendPropertyChanged("Richiedente")
					Me.OnRichiedenteChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Erogante", DbType:="Bit NOT NULL")>  _
		Public Property Erogante() As Boolean
			Get
				Return Me._Erogante
			End Get
			Set
				If ((Me._Erogante = value)  _
							= false) Then
					Me.OnEroganteChanging(value)
					Me.SendPropertyChanging
					Me._Erogante = value
					Me.SendPropertyChanged("Erogante")
					Me.OnEroganteChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RichiedenteProgrammabile", DbType:="Bit NOT NULL")>  _
		Public Property RichiedenteProgrammabile() As Boolean
			Get
				Return Me._RichiedenteProgrammabile
			End Get
			Set
				If ((Me._RichiedenteProgrammabile = value)  _
							= false) Then
					Me.OnRichiedenteProgrammabileChanging(value)
					Me.SendPropertyChanging
					Me._RichiedenteProgrammabile = value
					Me.SendPropertyChanged("RichiedenteProgrammabile")
					Me.OnRichiedenteProgrammabileChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Regimi")>  _
	Partial Public Class Regimi
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _Codice As String
		
		Private _Descrizione As String
		
		Private _Ordinamento As Byte
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCodiceChanging(value As String)
    End Sub
    Partial Private Sub OnCodiceChanged()
    End Sub
    Partial Private Sub OnDescrizioneChanging(value As String)
    End Sub
    Partial Private Sub OnDescrizioneChanged()
    End Sub
    Partial Private Sub OnOrdinamentoChanging(value As Byte)
    End Sub
    Partial Private Sub OnOrdinamentoChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Codice", DbType:="VarChar(16) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
		Public Property Codice() As String
			Get
				Return Me._Codice
			End Get
			Set
				If (String.Equals(Me._Codice, value) = false) Then
					Me.OnCodiceChanging(value)
					Me.SendPropertyChanging
					Me._Codice = value
					Me.SendPropertyChanged("Codice")
					Me.OnCodiceChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Descrizione", DbType:="VarChar(64) NOT NULL", CanBeNull:=false)>  _
		Public Property Descrizione() As String
			Get
				Return Me._Descrizione
			End Get
			Set
				If (String.Equals(Me._Descrizione, value) = false) Then
					Me.OnDescrizioneChanging(value)
					Me.SendPropertyChanging
					Me._Descrizione = value
					Me.SendPropertyChanged("Descrizione")
					Me.OnDescrizioneChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Ordinamento", DbType:="TinyInt NOT NULL")>  _
		Public Property Ordinamento() As Byte
			Get
				Return Me._Ordinamento
			End Get
			Set
				If ((Me._Ordinamento = value)  _
							= false) Then
					Me.OnOrdinamentoChanging(value)
					Me.SendPropertyChanging
					Me._Ordinamento = value
					Me.SendPropertyChanged("Ordinamento")
					Me.OnOrdinamentoChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
	
	<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Priorita")>  _
	Partial Public Class Priorita
		Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
		
		Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
		
		Private _Codice As String
		
		Private _Descrizione As String
		
		Private _Ordinamento As Byte
		
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCodiceChanging(value As String)
    End Sub
    Partial Private Sub OnCodiceChanged()
    End Sub
    Partial Private Sub OnDescrizioneChanging(value As String)
    End Sub
    Partial Private Sub OnDescrizioneChanged()
    End Sub
    Partial Private Sub OnOrdinamentoChanging(value As Byte)
    End Sub
    Partial Private Sub OnOrdinamentoChanged()
    End Sub
    #End Region
		
		Public Sub New()
			MyBase.New
			OnCreated
		End Sub
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Codice", DbType:="VarChar(16) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
		Public Property Codice() As String
			Get
				Return Me._Codice
			End Get
			Set
				If (String.Equals(Me._Codice, value) = false) Then
					Me.OnCodiceChanging(value)
					Me.SendPropertyChanging
					Me._Codice = value
					Me.SendPropertyChanged("Codice")
					Me.OnCodiceChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Descrizione", DbType:="VarChar(64) NOT NULL", CanBeNull:=false)>  _
		Public Property Descrizione() As String
			Get
				Return Me._Descrizione
			End Get
			Set
				If (String.Equals(Me._Descrizione, value) = false) Then
					Me.OnDescrizioneChanging(value)
					Me.SendPropertyChanging
					Me._Descrizione = value
					Me.SendPropertyChanged("Descrizione")
					Me.OnDescrizioneChanged
				End If
			End Set
		End Property
		
		<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Ordinamento", DbType:="TinyInt NOT NULL")>  _
		Public Property Ordinamento() As Byte
			Get
				Return Me._Ordinamento
			End Get
			Set
				If ((Me._Ordinamento = value)  _
							= false) Then
					Me.OnOrdinamentoChanging(value)
					Me.SendPropertyChanging
					Me._Ordinamento = value
					Me.SendPropertyChanged("Ordinamento")
					Me.OnOrdinamentoChanged
				End If
			End Set
		End Property
		
		Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
		
		Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
		
		Protected Overridable Sub SendPropertyChanging()
			If ((Me.PropertyChangingEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
			End If
		End Sub
		
		Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
			If ((Me.PropertyChangedEvent Is Nothing)  _
						= false) Then
				RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
			End If
		End Sub
	End Class
End Namespace
