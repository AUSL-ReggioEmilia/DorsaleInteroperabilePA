'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="AuslAsmnRe_OeConnVNA")>  _
Partial Public Class OeConnVnaDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertFiltriPrestazioni(instance As FiltriPrestazioni)
    End Sub
  Partial Private Sub UpdateFiltriPrestazioni(instance As FiltriPrestazioni)
    End Sub
  Partial Private Sub DeleteFiltriPrestazioni(instance As FiltriPrestazioni)
    End Sub
  Partial Private Sub InsertTranscodificaAltriSistemi(instance As TranscodificaAltriSistemi)
    End Sub
  Partial Private Sub UpdateTranscodificaAltriSistemi(instance As TranscodificaAltriSistemi)
    End Sub
  Partial Private Sub DeleteTranscodificaAltriSistemi(instance As TranscodificaAltriSistemi)
    End Sub
  Partial Private Sub InsertTranscodificaCUP(instance As TranscodificaCUP)
    End Sub
  Partial Private Sub UpdateTranscodificaCUP(instance As TranscodificaCUP)
    End Sub
  Partial Private Sub DeleteTranscodificaCUP(instance As TranscodificaCUP)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.System.Configuration.ConfigurationManager.ConnectionStrings("AuslAsmnRe_OeConnVNAConnectionString").ConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property FiltriPrestazioni() As System.Data.Linq.Table(Of FiltriPrestazioni)
		Get
			Return Me.GetTable(Of FiltriPrestazioni)
		End Get
	End Property
	
	Public ReadOnly Property TranscodificaAltriSistemi() As System.Data.Linq.Table(Of TranscodificaAltriSistemi)
		Get
			Return Me.GetTable(Of TranscodificaAltriSistemi)
		End Get
	End Property
	
	Public ReadOnly Property TranscodificaCUP() As System.Data.Linq.Table(Of TranscodificaCUP)
		Get
			Return Me.GetTable(Of TranscodificaCUP)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.FiltriPrestazioni")>  _
Partial Public Class FiltriPrestazioni
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Id As Integer
	
	Private _Azienda As String
	
	Private _Sistema As String
	
	Private _Prestazione As String
	
	Private _Transcodifica As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdChanged()
    End Sub
    Partial Private Sub OnAziendaChanging(value As String)
    End Sub
    Partial Private Sub OnAziendaChanged()
    End Sub
    Partial Private Sub OnSistemaChanging(value As String)
    End Sub
    Partial Private Sub OnSistemaChanged()
    End Sub
    Partial Private Sub OnPrestazioneChanging(value As String)
    End Sub
    Partial Private Sub OnPrestazioneChanged()
    End Sub
    Partial Private Sub OnTranscodificaChanging(value As String)
    End Sub
    Partial Private Sub OnTranscodificaChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property Id() As Integer
		Get
			Return Me._Id
		End Get
		Set
			If ((Me._Id = value)  _
						= false) Then
				Me.OnIdChanging(value)
				Me.SendPropertyChanging
				Me._Id = value
				Me.SendPropertyChanged("Id")
				Me.OnIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Azienda", DbType:="VarChar(16) NOT NULL", CanBeNull:=false)>  _
	Public Property Azienda() As String
		Get
			Return Me._Azienda
		End Get
		Set
			If (String.Equals(Me._Azienda, value) = false) Then
				Me.OnAziendaChanging(value)
				Me.SendPropertyChanging
				Me._Azienda = value
				Me.SendPropertyChanged("Azienda")
				Me.OnAziendaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Sistema", DbType:="VarChar(16) NOT NULL", CanBeNull:=false)>  _
	Public Property Sistema() As String
		Get
			Return Me._Sistema
		End Get
		Set
			If (String.Equals(Me._Sistema, value) = false) Then
				Me.OnSistemaChanging(value)
				Me.SendPropertyChanging
				Me._Sistema = value
				Me.SendPropertyChanged("Sistema")
				Me.OnSistemaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Prestazione", DbType:="VarChar(16) NOT NULL", CanBeNull:=false)>  _
	Public Property Prestazione() As String
		Get
			Return Me._Prestazione
		End Get
		Set
			If (String.Equals(Me._Prestazione, value) = false) Then
				Me.OnPrestazioneChanging(value)
				Me.SendPropertyChanging
				Me._Prestazione = value
				Me.SendPropertyChanged("Prestazione")
				Me.OnPrestazioneChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Transcodifica", DbType:="VarChar(128) NOT NULL", CanBeNull:=false)>  _
	Public Property Transcodifica() As String
		Get
			Return Me._Transcodifica
		End Get
		Set
			If (String.Equals(Me._Transcodifica, value) = false) Then
				Me.OnTranscodificaChanging(value)
				Me.SendPropertyChanging
				Me._Transcodifica = value
				Me.SendPropertyChanged("Transcodifica")
				Me.OnTranscodificaChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.TranscodificaAltriSistemi")>  _
Partial Public Class TranscodificaAltriSistemi
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Id As Integer
	
	Private _SistemaRichiedenteAzienda As String
	
	Private _SistemaRichiedenteCodice As String
	
	Private _UoRichiedenteAzienda As String
	
	Private _UoRichiedenteCodice As String
	
	Private _Transcodifica As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdChanged()
    End Sub
    Partial Private Sub OnSistemaRichiedenteAziendaChanging(value As String)
    End Sub
    Partial Private Sub OnSistemaRichiedenteAziendaChanged()
    End Sub
    Partial Private Sub OnSistemaRichiedenteCodiceChanging(value As String)
    End Sub
    Partial Private Sub OnSistemaRichiedenteCodiceChanged()
    End Sub
    Partial Private Sub OnUoRichiedenteAziendaChanging(value As String)
    End Sub
    Partial Private Sub OnUoRichiedenteAziendaChanged()
    End Sub
    Partial Private Sub OnUoRichiedenteCodiceChanging(value As String)
    End Sub
    Partial Private Sub OnUoRichiedenteCodiceChanged()
    End Sub
    Partial Private Sub OnTranscodificaChanging(value As String)
    End Sub
    Partial Private Sub OnTranscodificaChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property Id() As Integer
		Get
			Return Me._Id
		End Get
		Set
			If ((Me._Id = value)  _
						= false) Then
				Me.OnIdChanging(value)
				Me.SendPropertyChanging
				Me._Id = value
				Me.SendPropertyChanged("Id")
				Me.OnIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SistemaRichiedenteAzienda", DbType:="VarChar(16) NOT NULL", CanBeNull:=false)>  _
	Public Property SistemaRichiedenteAzienda() As String
		Get
			Return Me._SistemaRichiedenteAzienda
		End Get
		Set
			If (String.Equals(Me._SistemaRichiedenteAzienda, value) = false) Then
				Me.OnSistemaRichiedenteAziendaChanging(value)
				Me.SendPropertyChanging
				Me._SistemaRichiedenteAzienda = value
				Me.SendPropertyChanged("SistemaRichiedenteAzienda")
				Me.OnSistemaRichiedenteAziendaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SistemaRichiedenteCodice", DbType:="VarChar(16) NOT NULL", CanBeNull:=false)>  _
	Public Property SistemaRichiedenteCodice() As String
		Get
			Return Me._SistemaRichiedenteCodice
		End Get
		Set
			If (String.Equals(Me._SistemaRichiedenteCodice, value) = false) Then
				Me.OnSistemaRichiedenteCodiceChanging(value)
				Me.SendPropertyChanging
				Me._SistemaRichiedenteCodice = value
				Me.SendPropertyChanged("SistemaRichiedenteCodice")
				Me.OnSistemaRichiedenteCodiceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UoRichiedenteAzienda", DbType:="VarChar(16) NOT NULL", CanBeNull:=false)>  _
	Public Property UoRichiedenteAzienda() As String
		Get
			Return Me._UoRichiedenteAzienda
		End Get
		Set
			If (String.Equals(Me._UoRichiedenteAzienda, value) = false) Then
				Me.OnUoRichiedenteAziendaChanging(value)
				Me.SendPropertyChanging
				Me._UoRichiedenteAzienda = value
				Me.SendPropertyChanged("UoRichiedenteAzienda")
				Me.OnUoRichiedenteAziendaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UoRichiedenteCodice", DbType:="VarChar(16) NOT NULL", CanBeNull:=false)>  _
	Public Property UoRichiedenteCodice() As String
		Get
			Return Me._UoRichiedenteCodice
		End Get
		Set
			If (String.Equals(Me._UoRichiedenteCodice, value) = false) Then
				Me.OnUoRichiedenteCodiceChanging(value)
				Me.SendPropertyChanging
				Me._UoRichiedenteCodice = value
				Me.SendPropertyChanged("UoRichiedenteCodice")
				Me.OnUoRichiedenteCodiceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Transcodifica", DbType:="VarChar(128) NOT NULL", CanBeNull:=false)>  _
	Public Property Transcodifica() As String
		Get
			Return Me._Transcodifica
		End Get
		Set
			If (String.Equals(Me._Transcodifica, value) = false) Then
				Me.OnTranscodificaChanging(value)
				Me.SendPropertyChanging
				Me._Transcodifica = value
				Me.SendPropertyChanged("Transcodifica")
				Me.OnTranscodificaChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.TranscodificaCUP")>  _
Partial Public Class TranscodificaCUP
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Id As Integer
	
	Private _CodiceAgenda As String
	
	Private _Transcodifica As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdChanged()
    End Sub
    Partial Private Sub OnCodiceAgendaChanging(value As String)
    End Sub
    Partial Private Sub OnCodiceAgendaChanged()
    End Sub
    Partial Private Sub OnTranscodificaChanging(value As String)
    End Sub
    Partial Private Sub OnTranscodificaChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property Id() As Integer
		Get
			Return Me._Id
		End Get
		Set
			If ((Me._Id = value)  _
						= false) Then
				Me.OnIdChanging(value)
				Me.SendPropertyChanging
				Me._Id = value
				Me.SendPropertyChanged("Id")
				Me.OnIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CodiceAgenda", DbType:="VarChar(256) NOT NULL", CanBeNull:=false)>  _
	Public Property CodiceAgenda() As String
		Get
			Return Me._CodiceAgenda
		End Get
		Set
			If (String.Equals(Me._CodiceAgenda, value) = false) Then
				Me.OnCodiceAgendaChanging(value)
				Me.SendPropertyChanging
				Me._CodiceAgenda = value
				Me.SendPropertyChanged("CodiceAgenda")
				Me.OnCodiceAgendaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Transcodifica", DbType:="VarChar(128) NOT NULL", CanBeNull:=false)>  _
	Public Property Transcodifica() As String
		Get
			Return Me._Transcodifica
		End Get
		Set
			If (String.Equals(Me._Transcodifica, value) = false) Then
				Me.OnTranscodificaChanging(value)
				Me.SendPropertyChanging
				Me._Transcodifica = value
				Me.SendPropertyChanged("Transcodifica")
				Me.OnTranscodificaChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
